cacm-1588.html: list-processing <b>languages</b> suffered inability deal directly complex <b>data</b> <b>structures</b> and/or inability perform complete range programming language operations <b>data</b> <b>list</b> <b>structures</b>
cacm-1098.html: important common features list-processing <b>languages</b> reviewed forms <b>data</b> <b>structures</b> manipulated necessity dynamic allocation storage pushdown stores recursive operations
cacm-2051.html: output <b>list</b> correspondence <b>types</b> frequency occurrence <b>data</b> separate listing correspondence word-pairs showing correspondence unless relative arbitrarily chosen cutoff point
cacm-1470.html: principal ways getting inputs routines 1 referring <b>data</b> itself 2 referring <b>data</b> name 3 referring implicitly means variables functions
cacm-1457.html: <b>data</b> manipulation programming problems automatic information retrieval automatic information retrieval programs require manipulation variety <b>data</b> <b>structures</b> including linear text sparse matrices tree <b>list</b> <b>structures</b>
cacm-2265.html: cacm november 1972 ledgard h f <b>type</b> checking <b>types</b> lambda calculus models programming <b>languages</b> syntax semantics compiler writing language implementation formal definition 4.12 4.22 5.2 5.21 5.23 ca721104 jb january 27 1978 230 pm
cacm-2956.html: ideas <b>data</b> <b>types</b> high-level <b>languages</b> number issues explored concerning notion <b>data</b> <b>type</b> set values set primitive operations values
cacm-1485.html: structure programming <b>languages</b> paper major components programming language identified as 1 elementary program statement 2 mechanisms linking elementary statements together 3 means program obtain <b>data</b> inputs
cacm-2941.html: cacm august 1977 geschke c m morris j h jr satterthwaite e h programming <b>languages</b> <b>types</b> modules <b>data</b> <b>structures</b> systems programming 4.22 ca770802 jb december 28 1977 807
cacm-2699.html: cacm december 1975 schwartz j t program optimization automatic programming high-level <b>languages</b> set-theoretic <b>languages</b> <b>data</b> structure choice 4.12 4.20 4.22 ca751208 jb january 5 1978 353 pm
cacm-2406.html: <b>data</b> definition <b>languages</b> concentrate declaration logical <b>data</b> <b>structures</b> concern <b>structures</b> physically realized computer system
cacm-2651.html: resulting treatment <b>data</b> <b>types</b> includes provision programmer-defined <b>data</b> <b>types</b> <b>data</b> <b>types</b> generic routines programmer control <b>type</b> conversion flexible <b>data</b> <b>type</b> behavior context efficient compiled code compact <b>data</b> representation
cacm-3105.html: programming <b>languages</b> access control <b>data</b> <b>types</b> abstract <b>data</b> <b>types</b> <b>type</b> checking capabilities 4.20 4.35 ca780502 dh february 26 1979 319 pm
cacm-2314.html: cacm july 1972 bobrow d g <b>list</b> processing programming <b>languages</b> design programming <b>languages</b> interactive systems control <b>structures</b> <b>data</b> <b>structures</b> programming primitives semantics advanced programming systems 1.3 4.2 4.22 4.3 4.32 5.23 5.24 ca720714 jb january 30 1978 130 pm
cacm-1324.html: difficult important research questions advancement general-purpose language processors seen concerned measuring <b>dealing</b> ambiguities translating formal <b>languages</b> searching large tree <b>structures</b>
cacm-2254.html: dynamic partitioning array <b>languages</b> classical process partitioning array subarrays extended array language operation
cacm-2931.html: experience independent workers method <b>data</b> <b>types</b> lattices or partial orderings information content ordering continuous mappings demonstrated flexibility approach providing definitions proofs clean undue dependence implementations
cacm-2906.html: cacm november 1977 hammer m owe w g kruskal v j wladawsky <b>i</b> high level language nonprocedural language <b>data</b> flow language business application business <b>data</b> processing structured programming modular programming format specification design methodology 3.50 4.22 4.32 ca771110 jb december 27 1977 706
cacm-2316.html: cacm july 1972 sammet j e programming <b>languages</b> higher level <b>languages</b> <b>languages</b> history future directions language interrelationships programming language tree programming language history programming language future 1.2 4.2 ca720712 jb january 30 1978 138 pm
cacm-2295.html: comment composition semantics algol 68 cacm august 1972 van der poel w l programming primitives programming <b>languages</b> algol semantics recursive composition design programming <b>languages</b> <b>data</b> <b>structures</b> 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30 1978 929
cacm-2002.html: cacm september 1970 hirschsoln <b>i</b> computer graphics <b>data</b> potting <b>data</b> display syntax hardware independent software display device independent software plot elements self-scaled plots user interaction tablet organization map display projection 4.13 4.29 4.49 4.9 ca700903 jb february 10 1978 208 pm
cacm-2470.html: cacm august 1973 maclennan b j semantics formal systems lambda-calculus extensible <b>languages</b> <b>data</b> <b>types</b> modes axioms correctness formal language definition formal description <b>data</b> <b>structures</b> description <b>languages</b> models computation 4.22 5.21 5.24 5.26 ca730804 jb january 23 1978 1101
cacm-1710.html: asp-a ring implemented associative structure package asp general purpose associative <b>data</b> structure package arbitrary number <b>data</b> items arbitrary number relationships <b>data</b> items represented
cacm-0409.html: cl-1, environment compiler flexible, large-scale programming system facilitate solution information processing problems provide intercommunication programs and/or programmers developed realized ibm 709/7090 computer.
cacm-2341.html: cacm june 1972 gimpel j f character manipulation output formatting string processing graphics nonnumerical programming snobol4 <b>data</b> <b>types</b> two-dimensional mathematics test processing flowcharting 4.22 4.41 ca720604 jb january 30 1978 438 pm
cacm-1769.html: cacm april 1968 harder e l barriers philosophy developments computer-aided design problem-oriented <b>languages</b> <b>data</b> communication education computer science forecast survey introduction 1.0 1.3 2.1 3.24 4.0 6.20 6.30 ca680401 jb february 23 1978 1136
cacm-2957.html: cacm june 1977 smith j m smith d c p <b>data</b> abstraction relational database <b>data</b> <b>type</b> aggregation database design <b>data</b> structure knowledge representation <b>data</b> definition language 3.65 3.69 3.79 4.29 4.33 4.34 ca770606 jb december 29 1977 1233
cacm-2939.html: cacm august 1977 liskov b snyder a atkinson r schaffert c programming <b>languages</b> <b>data</b> <b>types</b> <b>data</b> abstractions control abstractions programming methodology separate compilation 4.0 4.12 4.20 4.22 ca770804 jb december 28 1977 749
cacm-3103.html: cacm may 1978 low j abstract <b>data</b> <b>types</b> automatic programming <b>data</b> <b>structures</b> optimizing compilers sets lists 4.12 4.22 4.6 ca780504 dh february 26 1979 151 pm
cacm-1835.html: cacm october 1969 dewar r b k hochsprung r r <b>languages</b> programming <b>languages</b> student programming systems language design high school programs college courses 1.51 1.52 4.12 4.22 ca691011 jb february 15 1978 154 pm
cacm-2317.html: programming systems <b>languages</b> 1965-1975 spite impressive gains pl/i fortran cobol remain <b>languages</b> worlds production programs written remain foreseeable future
cacm-1350.html: augmented predictive analyzer context-free languages-its relative efficiency proven greibach context-free grammar g standard-form grammar gs constructed generates <b>languages</b> generated rules form cy1 ym m o yi intermediate symbols terminal symbol
cacm-1051.html: multiword <b>list</b> items <b>list</b> concept originally proposed newell simon shaw single computer words elements <b>list</b>
cacm-2705.html: programming <b>languages</b> natural <b>languages</b> mathematics social aspects programming illuminated analogies similar aspects mathematics natural <b>languages</b>
cacm-2003.html: interactive software system computers-aided design: application circuit project characteristics interactive software system, intended constitute interface designer computer steps design process, presented.
cacm-2198.html: cacm may 1971 codasyl systems committee <b>data</b> base management systems programming <b>languages</b> <b>data</b> <b>structures</b> storage <b>structures</b> information retrieval transaction processing 3.5 3.70 3.72 3.73 3.74 4.29 ca710501 jb february 3 1978 318 pm
cacm-1162.html: assembly <b>languages</b> generally provide one-for-one translation symbolic numeric version program is assembly language machine language
cacm-1459.html: requirements real-time <b>languages</b> real-time <b>languages</b> requirements programming <b>languages</b> special nature applications environment object programs executed environment compiled
cacm-2138.html: cacm december 1971 wulf w a russell d b programming <b>languages</b> implementation language systems programming <b>data</b> <b>structures</b> 4.12 4.21 4.22 ca711205 jb february 2 1978 1009
cacm-1035.html: characteristics fortran cep language fortran cep <b>languages</b> differs fortran ii mainly because 1 extends variety modes real quantities 2 suitable mixtures input/output <b>list</b> expression quantities occur modes 3 makes address greater number input/output equipment 4 removes restrictions complexity <b>list</b> quantities transmitted magnetic core memory drum magnetic tape units
cacm-2078.html: cacm april 1970 eastman c m automated design <b>data</b> <b>structures</b> computer graphics computer-aided design engineering design architectural design robots 3.20 3.2 2 3.26 3.41 3.63 ca700406 jb february 13 1978 303 pm
cacm-2940.html: cacm august 1977 shaw m wulf w a abstraction representation abstract <b>data</b> <b>types</b> assertions control specialization correctness generatorsinvariants iteration statements modular decomposition program specifications programming <b>languages</b> programming methodology proofs correctness <b>types</b> verification 4.20 5.24 ca770803 jb december 28 1977 759
cacm-1937.html: codas <b>data</b> display system codas customer oriented <b>data</b> system user-oriented <b>data</b> retrieval display system
cacm-1847.html: algorithm finding fundamental set cycles graph fast method presented finding fundamental set cycles undirected finite graph.
cacm-3102.html: incorporation units programming <b>languages</b> issues programming language aid keeping track physical units feet sec etc
cacm-1678.html: computer science program automata formal <b>languages</b> switching theory theory computability 1.5 5.2 6.1 ca681101 jb february 21 1978 316 pm
cacm-2148.html: cacm november 1971 branquart p lewi j sintzoff m wodon p l programming primitives programming <b>languages</b> algol semantics recursive composition design programming <b>languages</b> <b>data</b> <b>structures</b> 1.3 4.2 4.22 5.23 5.24 ca711101 jb february 2 1978 1149
cacm-2814.html: roster programming <b>languages</b> 1974-75 cacm december 1976 sammet j e ca761201 jb january 3 1978 238 pm
cacm-1456.html: important conclusion <b>that</b> lisp <b>list</b> processing <b>languages</b> ideally suited producing complex associative <b>structures</b> inadequate vehicles language processing large scale-at east auxiliary memory continuous extension core memory
cacm-2411.html: tree-structured programs cacm november 1973 wegner e control <b>structures</b> flowcharts goto statements inductive assertion fix points optimization compilers program documentation program flow graphs programming language design proof programs semantics programming <b>languages</b> structured programming
cacm-3030.html: cacm december 1978 spitzen j levitt k robinson l program verification specification <b>data</b> abstraction software modules hierarchical <b>structures</b> 4.0 4.6 5.21 5.24 ca781209 dh january 16 1979443 pm
cacm-1135.html: philosophy potential overcome well-known deficiencies business-oriented <b>languages</b> fully meets requirements set codasyl <b>languages</b> including machine-independence
cacm-2684.html: numerous <b>interesting</b> difficult issues syntax stem context-sensitive requirements notably compatibility declaration identifier uses correspondence actual formal parameters issues arising block structure
cacm-2084.html: note complement inherently ambiguous context-free <b>languages</b> cacm march 1970 maurer h a ambiguity inherent ambiguity complement context-free language chomsky-language phrase structure language production system <b>type</b> 2 language bounded language 5.22 5.24 ca700314 jb february 13 1978 337 pm
cacm-1650.html: mean expects <b>data</b> standard order leaves <b>data</b> order analyses <b>data</b> performed rearrangement
cacm-1385.html: computer technology communist china 1956-1965 based information translations communist chinese news items periodical literature 1965 period computer technology china reviewed headings 1 initial planning organization educational aspects computer technology automation 2 machine development progress major specific machines 1958-59 soviet aid vacuum 1960-64 due withdrawal soviet aid presumably all-chinese-made machines 1965 present 3 computer applications 4 trend automation control production processes <b>data</b> processing 5 yun chou hsueh science operation programming campaign 1958-60 attempt made bring concepts linear programming ordinary chinese workers peasants
cacm-1988.html: formalism translator interactions formalism presented describing actions processors programming languages-compilers, interpreters, assemblers-and interactions complex systems compiler-compilers extendible languages.
cacm-2081.html: complete calculi matrices matrix calculus introduced intention developing <b>data</b> <b>structures</b> suitable high level algorithmic language mathematical programming
cacm-2253.html: cacm december 1972 bayer r witzgall c address calculations algorithm transformation compilation <b>data</b> <b>structures</b> indexing name indexing position index domain index map index range matrix expressions normal form programming <b>languages</b> program optimization range operations symbolic manipulation syntactic analysis well-formed expressions 4.12 4.22 5.14 ca721202 jb january 27 1978 112 pm
cacm-2527.html: machine allocates memory executes statements calls functions converts numbers <b>type</b> another checks subscripts detects <b>types</b> programmer errors
cacm-1397.html: proceedings acm symposium symbolic algebraic manipulation acm symposium symbolic algebraic manipulation brought hundred people interested programming <b>languages</b> designed manipulation algebraic formulas symbol strings applications algorithms implementation
cacm-3031.html: cacm december 1978 guttag j horowitz e musser d abstract <b>data</b> <b>type</b> correctness proof <b>data</b> <b>type</b> <b>data</b> structure specification 4.34 5.24 ca781208 dh january 18 1979 251 pm
cacm-3188.html: semiotics programming <b>languages</b> based paper semiotics dimension.
cacm-2060.html: functional approach <b>data</b> <b>structures</b> references insure process accepts <b>data</b> structure accept logically equivalent structure regardless internal representation
cacm-2767.html: comparison simulation event <b>list</b> algorithms algorithms considered schedule events general purpose discrete simulation system
cacm-1869.html: block <b>structures</b> indirect addressing garbage collection programming <b>languages</b> included explicit implicit block <b>structures</b> provide naming convenience programmer
cacm-3077.html: cacm august 1978 backus j functional programming algebra programs combining forms functional forms programming <b>languages</b> von neumann computers von neumann <b>languages</b> models computing systems applicative computing systems applicative state transition systems program transformation program correctness program termination metacomposition 4.20 4.29 5.20 5.24 5.26 ca780801 dh february 7 1979 313 pm
cacm-2718.html: cacm october 1975 gerritsen r network model databases <b>data</b> base task group database design <b>data</b> structure automatic programming translation nonprocedural <b>languages</b> 3.5 3.64 3.7 4.2 5.23 ca751001 jb january 6 1978 202 pm
cacm-2326.html: cacm july 1972 manna z vuillemin j verification techniques semantics programming <b>languages</b> fix points recursive programs computational induction 5.23 5.24 ca720702 jb january 30 1978 342 pm
cacm-1366.html: substantial costs occur training implementation computer time inappropriate language chosenore computer simulation <b>languages</b> developed comparisons evaluations existing <b>languages</b> designers implementers users
cacm-0920.html: documentation programming <b>languages</b> cacm march 1963 yngve v h sammet j e ca630301 jb march 14 1978 151 pm
cacm-2558.html: protection programming <b>languages</b> linguistic mechanisms protect subprogram anothers malfunctioning described
cacm-1309.html: special <b>languages</b> extract matran permits selective extraction <b>data</b> subset efficient processing computational sequence flexible presentation results tabular graphical form
cacm-3198.html: microprogramming emulators programming <b>languages</b> problem concerned converting language action intellectual energy mechanical energy
cacm-1142.html: extension algol-like <b>languages</b> cacm february 1964 rose g f ca640201 jb march 10 1978 457
cacm-2958.html: abstract <b>data</b> <b>types</b> development <b>data</b> <b>structures</b> abstract <b>data</b> <b>types</b> play significant role development software reliable efficient flexible
cacm-2580.html: cacm november 1974 rader g m artificial intelligence heuristic programming models cognitive processes computer music computer composition music theory formal <b>languages</b> probabilistic grammars 3.44 3.65 5.23 ca741104 jb january 16 1978 1035
cacm-2032.html: cacm july 1970 coffman jr e g eve j <b>data</b> <b>structures</b> tree <b>structures</b> <b>structures</b> scatter tables hashing functions information retrieval 3.70 3.74 ca700705 jb february 13 1978 849
cacm-1641.html: fast slow memories list-processing <b>languages</b> scheme permitting substantial increase memory space utilized store list-structured <b>data</b>
cacm-3173.html: underlying conceptual <b>structures</b> identified 1 transaction event occurs computer involves operation object location 2 prestatement set transactions line code 3 chunks <b>frequently</b> occurring configurations prestatements lines code
cacm-1703.html: accommodating standards identification programming <b>languages</b> user public wants standardization reliable identification programming <b>languages</b> related services
cacm-2710.html: queries relational expressions square <b>data</b> sublanguage paper presents <b>data</b> sublanguage called square intended ad hoc interactive problem solving non-computer specialists
cacm-2390.html: cacm february 1972 pager d interactive system organization scientific community readers writers commentators computer utility information retrieval trees <b>data</b> <b>structures</b> 1.0 1.1 1.59 2.10 3.15 3.32 3.50 3.51 3.70 3.71 3.74 3.9 ca720201 jb february 1 1978 851
cacm-1824.html: aparel-a parse-request language aparel described: language extension algorithmic language (pl/i) pattern-matching capabilities found special purpose <b>languages</b> snobol4 tmg.
cacm-0527.html: definition description <b>list</b> structure concept built elementary <b>list</b> <b>structures</b> recursive process
cacm-2036.html: cacm july 1970 grant c a time-sharing command <b>languages</b> pseudo-teletype interaction conditional job control operating systems 3.80 3.81 4.29 4.39 ca700701 jb february 13 1978 943
cacm-2264.html: cacm november 1972 henderson p lambda calculus formal description program correctness programming <b>languages</b> semantics 4.22 5.23 5.24 ca721105 jb january 27 1978 219 pm
cacm-2833.html: reference count scheme reclaiming non-self-referential <b>structures</b> linearizing compacting copying scheme reorganize storage users discretion proposed
cacm-2184.html: meaning names programming systems assumed similarity function <b>data</b> names programming language names operating system
cacm-0689.html: report visit discuss common programming <b>languages</b> czechoslovakia poland 1963 cacm november 1963 gosden j a merner j n gay r e jones j l christopher j s ca631103 jb march 13 1978 351 pm
cacm-1253.html: quikscript-a simscript- language g-20 quikscript simulation language based simscript programmed entirely algebraic language, 20-gate.
cacm-1764.html: remarks referred <b>papers</b> van dam kahn discussion half session
cacm-2252.html: method incrementally compiling <b>languages</b> nested statement structure method incremental compilation presented applies especially programming <b>languages</b> statements nested such algol pl/i
cacm-1861.html: mad definition facility definition facilities higher level <b>languages</b> described.
cacm-2998.html: empirical study <b>list</b> structure lisp static measurements <b>list</b> structure large lisp programs reported analyzed paper
cacm-0855.html: organization structure dataon disk memory systems efficient sorting <b>data</b> processing programs approach organization structure <b>data</b> bryant disc memory systems sorting performing <b>data</b> processing functions presented
cacm-3106.html: fast algorithm copying <b>list</b> <b>structures</b> algorithm presented copying arbitrarily linked <b>list</b> structure block contiguous storage locations destroying original <b>list</b>
cacm-2886.html: semantic evaluation left paper describes attribute grammars definition programming <b>languages</b> compilers formal definition attribute grammars discussion important aspects included
cacm-3132.html: experiments algorithms find central solutions pattern classification two-class pattern recognition, standard technique algorithm finding hyperplanes separates classes linearly separable training set.
cacm-0321.html: algol 60 confidential algol 60 report,* encountered, describe complex language difficult learn.
