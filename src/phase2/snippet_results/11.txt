cacm-2699.html: automatic data structure choice language <b> high </b> high <b> level </b> level <b> setl </b> setl set-theoretically oriented language <b> high </b> high <b> level </b> level repertoire semantic objects includes finite sets ordered n-tuples sets ordered n-tuples usable mappingscacm-2906.html: <b> high </b> high <b> level </b> level programming language data processing applications application development today labor-in tensivecacm-0724.html: <b> high </b> high percentage programmers apparently entered careers accident proven happy choice expect remain field yearscacm-2782.html: reply gentleman marovich cacm march 1975 karp r a high-level <b> languages </b> languages philosophy language design 4.22 5.19 ca750306 jb january 9 1978 438 pmcacm-1923.html: cacm march 1969 rosin r f operating systems interfaces input-output <b> high </b> high <b> level </b> level <b> languages </b> languages command language 4.22 4.30 4.31 4.41 ca690304 jb february 20 1978 912cacm-2717.html: convert <b> high </b> high <b> level </b> level translation definition language data conversion paper describes <b> high </b> high <b> level </b> level nonprocedural translation definition language convert powerful highly flexible data restructuring capabilitiescacm-2647.html: algorithms reveal properties floating point arithmetic units cacm may 1974 gentleman w m marovich s b floating-point arithmetic high-level <b> languages </b> languages philosophy language design 4.9 5.19 ca740506 jb january 17 1978 404 pmcacm-3171.html: line numbers made cheap technique run-time line number administration implementations <b> high </b> high <b> level </b> level languages.cacm-1835.html: cacm october 1969 dewar r b k hochsprung r r <b> languages </b> languages programming <b> languages </b> languages student programming systems language design <b> high </b> high school programs college courses 1.51 1.52 4.12 4.22 ca691011 jb february 15 1978 154 pmcacm-2267.html: cacm november 1972 malcolm m a floating-point arithmetic high-level <b> languages </b> languages philosophy language design 4.9 5.19 ca721102 jb january 27 1978 239 pmcacm-3150.html: <b> high </b> high <b> level </b> level <b> languages </b> languages enabled programmer escape intricacies machines order code higher <b> level </b> level programming systems provide means understand manipulate complex systems componentscacm-2198.html: problem <b> high </b> high <b> level </b> level interrogation update functions acting network structures mentioned discussion problem catering <b> high </b> high volume transactions initiated terminals parametric users-the lowest <b> level </b> level usercacm-2716.html: cacm october 1975 smith j m yen-tang chang p relational database database optimization inverted file automatic programming query language data manipulation language <b> high </b> high <b> level </b> level language 3.70 4.13 4.33 ca751003 jb january 6 1978 1119cacm-2956.html: ideas data types high-level <b> languages </b> languages number issues explored concerning notion data type set values set primitive operations valuescacm-2316.html: cacm july 1972 sammet j e programming <b> languages </b> languages higher <b> level </b> level <b> languages </b> languages <b> languages </b> languages history future directions language interrelationships programming language tree programming language history programming language future 1.2 4.2 ca720712 jb january 30 1978 138 pmcacm-3148.html: <b> high </b> high <b> level </b> level programming distributed computing programming distributed loosely coupled systems problem growing interestcacm-3077.html: cacm august 1978 backus j functional programming algebra programs combining forms functional forms programming <b> languages </b> languages von neumann computers von neumann <b> languages </b> languages models computing systems applicative computing systems applicative state transition systems program transformation program correctness program termination metacomposition 4.20 4.29 5.20 5.24 5.26 ca780801 dh february 7 1979 313 pmcacm-2081.html: cacm april 1970 bayer r witzgall c complete calculus data structures linear programming matrix matrix concatenation matrix sequences programming <b> languages </b> languages sequence operations symbol manipulation 4.12 4.22 5.14 5.41 ca700403 jb february 13 1978 318 pmcacm-2923.html: high-level data flow analysis contrast predominant low-level termediate text high-level data flow analysis deals programs essentially source <b> level </b> level exploits control flow information implicit clean treecacm-1043.html: talk-a high-level source language debugging technique real-time data extraction talk, meaning take look, debugging technique aids substantially debugging complex real-time programming systems interrupting users program desired points extract previously data.cacm-2003.html: main emphasis description features <b> high </b> high <b> level </b> level user oriented <b> languages </b> languages operating levels interaction basedcacm-2091.html: convenient easy learn use <b> high </b> high <b> level </b> level problem oriented language solve study partial differential equation problems designed practical translator language designed working version constructed significant portion languagecacm-2527.html: implementation <b> high </b> high <b> level </b> level language machine computing machines directly execute statements <b> high </b> high <b> level </b> level language proposed pastcacm-2815.html: high-level binding low-level linkers easy implement scheme compiler enforce agreement complex data types separately compiled modules.cacm-1627.html: application <b> level </b> level changing multilevel storage organization technique organizing devices computer storage system describedcacm-2320.html: cacm july 1972 hansen p b structured multiprogramming programming <b> languages </b> languages operating systems concurrent processes shared data mutual exclusion critical regions process communication synchronizing eventscacm-0281.html: note produce family fast <b> high </b> high precision eminently practical exponential evaluation formulas derived formulationcacm-1872.html: chebyshev interpolation quadrature formulas <b> high </b> high degree errata cacm july 1969 salzer h e ca690708 jb february 17 1978 901cacm-1903.html: chebyshev interpolation quadrature formulas <b> high </b> high degree cacm may 1969 salzer h e chebyshev polynomials chebyshev interpolation chebyshev quadrature chebyshev points chebyshev zeros interpolation quadrature definite integrals 5.13 5.16 ca690506 jb february 17 1978 342 pmcacm-2246.html: cacm december 1972 brown p j portable software <b> level </b> level language machine independent macro processor efficiency 4.12 4.21 4.22 ca721209 jb january 27 1978 1102cacm-2705.html: programming <b> languages </b> languages natural <b> languages </b> languages mathematics social aspects programming illuminated analogies similar aspects mathematics natural <b> languages </b> languagescacm-2873.html: cacm april 1976 raymond j interactive programming problem oriented <b> languages </b> languages computer graphics interpreters analytic geometry 3.20 4.13 4.22 4.9 ca760403 jb january 4 1978 426 pmcacm-2938.html: discipline real-time programming programming divided major categories increasing complexity reasoning program validation: sequential programming, multiprogramming, real-time programming.cacm-2787.html: matrix reduction-an efficient method paper describes efficient method reduction binary matrices arise school time-tabling problems.cacm-3080.html: proving correctness heuristically optimized code system proving programs written <b> high </b> high <b> level </b> level language correctly translated low <b> level </b> level language describedcacm-3026.html: cacm january 1978 borgherson b hanson m hartley p 1100 computer series computer architecture multiprocessing <b> languages </b> languages data management systems end user facilities executive control software 1.3 4.0 4.20 4.30 4.32 4.33 4.35 6.0 6.21 6.30 ca780104 jb march 28 1978 538 pmcacm-3185.html: humble programmer programming job provided approach task full appreciation tremendous difficulty provided stick modest elegant programming <b> languages </b> languages provided respect intrinsic limitations human mind approach task humble programmerscacm-1769.html: cacm april 1968 harder e l barriers philosophy developments computer-aided design problem-oriented <b> languages </b> languages data communication education computer science forecast survey introduction 1.0 1.3 2.1 3.24 4.0 6.20 6.30 ca680401 jb february 23 1978 1136cacm-2398.html: interaction system <b> level </b> level shows students mix advantages independent solo mode computing guided dual mode interactioncacm-0048.html: <b> high </b> high degree redundancy used permitting single-error correcting code minimum-distance-three code 64 10-bit code words employed station identification codecacm-1145.html: straightforward enumerative algorithm require 40 years running time <b> high </b> high speed computer order compare 15-node graphs sophisticated approach called forcacm-0265.html: low <b> level </b> level language subroutines fortran paper describes subroutines coded symbolic <b> languages </b> languages fortran coded programs deal special arithmetic egcacm-2542.html: system based simple <b> high </b> high <b> level </b> level language describe evolving system stages developmentcacm-2593.html: back-end computer data base management proposed data base management function dedicated back-end computer accepts commands in <b> high </b> high <b> level </b> level language codasyl data base task group april 1971 report host computer accesses data base secondary storage resultscacm-2826.html: interactive skeleton techniques enhancing motion dynamics key frame animation significant increase capability controlling motion dynamics key frame animation achieved skeleton control.cacm-2898.html: paper describes conceptual framework <b> high </b> high <b> level </b> level programming language providing nonprocedural sequential facilitiescacm-2954.html: bounded storage algorithm copying cyclic structures algorithm presented copies cyclic list structures bounded workspace linear time.cacm-3027.html: development mu5 computer system outline background mu5 project, aims ideas mu5 discussed.cacm-3127.html: thoth, portable real-time operating system thoth isa real-time operating system designed portable large set machines.cacm-3103.html: automatic data structure selection: overview levels abstraction proved helpful constructing maintaining programs.cacm-2317.html: programming systems <b> languages </b> languages 1965-1975 spite impressive gains pl/i fortran cobol remain <b> languages </b> languages worlds production programs written remain foreseeable futurecacm-1710.html: cacm august 1968 lang c a gray j c associative data structure ring structure lists list structure set <b> languages </b> languages modeling graphics 4.20 4.22 ca680804 jb february 22 1978 1102cacm-2034.html: cacm july 1970 waite w m bootstrapping macro processing machine independence programming <b> languages </b> languages implementation techniques 4.12 4.22 ca700703 jb february 13 1978 924cacm-1861.html: cacm august 1969 arden b w galler b a graham r m mad definitions operators macros higher <b> level </b> level language 4.12 4.22 ca690802 jb february 15 1978 607 pmcacm-1179.html: pufft-the purdue university fast fortran translator core resident, compile-and-go system designed ibm 7090/7094 computer described.cacm-3041.html: median split trees: fast lookup technique frequently occuring keys split trees technique searching sets keys highly skewed frequency distributions.cacm-1552.html: routines package perform <b> high </b> high <b> level </b> level functions automatically allow access control fine internal details wellcacm-1676.html: maintain cohesion system developed written <b> high </b> high <b> level </b> level language minimizes machine dependencies isolates necessarycacm-2931.html: logic programming <b> languages </b> languages logic long terested answers questions computable principle outcome puts bounds possibilities formalizationcacm-0321.html: algol 60 confidential algol 60 report,* encountered, describe complex language difficult learn.cacm-2651.html: cacm may 1974 wegbreit b data types modes mode unions type conversion coercion generic functions extensible <b> languages </b> languages data type definition data description language compilation 4.12 4.13 4.22 ca740502 jb january 17 1978 432 pmcacm-1425.html: flow diagrams turing machines <b> languages </b> languages formation rules part paper flow diagrams introduced represent inter alcacm-2002.html: amesplot-a higher <b> level </b> level data plotting software system amesplot extensible software system designed make display data simple painless neat possiblecacm-2957.html: database abstractions: aggregation aggregation troduced abstraction important conceptualizing real world.cacm-3101.html: cacm may 1978 hanson d griswold r procedures coroutines programming <b> languages </b> languages interpreters snobol 4 backtracking 4.2 4.20 4.22 4.13 ca780506 dh february 26 1979 136 pmcacm-2208.html: storage <b> level </b> level fast store divided number storage areascacm-1641.html: fast slow memories list-processing <b> languages </b> languages scheme permitting substantial increase memory space utilized store list-structured datacacm-0205.html: macro instruction extensions compiler <b> languages </b> languages macroinstruction compilers constructed small set functions made extremely powerfulcacm-2842.html: denotational semantics programming <b> languages </b> languages paper tutorial introduction theory programming language semantics developed d scott c stracheycacm-0081.html: norc high-speed printer cacm june, 1959 gleissner, g. h. ca590603 jb march 22, 1978 6:36 pmcacm-0198.html: high-speed multiplication process digital computers cacm april, 1960 gurzi, f. ca600413 jb march 22, 1978 1:36 pmcacm-1472.html: description <b> high </b> high capacity fast turnaround university computing center operating system univac 1107 case institute reviewedcacm-0731.html: system intended imbeding higher <b> level </b> level <b> languages </b> languages capable calling functions subroutines coded machine languagecacm-1788.html: general processor programming <b> languages </b> languages efforts made develop implementing higher <b> level </b> level programming language construction compiler proved generally satisfactorycacm-1358.html: syntax macros extended translation translation approach extended syntax semantics high-level base language formalism called syntax-macro.cacm-1860.html: algol-based associative language <b> high </b> high <b> level </b> level programming language large complex associative structures designed implementedcacm-1642.html: techniques depend levels secondary storage <b> level </b> level 1 times larger main memory fast <b> level </b> level 2 times larger slower <b> level </b> level 1 cacm february 1967 fisher r o shepard c d ca670201 jb february 28 1978 410 pmcacm-3057.html: optimal togram matching monotone gray <b> level </b> level transformation paper investigates problem optimal togram matching monotone gray <b> level </b> level transformation assigns picture points gray <b> level </b> level gray <b> level </b> level ti j ti tjcacm-1703.html: accommodating standards identification programming <b> languages </b> languages user public wants standardization reliable identification programming <b> languages </b> languages related servicescacm-1459.html: requirements real-time <b> languages </b> languages real-time <b> languages </b> languages requirements programming <b> languages </b> languages special nature applications environment object programs executed environment compiledcacm-1223.html: <b> high </b> high speed compilation efficient object code three-pass compiler properties briefly described passes scan intermediate language produced preceding pass essentially reverse order generated pass hasto read bulky problem-oriented inputcacm-2922.html: proposed attitude aims retaining purity nondeterministic formulation search processes <b> level </b> level the attempt <b> level </b> level deferring coordination problem solving efforts the choice <b> level </b> levelcacm-2295.html: comment composition semantics algol 68 cacm august 1972 van der poel w l programming primitives programming <b> languages </b> languages algol semantics recursive composition design programming <b> languages </b> languages data structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30 1978 929cacm-0232.html: high-speed sorting procedure cacm january, 1960 frank, r. m. lazarus, r. b. ca600104 jb march 22, 1978 2:27 pmcacm-2301.html: generating parsers affix grammars affix grammars two-level grammars similar van wijngaarden's two-level grammars definition algol 68. affix grammars shown koster equal power van wijngaarden grammars.cacm-2560.html: queuing model multiprogrammed computer two-level storage system results presented analysis probabilistic model multiprogrammed computer system two-level storage system sequential dependency accesses devices.cacm-1183.html: note digital computer tedious algebra programming special purpose compiler written fortran ii language made writing long programs computer.cacm-2305.html: plankalkul konrad zuse forerunner todays programming <b> languages </b> languages plankalkul attempt korrad zuse 1940s devise notational conceptual system writing today termed programcacm-2489.html: number multiply-restricted partitions [a1] (algorithm a448) cacm june, 1973 beyer, t. swinehart, d. f. partitions, enumeration, change making, energy-level degeneracies, molecular vibrational energy-levels 3.13 5.30 ca730611 jb january 23, 1978 1:49 pmcacm-0628.html: floating-point number representation algorithmic <b> languages </b> languages cacm march 1962 grau a a ca620304 jb march 20 1978 309 pmcacm-0651.html: survey <b> languages </b> languages systems information retrieval cacm january 1962 grems m ca620108 jb march 20 1978 436 pmcacm-2814.html: roster programming <b> languages </b> languages 1974-75 cacm december 1976 sammet j e ca761201 jb january 3 1978 238 pmcacm-1098.html: finally authors give heuristics aid selection <b> languages </b> languages problem applications concluding <b> languages </b> languages considered distinctly superior list-processing applicationscacm-1713.html: overcoming high-priority paralysis multiprogramming systems: case tory high-priority paralysis degradation occur multiprogramming systems scheduling based primarily preassigned priorities.cacm-2603.html: equivalence reducing transition <b> languages </b> languages deterministic <b> languages </b> languages class reducing transition <b> languages </b> languages introduced eickel paul bauer samelson shown morris proper superclass simple precedence <b> languages </b> languagescacm-0074.html: high-speed sorting procedure cacm july, 1959 shell, d. l. ca590704 jb march 22, 1978 6:20 pmcacm-0111.html: programming numerical solution polynomial equations numerical techniques presented computing roots polynomial equations.cacm-0825.html: pip: photo-interpretive program analysis spark-chamber data* operating computer program processes photographically recorded data described.cacm-2887.html: error density <b> high </b> high 20 percent types contained 80 percent total frequency implies <b> high </b> high potential effectiveness software based correction cobolcacm-1143.html: analysis decay-type data* comparative study made variety numerical techniques fitting experimental data decay type forms involving sums exponentials.cacm-2699.html: automatic data structure choice language <b>high</b> high <b>level</b> level <b>setl</b> setl set-theoretically oriented language <b>high</b> high <b>level</b> level repertoire semantic objects includes finite sets ordered n-tuples sets ordered n-tuples usable mappings
cacm-2906.html: <b>high</b> high <b>level</b> level programming language data processing applications application development today labor-in tensive
cacm-0724.html: <b>high</b> high percentage programmers apparently entered careers accident proven happy choice expect remain field years
cacm-2782.html: reply gentleman marovich cacm march 1975 karp r a high-level <b>languages</b> languages philosophy language design 4.22 5.19 ca750306 jb january 9 1978 438 pm
cacm-1923.html: cacm march 1969 rosin r f operating systems interfaces input-output <b>high</b> high <b>level</b> level <b>languages</b> languages command language 4.22 4.30 4.31 4.41 ca690304 jb february 20 1978 912
cacm-2717.html: convert <b>high</b> high <b>level</b> level translation definition language data conversion paper describes <b>high</b> high <b>level</b> level nonprocedural translation definition language convert powerful highly flexible data restructuring capabilities
cacm-2647.html: algorithms reveal properties floating point arithmetic units cacm may 1974 gentleman w m marovich s b floating-point arithmetic high-level <b>languages</b> languages philosophy language design 4.9 5.19 ca740506 jb january 17 1978 404 pm
cacm-3171.html: line numbers made cheap technique run-time line number administration implementations <b>high</b> high <b>level</b> level languages.
cacm-1835.html: cacm october 1969 dewar r b k hochsprung r r <b>languages</b> languages programming <b>languages</b> languages student programming systems language design <b>high</b> high school programs college courses 1.51 1.52 4.12 4.22 ca691011 jb february 15 1978 154 pm
cacm-2267.html: cacm november 1972 malcolm m a floating-point arithmetic high-level <b>languages</b> languages philosophy language design 4.9 5.19 ca721102 jb january 27 1978 239 pm
cacm-3150.html: <b>high</b> high <b>level</b> level <b>languages</b> languages enabled programmer escape intricacies machines order code higher <b>level</b> level programming systems provide means understand manipulate complex systems components
cacm-2198.html: problem <b>high</b> high <b>level</b> level interrogation update functions acting network structures mentioned discussion problem catering <b>high</b> high volume transactions initiated terminals parametric users-the lowest <b>level</b> level user
cacm-2716.html: cacm october 1975 smith j m yen-tang chang p relational database database optimization inverted file automatic programming query language data manipulation language <b>high</b> high <b>level</b> level language 3.70 4.13 4.33 ca751003 jb january 6 1978 1119
cacm-2956.html: ideas data types high-level <b>languages</b> languages number issues explored concerning notion data type set values set primitive operations values
cacm-2316.html: cacm july 1972 sammet j e programming <b>languages</b> languages higher <b>level</b> level <b>languages</b> languages <b>languages</b> languages history future directions language interrelationships programming language tree programming language history programming language future 1.2 4.2 ca720712 jb january 30 1978 138 pm
cacm-3148.html: <b>high</b> high <b>level</b> level programming distributed computing programming distributed loosely coupled systems problem growing interest
cacm-3077.html: cacm august 1978 backus j functional programming algebra programs combining forms functional forms programming <b>languages</b> languages von neumann computers von neumann <b>languages</b> languages models computing systems applicative computing systems applicative state transition systems program transformation program correctness program termination metacomposition 4.20 4.29 5.20 5.24 5.26 ca780801 dh february 7 1979 313 pm
cacm-2081.html: cacm april 1970 bayer r witzgall c complete calculus data structures linear programming matrix matrix concatenation matrix sequences programming <b>languages</b> languages sequence operations symbol manipulation 4.12 4.22 5.14 5.41 ca700403 jb february 13 1978 318 pm
cacm-2923.html: high-level data flow analysis contrast predominant low-level termediate text high-level data flow analysis deals programs essentially source <b>level</b> level exploits control flow information implicit clean tree
cacm-1043.html: talk-a high-level source language debugging technique real-time data extraction talk, meaning take look, debugging technique aids substantially debugging complex real-time programming systems interrupting users program desired points extract previously data.
cacm-2003.html: main emphasis description features <b>high</b> high <b>level</b> level user oriented <b>languages</b> languages operating levels interaction based
cacm-2091.html: convenient easy learn use <b>high</b> high <b>level</b> level problem oriented language solve study partial differential equation problems designed practical translator language designed working version constructed significant portion language
cacm-2527.html: implementation <b>high</b> high <b>level</b> level language machine computing machines directly execute statements <b>high</b> high <b>level</b> level language proposed past
cacm-2815.html: high-level binding low-level linkers easy implement scheme compiler enforce agreement complex data types separately compiled modules.
cacm-1627.html: application <b>level</b> level changing multilevel storage organization technique organizing devices computer storage system described
cacm-2320.html: cacm july 1972 hansen p b structured multiprogramming programming <b>languages</b> languages operating systems concurrent processes shared data mutual exclusion critical regions process communication synchronizing events
cacm-0281.html: note produce family fast <b>high</b> high precision eminently practical exponential evaluation formulas derived formulation
cacm-1872.html: chebyshev interpolation quadrature formulas <b>high</b> high degree errata cacm july 1969 salzer h e ca690708 jb february 17 1978 901
cacm-1903.html: chebyshev interpolation quadrature formulas <b>high</b> high degree cacm may 1969 salzer h e chebyshev polynomials chebyshev interpolation chebyshev quadrature chebyshev points chebyshev zeros interpolation quadrature definite integrals 5.13 5.16 ca690506 jb february 17 1978 342 pm
cacm-2246.html: cacm december 1972 brown p j portable software <b>level</b> level language machine independent macro processor efficiency 4.12 4.21 4.22 ca721209 jb january 27 1978 1102
cacm-2705.html: programming <b>languages</b> languages natural <b>languages</b> languages mathematics social aspects programming illuminated analogies similar aspects mathematics natural <b>languages</b> languages
cacm-2873.html: cacm april 1976 raymond j interactive programming problem oriented <b>languages</b> languages computer graphics interpreters analytic geometry 3.20 4.13 4.22 4.9 ca760403 jb january 4 1978 426 pm
cacm-2938.html: discipline real-time programming programming divided major categories increasing complexity reasoning program validation: sequential programming, multiprogramming, real-time programming.
cacm-2787.html: matrix reduction-an efficient method paper describes efficient method reduction binary matrices arise school time-tabling problems.
cacm-3080.html: proving correctness heuristically optimized code system proving programs written <b>high</b> high <b>level</b> level language correctly translated low <b>level</b> level language described
cacm-3026.html: cacm january 1978 borgherson b hanson m hartley p 1100 computer series computer architecture multiprocessing <b>languages</b> languages data management systems end user facilities executive control software 1.3 4.0 4.20 4.30 4.32 4.33 4.35 6.0 6.21 6.30 ca780104 jb march 28 1978 538 pm
cacm-3185.html: humble programmer programming job provided approach task full appreciation tremendous difficulty provided stick modest elegant programming <b>languages</b> languages provided respect intrinsic limitations human mind approach task humble programmers
cacm-1769.html: cacm april 1968 harder e l barriers philosophy developments computer-aided design problem-oriented <b>languages</b> languages data communication education computer science forecast survey introduction 1.0 1.3 2.1 3.24 4.0 6.20 6.30 ca680401 jb february 23 1978 1136
cacm-2398.html: interaction system <b>level</b> level shows students mix advantages independent solo mode computing guided dual mode interaction
cacm-0048.html: <b>high</b> high degree redundancy used permitting single-error correcting code minimum-distance-three code 64 10-bit code words employed station identification code
cacm-1145.html: straightforward enumerative algorithm require 40 years running time <b>high</b> high speed computer order compare 15-node graphs sophisticated approach called for
cacm-0265.html: low <b>level</b> level language subroutines fortran paper describes subroutines coded symbolic <b>languages</b> languages fortran coded programs deal special arithmetic eg
cacm-2542.html: system based simple <b>high</b> high <b>level</b> level language describe evolving system stages development
cacm-2593.html: back-end computer data base management proposed data base management function dedicated back-end computer accepts commands in <b>high</b> high <b>level</b> level language codasyl data base task group april 1971 report host computer accesses data base secondary storage results
cacm-2826.html: interactive skeleton techniques enhancing motion dynamics key frame animation significant increase capability controlling motion dynamics key frame animation achieved skeleton control.
cacm-2898.html: paper describes conceptual framework <b>high</b> high <b>level</b> level programming language providing nonprocedural sequential facilities
cacm-2954.html: bounded storage algorithm copying cyclic structures algorithm presented copies cyclic list structures bounded workspace linear time.
cacm-3027.html: development mu5 computer system outline background mu5 project, aims ideas mu5 discussed.
cacm-3127.html: thoth, portable real-time operating system thoth isa real-time operating system designed portable large set machines.
cacm-3103.html: automatic data structure selection: overview levels abstraction proved helpful constructing maintaining programs.
cacm-2317.html: programming systems <b>languages</b> languages 1965-1975 spite impressive gains pl/i fortran cobol remain <b>languages</b> languages worlds production programs written remain foreseeable future
cacm-1710.html: cacm august 1968 lang c a gray j c associative data structure ring structure lists list structure set <b>languages</b> languages modeling graphics 4.20 4.22 ca680804 jb february 22 1978 1102
cacm-2034.html: cacm july 1970 waite w m bootstrapping macro processing machine independence programming <b>languages</b> languages implementation techniques 4.12 4.22 ca700703 jb february 13 1978 924
cacm-1861.html: cacm august 1969 arden b w galler b a graham r m mad definitions operators macros higher <b>level</b> level language 4.12 4.22 ca690802 jb february 15 1978 607 pm
cacm-1179.html: pufft-the purdue university fast fortran translator core resident, compile-and-go system designed ibm 7090/7094 computer described.
cacm-3041.html: median split trees: fast lookup technique frequently occuring keys split trees technique searching sets keys highly skewed frequency distributions.
cacm-1552.html: routines package perform <b>high</b> high <b>level</b> level functions automatically allow access control fine internal details well
cacm-1676.html: maintain cohesion system developed written <b>high</b> high <b>level</b> level language minimizes machine dependencies isolates necessary
cacm-2931.html: logic programming <b>languages</b> languages logic long terested answers questions computable principle outcome puts bounds possibilities formalization
cacm-0321.html: algol 60 confidential algol 60 report,* encountered, describe complex language difficult learn.
cacm-2651.html: cacm may 1974 wegbreit b data types modes mode unions type conversion coercion generic functions extensible <b>languages</b> languages data type definition data description language compilation 4.12 4.13 4.22 ca740502 jb january 17 1978 432 pm
cacm-1425.html: flow diagrams turing machines <b>languages</b> languages formation rules part paper flow diagrams introduced represent inter al
cacm-2002.html: amesplot-a higher <b>level</b> level data plotting software system amesplot extensible software system designed make display data simple painless neat possible
cacm-2957.html: database abstractions: aggregation aggregation troduced abstraction important conceptualizing real world.
cacm-3101.html: cacm may 1978 hanson d griswold r procedures coroutines programming <b>languages</b> languages interpreters snobol 4 backtracking 4.2 4.20 4.22 4.13 ca780506 dh february 26 1979 136 pm
cacm-2208.html: storage <b>level</b> level fast store divided number storage areas
cacm-1641.html: fast slow memories list-processing <b>languages</b> languages scheme permitting substantial increase memory space utilized store list-structured data
cacm-0205.html: macro instruction extensions compiler <b>languages</b> languages macroinstruction compilers constructed small set functions made extremely powerful
cacm-2842.html: denotational semantics programming <b>languages</b> languages paper tutorial introduction theory programming language semantics developed d scott c strachey
cacm-0081.html: norc high-speed printer cacm june, 1959 gleissner, g. h. ca590603 jb march 22, 1978 6:36 pm
cacm-0198.html: high-speed multiplication process digital computers cacm april, 1960 gurzi, f. ca600413 jb march 22, 1978 1:36 pm
cacm-1472.html: description <b>high</b> high capacity fast turnaround university computing center operating system univac 1107 case institute reviewed
cacm-0731.html: system intended imbeding higher <b>level</b> level <b>languages</b> languages capable calling functions subroutines coded machine language
cacm-1788.html: general processor programming <b>languages</b> languages efforts made develop implementing higher <b>level</b> level programming language construction compiler proved generally satisfactory
cacm-1358.html: syntax macros extended translation translation approach extended syntax semantics high-level base language formalism called syntax-macro.
cacm-1860.html: algol-based associative language <b>high</b> high <b>level</b> level programming language large complex associative structures designed implemented
cacm-1642.html: techniques depend levels secondary storage <b>level</b> level 1 times larger main memory fast <b>level</b> level 2 times larger slower <b>level</b> level 1 cacm february 1967 fisher r o shepard c d ca670201 jb february 28 1978 410 pm
cacm-3057.html: optimal togram matching monotone gray <b>level</b> level transformation paper investigates problem optimal togram matching monotone gray <b>level</b> level transformation assigns picture points gray <b>level</b> level gray <b>level</b> level ti j ti tj
cacm-1703.html: accommodating standards identification programming <b>languages</b> languages user public wants standardization reliable identification programming <b>languages</b> languages related services
cacm-1459.html: requirements real-time <b>languages</b> languages real-time <b>languages</b> languages requirements programming <b>languages</b> languages special nature applications environment object programs executed environment compiled
cacm-1223.html: <b>high</b> high speed compilation efficient object code three-pass compiler properties briefly described passes scan intermediate language produced preceding pass essentially reverse order generated pass hasto read bulky problem-oriented input
cacm-2922.html: proposed attitude aims retaining purity nondeterministic formulation search processes <b>level</b> level the attempt <b>level</b> level deferring coordination problem solving efforts the choice <b>level</b> level
cacm-2295.html: comment composition semantics algol 68 cacm august 1972 van der poel w l programming primitives programming <b>languages</b> languages algol semantics recursive composition design programming <b>languages</b> languages data structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30 1978 929
cacm-0232.html: high-speed sorting procedure cacm january, 1960 frank, r. m. lazarus, r. b. ca600104 jb march 22, 1978 2:27 pm
cacm-2301.html: generating parsers affix grammars affix grammars two-level grammars similar van wijngaarden's two-level grammars definition algol 68. affix grammars shown koster equal power van wijngaarden grammars.
cacm-2560.html: queuing model multiprogrammed computer two-level storage system results presented analysis probabilistic model multiprogrammed computer system two-level storage system sequential dependency accesses devices.
cacm-1183.html: note digital computer tedious algebra programming special purpose compiler written fortran ii language made writing long programs computer.
cacm-2305.html: plankalkul konrad zuse forerunner todays programming <b>languages</b> languages plankalkul attempt korrad zuse 1940s devise notational conceptual system writing today termed program
cacm-2489.html: number multiply-restricted partitions [a1] (algorithm a448) cacm june, 1973 beyer, t. swinehart, d. f. partitions, enumeration, change making, energy-level degeneracies, molecular vibrational energy-levels 3.13 5.30 ca730611 jb january 23, 1978 1:49 pm
cacm-0628.html: floating-point number representation algorithmic <b>languages</b> languages cacm march 1962 grau a a ca620304 jb march 20 1978 309 pm
cacm-0651.html: survey <b>languages</b> languages systems information retrieval cacm january 1962 grems m ca620108 jb march 20 1978 436 pm
cacm-2814.html: roster programming <b>languages</b> languages 1974-75 cacm december 1976 sammet j e ca761201 jb january 3 1978 238 pm
cacm-1098.html: finally authors give heuristics aid selection <b>languages</b> languages problem applications concluding <b>languages</b> languages considered distinctly superior list-processing applications
cacm-1713.html: overcoming high-priority paralysis multiprogramming systems: case tory high-priority paralysis degradation occur multiprogramming systems scheduling based primarily preassigned priorities.
cacm-2603.html: equivalence reducing transition <b>languages</b> languages deterministic <b>languages</b> languages class reducing transition <b>languages</b> languages introduced eickel paul bauer samelson shown morris proper superclass simple precedence <b>languages</b> languages
cacm-0074.html: high-speed sorting procedure cacm july, 1959 shell, d. l. ca590704 jb march 22, 1978 6:20 pm
cacm-0111.html: programming numerical solution polynomial equations numerical techniques presented computing roots polynomial equations.
cacm-0825.html: pip: photo-interpretive program analysis spark-chamber data* operating computer program processes photographically recorded data described.
cacm-2887.html: error density <b>high</b> high 20 percent types contained 80 percent total frequency implies <b>high</b> high potential effectiveness software based correction cobol
cacm-1143.html: analysis decay-type data* comparative study made variety numerical techniques fitting experimental data decay type forms involving sums exponentials.
cacm-2699.html: automatic data structure choice language <b>high</b> <b>level</b> <b>setl</b> set-theoretically oriented language <b>high</b> <b>level</b> repertoire semantic objects includes finite sets ordered n-tuples sets ordered n-tuples usable mappings
cacm-2906.html: <b>high</b> <b>level</b> programming language data processing applications application development today labor-in tensive
cacm-0724.html: <b>high</b> percentage programmers apparently entered careers accident proven happy choice expect remain field years
cacm-2782.html: reply gentleman marovich cacm march 1975 karp r a high-level <b>languages</b> philosophy language design 4.22 5.19 ca750306 jb january 9 1978 438 pm
cacm-1923.html: cacm march 1969 rosin r f operating systems interfaces input-output <b>high</b> <b>level</b> <b>languages</b> command language 4.22 4.30 4.31 4.41 ca690304 jb february 20 1978 912
cacm-2717.html: convert <b>high</b> <b>level</b> translation definition language data conversion paper describes <b>high</b> <b>level</b> nonprocedural translation definition language convert powerful highly flexible data restructuring capabilities
cacm-2647.html: algorithms reveal properties floating point arithmetic units cacm may 1974 gentleman w m marovich s b floating-point arithmetic high-level <b>languages</b> philosophy language design 4.9 5.19 ca740506 jb january 17 1978 404 pm
cacm-3171.html: line numbers made cheap technique run-time line number administration implementations <b>high</b> <b>level</b> languages.
cacm-1835.html: cacm october 1969 dewar r b k hochsprung r r <b>languages</b> programming <b>languages</b> student programming systems language design <b>high</b> school programs college courses 1.51 1.52 4.12 4.22 ca691011 jb february 15 1978 154 pm
cacm-2267.html: cacm november 1972 malcolm m a floating-point arithmetic high-level <b>languages</b> philosophy language design 4.9 5.19 ca721102 jb january 27 1978 239 pm
cacm-3150.html: <b>high</b> <b>level</b> <b>languages</b> enabled programmer escape intricacies machines order code higher <b>level</b> programming systems provide means understand manipulate complex systems components
cacm-2198.html: problem <b>high</b> <b>level</b> interrogation update functions acting network structures mentioned discussion problem catering <b>high</b> volume transactions initiated terminals parametric users-the lowest <b>level</b> user
cacm-2716.html: cacm october 1975 smith j m yen-tang chang p relational database database optimization inverted file automatic programming query language data manipulation language <b>high</b> <b>level</b> language 3.70 4.13 4.33 ca751003 jb january 6 1978 1119
cacm-2956.html: ideas data types high-level <b>languages</b> number issues explored concerning notion data type set values set primitive operations values
cacm-2316.html: cacm july 1972 sammet j e programming <b>languages</b> higher <b>level</b> <b>languages</b> <b>languages</b> history future directions language interrelationships programming language tree programming language history programming language future 1.2 4.2 ca720712 jb january 30 1978 138 pm
cacm-3148.html: <b>high</b> <b>level</b> programming distributed computing programming distributed loosely coupled systems problem growing interest
cacm-3077.html: cacm august 1978 backus j functional programming algebra programs combining forms functional forms programming <b>languages</b> von neumann computers von neumann <b>languages</b> models computing systems applicative computing systems applicative state transition systems program transformation program correctness program termination metacomposition 4.20 4.29 5.20 5.24 5.26 ca780801 dh february 7 1979 313 pm
cacm-2081.html: cacm april 1970 bayer r witzgall c complete calculus data structures linear programming matrix matrix concatenation matrix sequences programming <b>languages</b> sequence operations symbol manipulation 4.12 4.22 5.14 5.41 ca700403 jb february 13 1978 318 pm
cacm-2923.html: high-level data flow analysis contrast predominant low-level termediate text high-level data flow analysis deals programs essentially source <b>level</b> exploits control flow information implicit clean tree
cacm-1043.html: talk-a high-level source language debugging technique real-time data extraction talk, meaning take look, debugging technique aids substantially debugging complex real-time programming systems interrupting users program desired points extract previously data.
cacm-2003.html: main emphasis description features <b>high</b> <b>level</b> user oriented <b>languages</b> operating levels interaction based
cacm-2091.html: convenient easy learn use <b>high</b> <b>level</b> problem oriented language solve study partial differential equation problems designed practical translator language designed working version constructed significant portion language
cacm-2527.html: implementation <b>high</b> <b>level</b> language machine computing machines directly execute statements <b>high</b> <b>level</b> language proposed past
cacm-2815.html: high-level binding low-level linkers easy implement scheme compiler enforce agreement complex data types separately compiled modules.
cacm-1627.html: application <b>level</b> changing multilevel storage organization technique organizing devices computer storage system described
cacm-2320.html: cacm july 1972 hansen p b structured multiprogramming programming <b>languages</b> operating systems concurrent processes shared data mutual exclusion critical regions process communication synchronizing events
cacm-0281.html: note produce family fast <b>high</b> precision eminently practical exponential evaluation formulas derived formulation
cacm-1872.html: chebyshev interpolation quadrature formulas <b>high</b> degree errata cacm july 1969 salzer h e ca690708 jb february 17 1978 901
cacm-1903.html: chebyshev interpolation quadrature formulas <b>high</b> degree cacm may 1969 salzer h e chebyshev polynomials chebyshev interpolation chebyshev quadrature chebyshev points chebyshev zeros interpolation quadrature definite integrals 5.13 5.16 ca690506 jb february 17 1978 342 pm
cacm-2246.html: cacm december 1972 brown p j portable software <b>level</b> language machine independent macro processor efficiency 4.12 4.21 4.22 ca721209 jb january 27 1978 1102
cacm-2705.html: programming <b>languages</b> natural <b>languages</b> mathematics social aspects programming illuminated analogies similar aspects mathematics natural <b>languages</b>
cacm-2873.html: cacm april 1976 raymond j interactive programming problem oriented <b>languages</b> computer graphics interpreters analytic geometry 3.20 4.13 4.22 4.9 ca760403 jb january 4 1978 426 pm
cacm-2938.html: discipline real-time programming programming divided major categories increasing complexity reasoning program validation: sequential programming, multiprogramming, real-time programming.
cacm-2787.html: matrix reduction-an efficient method paper describes efficient method reduction binary matrices arise school time-tabling problems.
cacm-3080.html: proving correctness heuristically optimized code system proving programs written <b>high</b> <b>level</b> language correctly translated low <b>level</b> language described
cacm-3026.html: cacm january 1978 borgherson b hanson m hartley p 1100 computer series computer architecture multiprocessing <b>languages</b> data management systems end user facilities executive control software 1.3 4.0 4.20 4.30 4.32 4.33 4.35 6.0 6.21 6.30 ca780104 jb march 28 1978 538 pm
cacm-3185.html: humble programmer programming job provided approach task full appreciation tremendous difficulty provided stick modest elegant programming <b>languages</b> provided respect intrinsic limitations human mind approach task humble programmers
cacm-1769.html: cacm april 1968 harder e l barriers philosophy developments computer-aided design problem-oriented <b>languages</b> data communication education computer science forecast survey introduction 1.0 1.3 2.1 3.24 4.0 6.20 6.30 ca680401 jb february 23 1978 1136
cacm-2398.html: interaction system <b>level</b> shows students mix advantages independent solo mode computing guided dual mode interaction
cacm-0048.html: <b>high</b> degree redundancy used permitting single-error correcting code minimum-distance-three code 64 10-bit code words employed station identification code
cacm-1145.html: straightforward enumerative algorithm require 40 years running time <b>high</b> speed computer order compare 15-node graphs sophisticated approach called for
cacm-0265.html: low <b>level</b> language subroutines fortran paper describes subroutines coded symbolic <b>languages</b> fortran coded programs deal special arithmetic eg
cacm-2542.html: system based simple <b>high</b> <b>level</b> language describe evolving system stages development
cacm-2593.html: back-end computer data base management proposed data base management function dedicated back-end computer accepts commands in <b>high</b> <b>level</b> language codasyl data base task group april 1971 report host computer accesses data base secondary storage results
cacm-2826.html: interactive skeleton techniques enhancing motion dynamics key frame animation significant increase capability controlling motion dynamics key frame animation achieved skeleton control.
cacm-2898.html: paper describes conceptual framework <b>high</b> <b>level</b> programming language providing nonprocedural sequential facilities
cacm-2954.html: bounded storage algorithm copying cyclic structures algorithm presented copies cyclic list structures bounded workspace linear time.
cacm-3027.html: development mu5 computer system outline background mu5 project, aims ideas mu5 discussed.
cacm-3127.html: thoth, portable real-time operating system thoth isa real-time operating system designed portable large set machines.
cacm-3103.html: automatic data structure selection: overview levels abstraction proved helpful constructing maintaining programs.
cacm-2317.html: programming systems <b>languages</b> 1965-1975 spite impressive gains pl/i fortran cobol remain <b>languages</b> worlds production programs written remain foreseeable future
cacm-1710.html: cacm august 1968 lang c a gray j c associative data structure ring structure lists list structure set <b>languages</b> modeling graphics 4.20 4.22 ca680804 jb february 22 1978 1102
cacm-2034.html: cacm july 1970 waite w m bootstrapping macro processing machine independence programming <b>languages</b> implementation techniques 4.12 4.22 ca700703 jb february 13 1978 924
cacm-1861.html: cacm august 1969 arden b w galler b a graham r m mad definitions operators macros higher <b>level</b> language 4.12 4.22 ca690802 jb february 15 1978 607 pm
cacm-1179.html: pufft-the purdue university fast fortran translator core resident, compile-and-go system designed ibm 7090/7094 computer described.
cacm-3041.html: median split trees: fast lookup technique frequently occuring keys split trees technique searching sets keys highly skewed frequency distributions.
cacm-1552.html: routines package perform <b>high</b> <b>level</b> functions automatically allow access control fine internal details well
cacm-1676.html: maintain cohesion system developed written <b>high</b> <b>level</b> language minimizes machine dependencies isolates necessary
cacm-2931.html: logic programming <b>languages</b> logic long terested answers questions computable principle outcome puts bounds possibilities formalization
cacm-0321.html: algol 60 confidential algol 60 report,* encountered, describe complex language difficult learn.
cacm-2651.html: cacm may 1974 wegbreit b data types modes mode unions type conversion coercion generic functions extensible <b>languages</b> data type definition data description language compilation 4.12 4.13 4.22 ca740502 jb january 17 1978 432 pm
cacm-1425.html: flow diagrams turing machines <b>languages</b> formation rules part paper flow diagrams introduced represent inter al
cacm-2002.html: amesplot-a higher <b>level</b> data plotting software system amesplot extensible software system designed make display data simple painless neat possible
cacm-2957.html: database abstractions: aggregation aggregation troduced abstraction important conceptualizing real world.
cacm-3101.html: cacm may 1978 hanson d griswold r procedures coroutines programming <b>languages</b> interpreters snobol 4 backtracking 4.2 4.20 4.22 4.13 ca780506 dh february 26 1979 136 pm
cacm-2208.html: storage <b>level</b> fast store divided number storage areas
cacm-1641.html: fast slow memories list-processing <b>languages</b> scheme permitting substantial increase memory space utilized store list-structured data
cacm-0205.html: macro instruction extensions compiler <b>languages</b> macroinstruction compilers constructed small set functions made extremely powerful
cacm-2842.html: denotational semantics programming <b>languages</b> paper tutorial introduction theory programming language semantics developed d scott c strachey
cacm-0081.html: norc high-speed printer cacm june, 1959 gleissner, g. h. ca590603 jb march 22, 1978 6:36 pm
cacm-0198.html: high-speed multiplication process digital computers cacm april, 1960 gurzi, f. ca600413 jb march 22, 1978 1:36 pm
cacm-1472.html: description <b>high</b> capacity fast turnaround university computing center operating system univac 1107 case institute reviewed
cacm-0731.html: system intended imbeding higher <b>level</b> <b>languages</b> capable calling functions subroutines coded machine language
cacm-1788.html: general processor programming <b>languages</b> efforts made develop implementing higher <b>level</b> programming language construction compiler proved generally satisfactory
cacm-1358.html: syntax macros extended translation translation approach extended syntax semantics high-level base language formalism called syntax-macro.
cacm-1860.html: algol-based associative language <b>high</b> <b>level</b> programming language large complex associative structures designed implemented
cacm-1642.html: techniques depend levels secondary storage <b>level</b> 1 times larger main memory fast <b>level</b> 2 times larger slower <b>level</b> 1 cacm february 1967 fisher r o shepard c d ca670201 jb february 28 1978 410 pm
cacm-3057.html: optimal togram matching monotone gray <b>level</b> transformation paper investigates problem optimal togram matching monotone gray <b>level</b> transformation assigns picture points gray <b>level</b> gray <b>level</b> ti j ti tj
cacm-1703.html: accommodating standards identification programming <b>languages</b> user public wants standardization reliable identification programming <b>languages</b> related services
cacm-1459.html: requirements real-time <b>languages</b> real-time <b>languages</b> requirements programming <b>languages</b> special nature applications environment object programs executed environment compiled
cacm-1223.html: <b>high</b> speed compilation efficient object code three-pass compiler properties briefly described passes scan intermediate language produced preceding pass essentially reverse order generated pass hasto read bulky problem-oriented input
cacm-2922.html: proposed attitude aims retaining purity nondeterministic formulation search processes <b>level</b> the attempt <b>level</b> deferring coordination problem solving efforts the choice <b>level</b>
cacm-2295.html: comment composition semantics algol 68 cacm august 1972 van der poel w l programming primitives programming <b>languages</b> algol semantics recursive composition design programming <b>languages</b> data structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30 1978 929
cacm-0232.html: high-speed sorting procedure cacm january, 1960 frank, r. m. lazarus, r. b. ca600104 jb march 22, 1978 2:27 pm
cacm-2301.html: generating parsers affix grammars affix grammars two-level grammars similar van wijngaarden's two-level grammars definition algol 68. affix grammars shown koster equal power van wijngaarden grammars.
cacm-2560.html: queuing model multiprogrammed computer two-level storage system results presented analysis probabilistic model multiprogrammed computer system two-level storage system sequential dependency accesses devices.
cacm-1183.html: note digital computer tedious algebra programming special purpose compiler written fortran ii language made writing long programs computer.
cacm-2305.html: plankalkul konrad zuse forerunner todays programming <b>languages</b> plankalkul attempt korrad zuse 1940s devise notational conceptual system writing today termed program
cacm-2489.html: number multiply-restricted partitions [a1] (algorithm a448) cacm june, 1973 beyer, t. swinehart, d. f. partitions, enumeration, change making, energy-level degeneracies, molecular vibrational energy-levels 3.13 5.30 ca730611 jb january 23, 1978 1:49 pm
cacm-0628.html: floating-point number representation algorithmic <b>languages</b> cacm march 1962 grau a a ca620304 jb march 20 1978 309 pm
cacm-0651.html: survey <b>languages</b> systems information retrieval cacm january 1962 grems m ca620108 jb march 20 1978 436 pm
cacm-2814.html: roster programming <b>languages</b> 1974-75 cacm december 1976 sammet j e ca761201 jb january 3 1978 238 pm
cacm-1098.html: finally authors give heuristics aid selection <b>languages</b> problem applications concluding <b>languages</b> considered distinctly superior list-processing applications
cacm-1713.html: overcoming high-priority paralysis multiprogramming systems: case tory high-priority paralysis degradation occur multiprogramming systems scheduling based primarily preassigned priorities.
cacm-2603.html: equivalence reducing transition <b>languages</b> deterministic <b>languages</b> class reducing transition <b>languages</b> introduced eickel paul bauer samelson shown morris proper superclass simple precedence <b>languages</b>
cacm-0074.html: high-speed sorting procedure cacm july, 1959 shell, d. l. ca590704 jb march 22, 1978 6:20 pm
cacm-0111.html: programming numerical solution polynomial equations numerical techniques presented computing roots polynomial equations.
cacm-0825.html: pip: photo-interpretive program analysis spark-chamber data* operating computer program processes photographically recorded data described.
cacm-2887.html: error density <b>high</b> 20 percent types contained 80 percent total frequency implies <b>high</b> potential effectiveness software based correction cobol
cacm-1143.html: analysis decay-type data* comparative study made variety numerical techniques fitting experimental data decay type forms involving sums exponentials.
