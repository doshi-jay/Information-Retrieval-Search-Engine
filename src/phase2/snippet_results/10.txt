cacm-2785.html: cacm march 1975 lawrie d h layman t baer d randal j m glypnir illiac iv programming language <b> parallel </b> parallel <b> computation </b> computation <b> parallel </b> parallel architecture 4.2 4.21 4.22 ca750303jb january 9 1978 457 pmcacm-2700.html: reduction method proving properties <b> parallel </b> parallel programs proving <b> parallel </b> parallel program property convenient assume statement indivisible iecacm-1795.html: optimal code serial <b> parallel </b> parallel <b> computation </b> computation cacm december 1969 fateman r j code optimization sequencing operations detection common subexpressions 4.12 ca691217 jb february 15 1978 159 pmcacm-2514.html: examples involving array <b> languages </b> languages consisting simple geometrical patterns language neuron picturescacm-1747.html: cacm may 1968 van horn e c computer design computer design criteria computer systems computer systems design input equipment input equipment design operating systems operating systems design multiprogramming multiprogrammed systems multiprogrammed system design virtual computers programming <b> languages </b> languages programming language design program semantics programming language semantics determinism reproducibility repeatability deterministic computers protection memory protection information security information privacy computing reliability debugging program debugging program testing <b> parallel </b> parallel processing <b> parallel </b> parallel programming multiprocessing 2.11 4.12 4.13 4.20 4.30 4.42 4.43 5.24 6.20 6.35 ca680509 jb february 23 1978 906cacm-2266.html: algorithm conceptually suitable <b> parallel </b> parallel <b> computation </b> computation determines starting values convergence zeros guaranteedcacm-2895.html: cacm december 1977 greif i formal specificationsprogram correctness <b> parallel </b> parallel processing synchronization readers/writers problem 4.22 4.32 5.24 ca771205 dmm december 22 1977 1244 pmcacm-3059.html: cacm october 1978 towsley d chandy k browne j multiprogramming <b> parallel </b> parallel processing queueing network models multiprocessing <b> computation </b> computation i/o 4.32 8.1 ca781002 dh january 29 1979 623 pmcacm-3075.html: fast <b> parallel </b> parallel sorting algorithms <b> parallel </b> parallel bucket-sort algorithm presented requires time olog n processorscacm-2851.html: formal verification <b> parallel </b> parallel programs formal models <b> parallel </b> parallel <b> computation </b> computation presented abstract conceptual model parallel-program modelcacm-1536.html: dynamic <b> computation </b> computation derivatives shown wengerts procedure <b> computation </b> computation derivatives implemented conveniently compiler-generated complex addition subtraction linkage complex arithmetic subroutinescacm-2316.html: cacm july 1972 sammet j e programming <b> languages </b> languages higher level <b> languages </b> languages <b> languages </b> languages history future directions language interrelationships programming language tree programming language history programming language future 1.2 4.2 ca720712 jb january 30 1978 138 pmcacm-3073.html: cacm august 1978 hoare c programming programming <b> languages </b> languages programming primitives program structures <b> parallel </b> parallel programming concurrency input output guarded commands nondeterminacy coroutines procedures multiple entries multiple exits classes data representations recursion conditional critical regions monitors iterative arrays 4.20 4.22 4.32 ca780805 dh february 7 1979 1007cacm-2685.html: <b> parallel </b> parallel execution loops methods developed <b> parallel </b> parallel execution iterations loopcacm-1262.html: procedure-oriented language statements facilitate <b> parallel </b> parallel processing statements suggested allow programmer writing procedure-oriented language sections program executed <b> parallel </b> parallelcacm-2973.html: cacm april 1977 thompson c d kung h t <b> parallel </b> parallel computer <b> parallel </b> parallel sorting <b> parallel </b> parallel merge routing comparison steps perfect shufflecacm-1158.html: program structures <b> parallel </b> parallel processing constructs organizing explicating <b> parallel </b> parallel program segments discussed extensions algol 60 constructs serve meta-commands motivated equipment multiprocessing capabilitycacm-2289.html: algorithms exhibit <b> computation </b> computation time cases grows rate exceeding log2 n number nodes graphcacm-2714.html: cacm october 1975 gavril f <b> parallel </b> parallel processing <b> parallel </b> parallel merging <b> parallel </b> parallel binary insertion 5.31 ca751005 jb january 6 1978 1050cacm-0950.html: <b> parallel </b> parallel methods integrating ordinary differential equations paper dedicated proposition that order take full advantage real-time computations highly <b> parallel </b> parallel computers expected future numerical analysis recast <b> parallel </b> parallel formcacm-0141.html: thoughts <b> parallel </b> parallel processing cacm october 1960 yarbrough l d ca601007 jb march 20 1978 816 pmcacm-0392.html: comment paper <b> parallel </b> parallel processing cacm february 1961 nekora m r ca610206 jb march 17 1978 1258cacm-1302.html: <b> parallel </b> parallel signaling speeds data transmission proposed american stand ard cacm march 1965 ca650305 jb march 7 1978 608 pmcacm-2265.html: cacm november 1972 ledgard h f type checking types lambda calculus models programming <b> languages </b> languages syntax semantics compiler writing language implementation formal definition 4.12 4.22 5.2 5.21 5.23 ca721104 jb january 27 1978 230 pmcacm-1811.html: cacm december 1969 rosenfeld j l parallel-processor parallelism <b> parallel </b> parallel programming multiprocessor multiprogramming tasking storage interference electrical network simulation relaxation jacobi gauss-seidel convergence 3.24 4.9 5.14 5.17 6.21 ca691201 jb february 15 1978 445 pmcacm-2195.html: method suitable <b> parallel </b> parallel processing operations relative state computed <b> parallel </b> parallel number stages equal length curves or log2 approximate method usedcacm-2401.html: shrinking binary picture patterns <b> parallel </b> parallel processing algorithm shrinking binary patterns obtain single isolated elements pattern presentedcacm-3156.html: computing connected components <b> parallel </b> parallel computers present <b> parallel </b> parallel algorithm n2 processors find connected components undirected graph vertices time olog2ncacm-2557.html: cacm january 1973 muraoka y kuck d j matrix expressions matrix multiplication operation minimization <b> parallel </b> parallel machine time minimization 4.22 5.14 ca730104 jb january 24 1978 441 pmcacm-2570.html: comparison list schedules <b> parallel </b> parallel processing systems problem scheduling processors minimize execution time program consists set partially ordered tasks studiedcacm-3077.html: cacm august 1978 backus j functional programming algebra programs combining forms functional forms programming <b> languages </b> languages von neumann computers von neumann <b> languages </b> languages models computing systems applicative computing systems applicative state transition systems program transformation program correctness program termination metacomposition 4.20 4.29 5.20 5.24 5.26 ca780801 dh february 7 1979 313 pmcacm-1703.html: accommodating standards identification programming <b> languages </b> languages user public wants standardization reliable identification programming <b> languages </b> languages related servicescacm-2705.html: programming <b> languages </b> languages natural <b> languages </b> languages mathematics social aspects programming illuminated analogies similar aspects mathematics natural <b> languages </b> languagescacm-2470.html: cacm august 1973 maclennan b j semantics formal systems lambda-calculus extensible <b> languages </b> languages data types modes axioms correctness formal language definition formal description data structures description <b> languages </b> languages models <b> computation </b> computation 4.22 5.21 5.24 5.26 ca730804 jb january 23 1978 1101cacm-2931.html: logic programming <b> languages </b> languages logic long terested answers questions computable principle outcome puts bounds possibilities formalizationcacm-1459.html: requirements real-time <b> languages </b> languages real-time <b> languages </b> languages requirements programming <b> languages </b> languages special nature applications environment object programs executed environment compiledcacm-1367.html: character structure character parity sense parallel-by-bit data communication ascii* (proposed american standard) cacm september, 1966 ca660912 jb march 2, 1978 4:26 pmcacm-1569.html: implementing phrase-structure productions pl/i method implementing productions context-free phrase structure grammar pl/i procedure structure statements <b> parallel </b> parallel structure notation grammar.cacm-1828.html: cacm november 1969 shoshani a bernstein a j <b> parallel </b> parallel accessing <b> parallel </b> parallel search search data base synchronization locking deadlock 3.73 3.74 4.32 ca691102 jb february 15 1978 113 pmcacm-1216.html: symbolic derivatives list processing, subroutines, recursion routine developed computes prints symbolic derivative absolutely continuous elementary function variables.cacm-1309.html: special <b> languages </b> languages extract matran permits selective extraction data subset efficient processing computational sequence flexible presentation results tabular graphical formcacm-2081.html: cacm april 1970 bayer r witzgall c complete calculus data structures linear programming matrix matrix concatenation matrix sequences programming <b> languages </b> languages sequence operations symbol manipulation 4.12 4.22 5.14 5.41 ca700403 jb february 13 1978 318 pmcacm-2342.html: interference communicating <b> parallel </b> parallel processes kinds interference communicating <b> parallel </b> parallel processes examined dijkstra knuth otherscacm-2295.html: comment composition semantics algol 68 cacm august 1972 van der poel w l programming primitives programming <b> languages </b> languages algol semantics recursive composition design programming <b> languages </b> languages data structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30 1978 929cacm-2433.html: cacm october 1973 millstein r e array processing parallelism detection explicit parallelism array allocation <b> parallel </b> parallel control structures illiac iv fortran 4.12 4.21 4.22 ca731007 jb january 20 1978 1130cacm-1008.html: scheduling meetings computer computer scheduling papers developed 1960 meeting federation american societies experimental biology (faseb) described.cacm-1601.html: <b> parallel </b> parallel numerical methods solution equations classical iterative procedures numerical solution equations provide stage single approximation root questioncacm-2182.html: interrupt driven programming cacm july 1971 zelkowitz m interrupts supervisors monitors debugging <b> parallel </b> parallel processing associative memories microprogramming 3.51 4.32 4.42 ca710608 jb february 3 1978 949cacm-1846.html: simulating networks <b> parallel </b> parallel processes simultaneous events occur problems simulating discrete event systems computer systems conventional digital computer dealt withcacm-2175.html: number subexpressions executed <b> parallel </b> parallel exceeds number processors execution subexpressions postponedcacm-2865.html: verifying properties <b> parallel </b> parallel programs axiomatic approach axiomatic method proving number properties <b> parallel </b> parallel programs presentedcacm-2896.html: exercise proving <b> parallel </b> parallel programs correct <b> parallel </b> parallel program dijkstras on-the-fly garbage collector proved correct proof method developed owickicacm-2305.html: plankalkul konrad zuse forerunner todays programming <b> languages </b> languages plankalkul attempt korrad zuse 1940s devise notational conceptual system writing today termed programcacm-0628.html: floating-point number representation algorithmic <b> languages </b> languages cacm march 1962 grau a a ca620304 jb march 20 1978 309 pmcacm-0651.html: survey <b> languages </b> languages systems information retrieval cacm january 1962 grems m ca620108 jb march 20 1978 436 pmcacm-2782.html: reply gentleman marovich cacm march 1975 karp r a high-level <b> languages </b> languages philosophy language design 4.22 5.19 ca750306 jb january 9 1978 438 pmcacm-2814.html: roster programming <b> languages </b> languages 1974-75 cacm december 1976 sammet j e ca761201 jb january 3 1978 238 pmcacm-1098.html: finally authors give heuristics aid selection <b> languages </b> languages problem applications concluding <b> languages </b> languages considered distinctly superior list-processing applicationscacm-1923.html: cacm march 1969 rosin r f operating systems interfaces input-output high level <b> languages </b> languages command language 4.22 4.30 4.31 4.41 ca690304 jb february 20 1978 912cacm-2603.html: equivalence reducing transition <b> languages </b> languages deterministic <b> languages </b> languages class reducing transition <b> languages </b> languages introduced eickel paul bauer samelson shown morris proper superclass simple precedence <b> languages </b> languagescacm-2326.html: fix point approach theory <b> computation </b> computation fix point theory scott semantics computer programs defined terms fix points recursive programscacm-1341.html: levels computer systems building computer systems, tend break "levels" control, command communication; system, break problems correspondingly.cacm-1554.html: computer technique displaying n-dimensional hyperobjects digital computer automatic plotter generate three-dimensional stereoscopic movies three-dimensional <b> parallel </b> parallel perspective projections four-dimensional hyperobjects rotating four-dimensional spacecacm-2727.html: multiple byte processing full-word instructions method <b> parallel </b> parallel processing packed data items ordinary full-word computer instructions processing requires operations execution contingent datumcacm-2952.html: functions realizable word-parallel logical two's-complement addition instructions cacm june, 1977 warren, h. s. jr. boolean functions, two's-complement, sign propagation 4.0 6.32 ca770611 jb december 28, 1977 12:45 pmcacm-3044.html: cacm november 1978 friedman d wise d <b> parallel </b> parallel evaluation suspending cons lisp conditional forms if-then-else ambiguous function infinite structures 4.2 4.13 4.32 5.24 ca781107 dh january 26 1979 1044cacm-3175.html: breaking substitution ciphers relaxation algorithm substitution ciphers codes letter alphabet fixed substitute, word divisions change.cacm-1366.html: substantial costs occur training implementation computer time inappropriate language chosenore computer simulation <b> languages </b> languages developed comparisons evaluations existing <b> languages </b> languages designers implementers userscacm-1485.html: structure programming <b> languages </b> languages paper major components programming language identified as 1 elementary program statement 2 mechanisms linking elementary statements together 3 means program obtain data inputscacm-1678.html: computer science program automata formal <b> languages </b> languages switching theory theory computability 1.5 5.2 6.1 ca681101 jb february 21 1978 316 pmcacm-1852.html: experience programming <b> languages </b> languages implementation based algorithm language transferred machine man-week machinecacm-2254.html: dynamic partitioning array <b> languages </b> languages classical process partitioning array subarrays extended array language operationcacm-2080.html: cacm april 1970 hansen p b multiprogramming operating systems <b> parallel </b> parallel processes process concept process communication message buffering process hierarchy process creation process removal 4.30 4.31 4.32 4.41 ca700404 jb february 13 1978 310 pmcacm-1457.html: advantages programming <b> languages </b> languages retrieval application examined suggestions made design programming facilities aid information retrievalcacm-1835.html: cacm october 1969 dewar r b k hochsprung r r <b> languages </b> languages programming <b> languages </b> languages student programming systems language design high school programs college courses 1.51 1.52 4.12 4.22 ca691011 jb february 15 1978 154 pmcacm-2873.html: cacm april 1976 raymond j interactive programming problem oriented <b> languages </b> languages computer graphics interpreters analytic geometry 3.20 4.13 4.22 4.9 ca760403 jb january 4 1978 426 pmcacm-2842.html: denotational semantics programming <b> languages </b> languages paper tutorial introduction theory programming language semantics developed d scott c stracheycacm-0920.html: documentation programming <b> languages </b> languages cacm march 1963 yngve v h sammet j e ca630301 jb march 14 1978 151 pmcacm-1142.html: extension algol-like <b> languages </b> languages cacm february 1964 rose g f ca640201 jb march 10 1978 457cacm-1466.html: discussion summary graphical <b> languages </b> languages cacm march 1966 ca660306 jb march 3 1978 146 pmcacm-2084.html: note complement inherently ambiguous context-free <b> languages </b> languages cacm march 1970 maurer h a ambiguity inherent ambiguity complement context-free language chomsky-language phrase structure language production system type 2 language bounded language 5.22 5.24 ca700314 jb february 13 1978 337 pmcacm-2406.html: data definition <b> languages </b> languages concentrate declaration logical data structures concern structures physically realized computer systemcacm-2661.html: ideal teaching machines-a solution pedagogic language problem cacm april 1974 sterling t d pollack s v education programming <b> languages </b> languages simulators 1.52 4.2 ca740409 jb february 1 1978 1038cacm-3150.html: programming <b> languages </b> languages computer technology matures growing ability create large systems leading basic nature programmingcacm-1468.html: syntax-directed interpretation classes pictures descriptive scheme classes pictures based labeling techniques <b> parallel </b> parallel processing algorithms proposed author years agocacm-2645.html: <b> languages </b> languages estimating program efficiency <b> languages </b> languages enabling users estimate efficiency computer programs presentedcacm-0320.html: logic-structure tables logic tables excellent developing expressing logic required procedures, operations, systems circuits.cacm-1200.html: reversible subroutines computers run backwards computer design describe permits subroutines executed backward forward, instructions unchanged replaced conjugate instructions.cacm-1325.html: attempts authors extend diagnostic capabilities present system concerned increasing fidelity adaptive matched filters development dimensional pattern analysis analysis <b> parallel </b> parallel electrocardiographer-computer diagnostic interaction study possibility introducing major tree-like branching decisions early diagnostic processcacm-1409.html: arithmetic unit command structure similar large <b> parallel </b> parallel machines flip-flop arithmetic control registers throughoutcacm-1603.html: multiprogramming monitor small machines int, combination hardware/software monitor designed control wide variety real-time input/output devices, described.cacm-1959.html: cacm december 1970 morgan h l management information systems integrated data processing supervisors interrupts monitoring systems supervisory systems interrupt scheduling <b> parallel </b> parallel processing 3.51 4.22 4.32 ca701204 jb february 9 1978 346 pmcacm-2114.html: cacm february 1970 hsiao d attribute-value pair index keyword record record address k-pointer k-list file directory generalized structure inverted file index-sequential-file multilist file description search directory search serial processing lists prime keyword <b> parallel </b> parallel processing lists 3.70 3.73 3.74 ca700201 jb february 14 1978 104 pmcacm-2515.html: minimal event-node network project precedence relations procedure constructing minimal event-node network represent set precedence relations <b> parallel </b> parallel activities presented.cacm-2898.html: cacm december 1977 kessels j l w <b> parallel </b> parallel programming descriptive programming nonprocedural programming definitional language data flow programming applicative programming 4.20 ca771202 jb february 1 1980 405cacm-2967.html: cacm may 1977 stillman n j berra p b associative memory associative processor content-addressable memory graphics information retrieval data structures software evaluation hardware evaluation <b> parallel </b> parallel processing database management 3.71 3.72 3.73 3.74 4.34 4.6 6.22 8.2 ca770505 jb december 29 1977 207cacm-2740.html: number <b> parallel </b> parallel processes carefully justified semaphore constructions explainedcacm-2838.html: analysis algorithm real time garbage collection real time garbage collection system avoids suspending operations list processor long times garbage collection requires performing garbage collection processor <b> parallel </b> parallel list processing operations single processor time-shared themcacm-1769.html: cacm april 1968 harder e l barriers philosophy developments computer-aided design problem-oriented <b> languages </b> languages data communication education computer science forecast survey introduction 1.0 1.3 2.1 3.24 4.0 6.20 6.30 ca680401 jb february 23 1978 1136cacm-1911.html: cacm april 1969 petrick s r postal p m rosenbaum p s natural <b> languages </b> languages generative grammar transformational theory syntax coordination sentence coordination sentence coordination coordination reduction syntactic analysis grammar testing program rule testing 3.42 ca690406 jb february 17 1978 425 pmcacm-2785.html: cacm march 1975 lawrie d h layman t baer d randal j m glypnir illiac iv programming language <b>parallel</b> parallel <b>computation</b> computation <b>parallel</b> parallel architecture 4.2 4.21 4.22 ca750303jb january 9 1978 457 pm
cacm-2700.html: reduction method proving properties <b>parallel</b> parallel programs proving <b>parallel</b> parallel program property convenient assume statement indivisible ie
cacm-1795.html: optimal code serial <b>parallel</b> parallel <b>computation</b> computation cacm december 1969 fateman r j code optimization sequencing operations detection common subexpressions 4.12 ca691217 jb february 15 1978 159 pm
cacm-2514.html: examples involving array <b>languages</b> languages consisting simple geometrical patterns language neuron pictures
cacm-1747.html: cacm may 1968 van horn e c computer design computer design criteria computer systems computer systems design input equipment input equipment design operating systems operating systems design multiprogramming multiprogrammed systems multiprogrammed system design virtual computers programming <b>languages</b> languages programming language design program semantics programming language semantics determinism reproducibility repeatability deterministic computers protection memory protection information security information privacy computing reliability debugging program debugging program testing <b>parallel</b> parallel processing <b>parallel</b> parallel programming multiprocessing 2.11 4.12 4.13 4.20 4.30 4.42 4.43 5.24 6.20 6.35 ca680509 jb february 23 1978 906
cacm-2266.html: algorithm conceptually suitable <b>parallel</b> parallel <b>computation</b> computation determines starting values convergence zeros guaranteed
cacm-2895.html: cacm december 1977 greif i formal specificationsprogram correctness <b>parallel</b> parallel processing synchronization readers/writers problem 4.22 4.32 5.24 ca771205 dmm december 22 1977 1244 pm
cacm-3059.html: cacm october 1978 towsley d chandy k browne j multiprogramming <b>parallel</b> parallel processing queueing network models multiprocessing <b>computation</b> computation i/o 4.32 8.1 ca781002 dh january 29 1979 623 pm
cacm-3075.html: fast <b>parallel</b> parallel sorting algorithms <b>parallel</b> parallel bucket-sort algorithm presented requires time olog n processors
cacm-2851.html: formal verification <b>parallel</b> parallel programs formal models <b>parallel</b> parallel <b>computation</b> computation presented abstract conceptual model parallel-program model
cacm-1536.html: dynamic <b>computation</b> computation derivatives shown wengerts procedure <b>computation</b> computation derivatives implemented conveniently compiler-generated complex addition subtraction linkage complex arithmetic subroutines
cacm-2316.html: cacm july 1972 sammet j e programming <b>languages</b> languages higher level <b>languages</b> languages <b>languages</b> languages history future directions language interrelationships programming language tree programming language history programming language future 1.2 4.2 ca720712 jb january 30 1978 138 pm
cacm-3073.html: cacm august 1978 hoare c programming programming <b>languages</b> languages programming primitives program structures <b>parallel</b> parallel programming concurrency input output guarded commands nondeterminacy coroutines procedures multiple entries multiple exits classes data representations recursion conditional critical regions monitors iterative arrays 4.20 4.22 4.32 ca780805 dh february 7 1979 1007
cacm-2685.html: <b>parallel</b> parallel execution loops methods developed <b>parallel</b> parallel execution iterations loop
cacm-1262.html: procedure-oriented language statements facilitate <b>parallel</b> parallel processing statements suggested allow programmer writing procedure-oriented language sections program executed <b>parallel</b> parallel
cacm-2973.html: cacm april 1977 thompson c d kung h t <b>parallel</b> parallel computer <b>parallel</b> parallel sorting <b>parallel</b> parallel merge routing comparison steps perfect shuffle
cacm-1158.html: program structures <b>parallel</b> parallel processing constructs organizing explicating <b>parallel</b> parallel program segments discussed extensions algol 60 constructs serve meta-commands motivated equipment multiprocessing capability
cacm-2289.html: algorithms exhibit <b>computation</b> computation time cases grows rate exceeding log2 n number nodes graph
cacm-2714.html: cacm october 1975 gavril f <b>parallel</b> parallel processing <b>parallel</b> parallel merging <b>parallel</b> parallel binary insertion 5.31 ca751005 jb january 6 1978 1050
cacm-0950.html: <b>parallel</b> parallel methods integrating ordinary differential equations paper dedicated proposition that order take full advantage real-time computations highly <b>parallel</b> parallel computers expected future numerical analysis recast <b>parallel</b> parallel form
cacm-0141.html: thoughts <b>parallel</b> parallel processing cacm october 1960 yarbrough l d ca601007 jb march 20 1978 816 pm
cacm-0392.html: comment paper <b>parallel</b> parallel processing cacm february 1961 nekora m r ca610206 jb march 17 1978 1258
cacm-1302.html: <b>parallel</b> parallel signaling speeds data transmission proposed american stand ard cacm march 1965 ca650305 jb march 7 1978 608 pm
cacm-2265.html: cacm november 1972 ledgard h f type checking types lambda calculus models programming <b>languages</b> languages syntax semantics compiler writing language implementation formal definition 4.12 4.22 5.2 5.21 5.23 ca721104 jb january 27 1978 230 pm
cacm-1811.html: cacm december 1969 rosenfeld j l parallel-processor parallelism <b>parallel</b> parallel programming multiprocessor multiprogramming tasking storage interference electrical network simulation relaxation jacobi gauss-seidel convergence 3.24 4.9 5.14 5.17 6.21 ca691201 jb february 15 1978 445 pm
cacm-2195.html: method suitable <b>parallel</b> parallel processing operations relative state computed <b>parallel</b> parallel number stages equal length curves or log2 approximate method used
cacm-2401.html: shrinking binary picture patterns <b>parallel</b> parallel processing algorithm shrinking binary patterns obtain single isolated elements pattern presented
cacm-3156.html: computing connected components <b>parallel</b> parallel computers present <b>parallel</b> parallel algorithm n2 processors find connected components undirected graph vertices time olog2n
cacm-2557.html: cacm january 1973 muraoka y kuck d j matrix expressions matrix multiplication operation minimization <b>parallel</b> parallel machine time minimization 4.22 5.14 ca730104 jb january 24 1978 441 pm
cacm-2570.html: comparison list schedules <b>parallel</b> parallel processing systems problem scheduling processors minimize execution time program consists set partially ordered tasks studied
cacm-3077.html: cacm august 1978 backus j functional programming algebra programs combining forms functional forms programming <b>languages</b> languages von neumann computers von neumann <b>languages</b> languages models computing systems applicative computing systems applicative state transition systems program transformation program correctness program termination metacomposition 4.20 4.29 5.20 5.24 5.26 ca780801 dh february 7 1979 313 pm
cacm-1703.html: accommodating standards identification programming <b>languages</b> languages user public wants standardization reliable identification programming <b>languages</b> languages related services
cacm-2705.html: programming <b>languages</b> languages natural <b>languages</b> languages mathematics social aspects programming illuminated analogies similar aspects mathematics natural <b>languages</b> languages
cacm-2470.html: cacm august 1973 maclennan b j semantics formal systems lambda-calculus extensible <b>languages</b> languages data types modes axioms correctness formal language definition formal description data structures description <b>languages</b> languages models <b>computation</b> computation 4.22 5.21 5.24 5.26 ca730804 jb january 23 1978 1101
cacm-2931.html: logic programming <b>languages</b> languages logic long terested answers questions computable principle outcome puts bounds possibilities formalization
cacm-1459.html: requirements real-time <b>languages</b> languages real-time <b>languages</b> languages requirements programming <b>languages</b> languages special nature applications environment object programs executed environment compiled
cacm-1367.html: character structure character parity sense parallel-by-bit data communication ascii* (proposed american standard) cacm september, 1966 ca660912 jb march 2, 1978 4:26 pm
cacm-1569.html: implementing phrase-structure productions pl/i method implementing productions context-free phrase structure grammar pl/i procedure structure statements <b>parallel</b> parallel structure notation grammar.
cacm-1828.html: cacm november 1969 shoshani a bernstein a j <b>parallel</b> parallel accessing <b>parallel</b> parallel search search data base synchronization locking deadlock 3.73 3.74 4.32 ca691102 jb february 15 1978 113 pm
cacm-1216.html: symbolic derivatives list processing, subroutines, recursion routine developed computes prints symbolic derivative absolutely continuous elementary function variables.
cacm-1309.html: special <b>languages</b> languages extract matran permits selective extraction data subset efficient processing computational sequence flexible presentation results tabular graphical form
cacm-2081.html: cacm april 1970 bayer r witzgall c complete calculus data structures linear programming matrix matrix concatenation matrix sequences programming <b>languages</b> languages sequence operations symbol manipulation 4.12 4.22 5.14 5.41 ca700403 jb february 13 1978 318 pm
cacm-2342.html: interference communicating <b>parallel</b> parallel processes kinds interference communicating <b>parallel</b> parallel processes examined dijkstra knuth others
cacm-2295.html: comment composition semantics algol 68 cacm august 1972 van der poel w l programming primitives programming <b>languages</b> languages algol semantics recursive composition design programming <b>languages</b> languages data structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30 1978 929
cacm-2433.html: cacm october 1973 millstein r e array processing parallelism detection explicit parallelism array allocation <b>parallel</b> parallel control structures illiac iv fortran 4.12 4.21 4.22 ca731007 jb january 20 1978 1130
cacm-1008.html: scheduling meetings computer computer scheduling papers developed 1960 meeting federation american societies experimental biology (faseb) described.
cacm-1601.html: <b>parallel</b> parallel numerical methods solution equations classical iterative procedures numerical solution equations provide stage single approximation root question
cacm-2182.html: interrupt driven programming cacm july 1971 zelkowitz m interrupts supervisors monitors debugging <b>parallel</b> parallel processing associative memories microprogramming 3.51 4.32 4.42 ca710608 jb february 3 1978 949
cacm-1846.html: simulating networks <b>parallel</b> parallel processes simultaneous events occur problems simulating discrete event systems computer systems conventional digital computer dealt with
cacm-2175.html: number subexpressions executed <b>parallel</b> parallel exceeds number processors execution subexpressions postponed
cacm-2865.html: verifying properties <b>parallel</b> parallel programs axiomatic approach axiomatic method proving number properties <b>parallel</b> parallel programs presented
cacm-2896.html: exercise proving <b>parallel</b> parallel programs correct <b>parallel</b> parallel program dijkstras on-the-fly garbage collector proved correct proof method developed owicki
cacm-2305.html: plankalkul konrad zuse forerunner todays programming <b>languages</b> languages plankalkul attempt korrad zuse 1940s devise notational conceptual system writing today termed program
cacm-0628.html: floating-point number representation algorithmic <b>languages</b> languages cacm march 1962 grau a a ca620304 jb march 20 1978 309 pm
cacm-0651.html: survey <b>languages</b> languages systems information retrieval cacm january 1962 grems m ca620108 jb march 20 1978 436 pm
cacm-2782.html: reply gentleman marovich cacm march 1975 karp r a high-level <b>languages</b> languages philosophy language design 4.22 5.19 ca750306 jb january 9 1978 438 pm
cacm-2814.html: roster programming <b>languages</b> languages 1974-75 cacm december 1976 sammet j e ca761201 jb january 3 1978 238 pm
cacm-1098.html: finally authors give heuristics aid selection <b>languages</b> languages problem applications concluding <b>languages</b> languages considered distinctly superior list-processing applications
cacm-1923.html: cacm march 1969 rosin r f operating systems interfaces input-output high level <b>languages</b> languages command language 4.22 4.30 4.31 4.41 ca690304 jb february 20 1978 912
cacm-2603.html: equivalence reducing transition <b>languages</b> languages deterministic <b>languages</b> languages class reducing transition <b>languages</b> languages introduced eickel paul bauer samelson shown morris proper superclass simple precedence <b>languages</b> languages
cacm-2326.html: fix point approach theory <b>computation</b> computation fix point theory scott semantics computer programs defined terms fix points recursive programs
cacm-1341.html: levels computer systems building computer systems, tend break "levels" control, command communication; system, break problems correspondingly.
cacm-1554.html: computer technique displaying n-dimensional hyperobjects digital computer automatic plotter generate three-dimensional stereoscopic movies three-dimensional <b>parallel</b> parallel perspective projections four-dimensional hyperobjects rotating four-dimensional space
cacm-2727.html: multiple byte processing full-word instructions method <b>parallel</b> parallel processing packed data items ordinary full-word computer instructions processing requires operations execution contingent datum
cacm-2952.html: functions realizable word-parallel logical two's-complement addition instructions cacm june, 1977 warren, h. s. jr. boolean functions, two's-complement, sign propagation 4.0 6.32 ca770611 jb december 28, 1977 12:45 pm
cacm-3044.html: cacm november 1978 friedman d wise d <b>parallel</b> parallel evaluation suspending cons lisp conditional forms if-then-else ambiguous function infinite structures 4.2 4.13 4.32 5.24 ca781107 dh january 26 1979 1044
cacm-3175.html: breaking substitution ciphers relaxation algorithm substitution ciphers codes letter alphabet fixed substitute, word divisions change.
cacm-1366.html: substantial costs occur training implementation computer time inappropriate language chosenore computer simulation <b>languages</b> languages developed comparisons evaluations existing <b>languages</b> languages designers implementers users
cacm-1485.html: structure programming <b>languages</b> languages paper major components programming language identified as 1 elementary program statement 2 mechanisms linking elementary statements together 3 means program obtain data inputs
cacm-1678.html: computer science program automata formal <b>languages</b> languages switching theory theory computability 1.5 5.2 6.1 ca681101 jb february 21 1978 316 pm
cacm-1852.html: experience programming <b>languages</b> languages implementation based algorithm language transferred machine man-week machine
cacm-2254.html: dynamic partitioning array <b>languages</b> languages classical process partitioning array subarrays extended array language operation
cacm-2080.html: cacm april 1970 hansen p b multiprogramming operating systems <b>parallel</b> parallel processes process concept process communication message buffering process hierarchy process creation process removal 4.30 4.31 4.32 4.41 ca700404 jb february 13 1978 310 pm
cacm-1457.html: advantages programming <b>languages</b> languages retrieval application examined suggestions made design programming facilities aid information retrieval
cacm-1835.html: cacm october 1969 dewar r b k hochsprung r r <b>languages</b> languages programming <b>languages</b> languages student programming systems language design high school programs college courses 1.51 1.52 4.12 4.22 ca691011 jb february 15 1978 154 pm
cacm-2873.html: cacm april 1976 raymond j interactive programming problem oriented <b>languages</b> languages computer graphics interpreters analytic geometry 3.20 4.13 4.22 4.9 ca760403 jb january 4 1978 426 pm
cacm-2842.html: denotational semantics programming <b>languages</b> languages paper tutorial introduction theory programming language semantics developed d scott c strachey
cacm-0920.html: documentation programming <b>languages</b> languages cacm march 1963 yngve v h sammet j e ca630301 jb march 14 1978 151 pm
cacm-1142.html: extension algol-like <b>languages</b> languages cacm february 1964 rose g f ca640201 jb march 10 1978 457
cacm-1466.html: discussion summary graphical <b>languages</b> languages cacm march 1966 ca660306 jb march 3 1978 146 pm
cacm-2084.html: note complement inherently ambiguous context-free <b>languages</b> languages cacm march 1970 maurer h a ambiguity inherent ambiguity complement context-free language chomsky-language phrase structure language production system type 2 language bounded language 5.22 5.24 ca700314 jb february 13 1978 337 pm
cacm-2406.html: data definition <b>languages</b> languages concentrate declaration logical data structures concern structures physically realized computer system
cacm-2661.html: ideal teaching machines-a solution pedagogic language problem cacm april 1974 sterling t d pollack s v education programming <b>languages</b> languages simulators 1.52 4.2 ca740409 jb february 1 1978 1038
cacm-3150.html: programming <b>languages</b> languages computer technology matures growing ability create large systems leading basic nature programming
cacm-1468.html: syntax-directed interpretation classes pictures descriptive scheme classes pictures based labeling techniques <b>parallel</b> parallel processing algorithms proposed author years ago
cacm-2645.html: <b>languages</b> languages estimating program efficiency <b>languages</b> languages enabling users estimate efficiency computer programs presented
cacm-0320.html: logic-structure tables logic tables excellent developing expressing logic required procedures, operations, systems circuits.
cacm-1200.html: reversible subroutines computers run backwards computer design describe permits subroutines executed backward forward, instructions unchanged replaced conjugate instructions.
cacm-1325.html: attempts authors extend diagnostic capabilities present system concerned increasing fidelity adaptive matched filters development dimensional pattern analysis analysis <b>parallel</b> parallel electrocardiographer-computer diagnostic interaction study possibility introducing major tree-like branching decisions early diagnostic process
cacm-1409.html: arithmetic unit command structure similar large <b>parallel</b> parallel machines flip-flop arithmetic control registers throughout
cacm-1603.html: multiprogramming monitor small machines int, combination hardware/software monitor designed control wide variety real-time input/output devices, described.
cacm-1959.html: cacm december 1970 morgan h l management information systems integrated data processing supervisors interrupts monitoring systems supervisory systems interrupt scheduling <b>parallel</b> parallel processing 3.51 4.22 4.32 ca701204 jb february 9 1978 346 pm
cacm-2114.html: cacm february 1970 hsiao d attribute-value pair index keyword record record address k-pointer k-list file directory generalized structure inverted file index-sequential-file multilist file description search directory search serial processing lists prime keyword <b>parallel</b> parallel processing lists 3.70 3.73 3.74 ca700201 jb february 14 1978 104 pm
cacm-2515.html: minimal event-node network project precedence relations procedure constructing minimal event-node network represent set precedence relations <b>parallel</b> parallel activities presented.
cacm-2898.html: cacm december 1977 kessels j l w <b>parallel</b> parallel programming descriptive programming nonprocedural programming definitional language data flow programming applicative programming 4.20 ca771202 jb february 1 1980 405
cacm-2967.html: cacm may 1977 stillman n j berra p b associative memory associative processor content-addressable memory graphics information retrieval data structures software evaluation hardware evaluation <b>parallel</b> parallel processing database management 3.71 3.72 3.73 3.74 4.34 4.6 6.22 8.2 ca770505 jb december 29 1977 207
cacm-2740.html: number <b>parallel</b> parallel processes carefully justified semaphore constructions explained
cacm-2838.html: analysis algorithm real time garbage collection real time garbage collection system avoids suspending operations list processor long times garbage collection requires performing garbage collection processor <b>parallel</b> parallel list processing operations single processor time-shared them
cacm-1769.html: cacm april 1968 harder e l barriers philosophy developments computer-aided design problem-oriented <b>languages</b> languages data communication education computer science forecast survey introduction 1.0 1.3 2.1 3.24 4.0 6.20 6.30 ca680401 jb february 23 1978 1136
cacm-1911.html: cacm april 1969 petrick s r postal p m rosenbaum p s natural <b>languages</b> languages generative grammar transformational theory syntax coordination sentence coordination sentence coordination coordination reduction syntactic analysis grammar testing program rule testing 3.42 ca690406 jb february 17 1978 425 pm
cacm-2785.html: cacm march 1975 lawrie d h layman t baer d randal j m glypnir illiac iv programming language <b>parallel</b> <b>computation</b> <b>parallel</b> architecture 4.2 4.21 4.22 ca750303jb january 9 1978 457 pm
cacm-2700.html: reduction method proving properties <b>parallel</b> programs proving <b>parallel</b> program property convenient assume statement indivisible ie
cacm-1795.html: optimal code serial <b>parallel</b> <b>computation</b> cacm december 1969 fateman r j code optimization sequencing operations detection common subexpressions 4.12 ca691217 jb february 15 1978 159 pm
cacm-2514.html: examples involving array <b>languages</b> consisting simple geometrical patterns language neuron pictures
cacm-1747.html: cacm may 1968 van horn e c computer design computer design criteria computer systems computer systems design input equipment input equipment design operating systems operating systems design multiprogramming multiprogrammed systems multiprogrammed system design virtual computers programming <b>languages</b> programming language design program semantics programming language semantics determinism reproducibility repeatability deterministic computers protection memory protection information security information privacy computing reliability debugging program debugging program testing <b>parallel</b> processing <b>parallel</b> programming multiprocessing 2.11 4.12 4.13 4.20 4.30 4.42 4.43 5.24 6.20 6.35 ca680509 jb february 23 1978 906
cacm-2266.html: algorithm conceptually suitable <b>parallel</b> <b>computation</b> determines starting values convergence zeros guaranteed
cacm-2895.html: cacm december 1977 greif i formal specificationsprogram correctness <b>parallel</b> processing synchronization readers/writers problem 4.22 4.32 5.24 ca771205 dmm december 22 1977 1244 pm
cacm-3059.html: cacm october 1978 towsley d chandy k browne j multiprogramming <b>parallel</b> processing queueing network models multiprocessing <b>computation</b> i/o 4.32 8.1 ca781002 dh january 29 1979 623 pm
cacm-3075.html: fast <b>parallel</b> sorting algorithms <b>parallel</b> bucket-sort algorithm presented requires time olog n processors
cacm-2851.html: formal verification <b>parallel</b> programs formal models <b>parallel</b> <b>computation</b> presented abstract conceptual model parallel-program model
cacm-1536.html: dynamic <b>computation</b> derivatives shown wengerts procedure <b>computation</b> derivatives implemented conveniently compiler-generated complex addition subtraction linkage complex arithmetic subroutines
cacm-2316.html: cacm july 1972 sammet j e programming <b>languages</b> higher level <b>languages</b> <b>languages</b> history future directions language interrelationships programming language tree programming language history programming language future 1.2 4.2 ca720712 jb january 30 1978 138 pm
cacm-3073.html: cacm august 1978 hoare c programming programming <b>languages</b> programming primitives program structures <b>parallel</b> programming concurrency input output guarded commands nondeterminacy coroutines procedures multiple entries multiple exits classes data representations recursion conditional critical regions monitors iterative arrays 4.20 4.22 4.32 ca780805 dh february 7 1979 1007
cacm-2685.html: <b>parallel</b> execution loops methods developed <b>parallel</b> execution iterations loop
cacm-1262.html: procedure-oriented language statements facilitate <b>parallel</b> processing statements suggested allow programmer writing procedure-oriented language sections program executed <b>parallel</b>
cacm-2973.html: cacm april 1977 thompson c d kung h t <b>parallel</b> computer <b>parallel</b> sorting <b>parallel</b> merge routing comparison steps perfect shuffle
cacm-1158.html: program structures <b>parallel</b> processing constructs organizing explicating <b>parallel</b> program segments discussed extensions algol 60 constructs serve meta-commands motivated equipment multiprocessing capability
cacm-2289.html: algorithms exhibit <b>computation</b> time cases grows rate exceeding log2 n number nodes graph
cacm-2714.html: cacm october 1975 gavril f <b>parallel</b> processing <b>parallel</b> merging <b>parallel</b> binary insertion 5.31 ca751005 jb january 6 1978 1050
cacm-0950.html: <b>parallel</b> methods integrating ordinary differential equations paper dedicated proposition that order take full advantage real-time computations highly <b>parallel</b> computers expected future numerical analysis recast <b>parallel</b> form
cacm-0141.html: thoughts <b>parallel</b> processing cacm october 1960 yarbrough l d ca601007 jb march 20 1978 816 pm
cacm-0392.html: comment paper <b>parallel</b> processing cacm february 1961 nekora m r ca610206 jb march 17 1978 1258
cacm-1302.html: <b>parallel</b> signaling speeds data transmission proposed american stand ard cacm march 1965 ca650305 jb march 7 1978 608 pm
cacm-2265.html: cacm november 1972 ledgard h f type checking types lambda calculus models programming <b>languages</b> syntax semantics compiler writing language implementation formal definition 4.12 4.22 5.2 5.21 5.23 ca721104 jb january 27 1978 230 pm
cacm-1811.html: cacm december 1969 rosenfeld j l parallel-processor parallelism <b>parallel</b> programming multiprocessor multiprogramming tasking storage interference electrical network simulation relaxation jacobi gauss-seidel convergence 3.24 4.9 5.14 5.17 6.21 ca691201 jb february 15 1978 445 pm
cacm-2195.html: method suitable <b>parallel</b> processing operations relative state computed <b>parallel</b> number stages equal length curves or log2 approximate method used
cacm-2401.html: shrinking binary picture patterns <b>parallel</b> processing algorithm shrinking binary patterns obtain single isolated elements pattern presented
cacm-3156.html: computing connected components <b>parallel</b> computers present <b>parallel</b> algorithm n2 processors find connected components undirected graph vertices time olog2n
cacm-2557.html: cacm january 1973 muraoka y kuck d j matrix expressions matrix multiplication operation minimization <b>parallel</b> machine time minimization 4.22 5.14 ca730104 jb january 24 1978 441 pm
cacm-2570.html: comparison list schedules <b>parallel</b> processing systems problem scheduling processors minimize execution time program consists set partially ordered tasks studied
cacm-3077.html: cacm august 1978 backus j functional programming algebra programs combining forms functional forms programming <b>languages</b> von neumann computers von neumann <b>languages</b> models computing systems applicative computing systems applicative state transition systems program transformation program correctness program termination metacomposition 4.20 4.29 5.20 5.24 5.26 ca780801 dh february 7 1979 313 pm
cacm-1703.html: accommodating standards identification programming <b>languages</b> user public wants standardization reliable identification programming <b>languages</b> related services
cacm-2705.html: programming <b>languages</b> natural <b>languages</b> mathematics social aspects programming illuminated analogies similar aspects mathematics natural <b>languages</b>
cacm-2470.html: cacm august 1973 maclennan b j semantics formal systems lambda-calculus extensible <b>languages</b> data types modes axioms correctness formal language definition formal description data structures description <b>languages</b> models <b>computation</b> 4.22 5.21 5.24 5.26 ca730804 jb january 23 1978 1101
cacm-2931.html: logic programming <b>languages</b> logic long terested answers questions computable principle outcome puts bounds possibilities formalization
cacm-1459.html: requirements real-time <b>languages</b> real-time <b>languages</b> requirements programming <b>languages</b> special nature applications environment object programs executed environment compiled
cacm-1367.html: character structure character parity sense parallel-by-bit data communication ascii* (proposed american standard) cacm september, 1966 ca660912 jb march 2, 1978 4:26 pm
cacm-1569.html: implementing phrase-structure productions pl/i method implementing productions context-free phrase structure grammar pl/i procedure structure statements <b>parallel</b> structure notation grammar.
cacm-1828.html: cacm november 1969 shoshani a bernstein a j <b>parallel</b> accessing <b>parallel</b> search search data base synchronization locking deadlock 3.73 3.74 4.32 ca691102 jb february 15 1978 113 pm
cacm-1216.html: symbolic derivatives list processing, subroutines, recursion routine developed computes prints symbolic derivative absolutely continuous elementary function variables.
cacm-1309.html: special <b>languages</b> extract matran permits selective extraction data subset efficient processing computational sequence flexible presentation results tabular graphical form
cacm-2081.html: cacm april 1970 bayer r witzgall c complete calculus data structures linear programming matrix matrix concatenation matrix sequences programming <b>languages</b> sequence operations symbol manipulation 4.12 4.22 5.14 5.41 ca700403 jb february 13 1978 318 pm
cacm-2342.html: interference communicating <b>parallel</b> processes kinds interference communicating <b>parallel</b> processes examined dijkstra knuth others
cacm-2295.html: comment composition semantics algol 68 cacm august 1972 van der poel w l programming primitives programming <b>languages</b> algol semantics recursive composition design programming <b>languages</b> data structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30 1978 929
cacm-2433.html: cacm october 1973 millstein r e array processing parallelism detection explicit parallelism array allocation <b>parallel</b> control structures illiac iv fortran 4.12 4.21 4.22 ca731007 jb january 20 1978 1130
cacm-1008.html: scheduling meetings computer computer scheduling papers developed 1960 meeting federation american societies experimental biology (faseb) described.
cacm-1601.html: <b>parallel</b> numerical methods solution equations classical iterative procedures numerical solution equations provide stage single approximation root question
cacm-2182.html: interrupt driven programming cacm july 1971 zelkowitz m interrupts supervisors monitors debugging <b>parallel</b> processing associative memories microprogramming 3.51 4.32 4.42 ca710608 jb february 3 1978 949
cacm-1846.html: simulating networks <b>parallel</b> processes simultaneous events occur problems simulating discrete event systems computer systems conventional digital computer dealt with
cacm-2175.html: number subexpressions executed <b>parallel</b> exceeds number processors execution subexpressions postponed
cacm-2865.html: verifying properties <b>parallel</b> programs axiomatic approach axiomatic method proving number properties <b>parallel</b> programs presented
cacm-2896.html: exercise proving <b>parallel</b> programs correct <b>parallel</b> program dijkstras on-the-fly garbage collector proved correct proof method developed owicki
cacm-2305.html: plankalkul konrad zuse forerunner todays programming <b>languages</b> plankalkul attempt korrad zuse 1940s devise notational conceptual system writing today termed program
cacm-0628.html: floating-point number representation algorithmic <b>languages</b> cacm march 1962 grau a a ca620304 jb march 20 1978 309 pm
cacm-0651.html: survey <b>languages</b> systems information retrieval cacm january 1962 grems m ca620108 jb march 20 1978 436 pm
cacm-2782.html: reply gentleman marovich cacm march 1975 karp r a high-level <b>languages</b> philosophy language design 4.22 5.19 ca750306 jb january 9 1978 438 pm
cacm-2814.html: roster programming <b>languages</b> 1974-75 cacm december 1976 sammet j e ca761201 jb january 3 1978 238 pm
cacm-1098.html: finally authors give heuristics aid selection <b>languages</b> problem applications concluding <b>languages</b> considered distinctly superior list-processing applications
cacm-1923.html: cacm march 1969 rosin r f operating systems interfaces input-output high level <b>languages</b> command language 4.22 4.30 4.31 4.41 ca690304 jb february 20 1978 912
cacm-2603.html: equivalence reducing transition <b>languages</b> deterministic <b>languages</b> class reducing transition <b>languages</b> introduced eickel paul bauer samelson shown morris proper superclass simple precedence <b>languages</b>
cacm-2326.html: fix point approach theory <b>computation</b> fix point theory scott semantics computer programs defined terms fix points recursive programs
cacm-1341.html: levels computer systems building computer systems, tend break "levels" control, command communication; system, break problems correspondingly.
cacm-1554.html: computer technique displaying n-dimensional hyperobjects digital computer automatic plotter generate three-dimensional stereoscopic movies three-dimensional <b>parallel</b> perspective projections four-dimensional hyperobjects rotating four-dimensional space
cacm-2727.html: multiple byte processing full-word instructions method <b>parallel</b> processing packed data items ordinary full-word computer instructions processing requires operations execution contingent datum
cacm-2952.html: functions realizable word-parallel logical two's-complement addition instructions cacm june, 1977 warren, h. s. jr. boolean functions, two's-complement, sign propagation 4.0 6.32 ca770611 jb december 28, 1977 12:45 pm
cacm-3044.html: cacm november 1978 friedman d wise d <b>parallel</b> evaluation suspending cons lisp conditional forms if-then-else ambiguous function infinite structures 4.2 4.13 4.32 5.24 ca781107 dh january 26 1979 1044
cacm-3175.html: breaking substitution ciphers relaxation algorithm substitution ciphers codes letter alphabet fixed substitute, word divisions change.
cacm-1366.html: substantial costs occur training implementation computer time inappropriate language chosenore computer simulation <b>languages</b> developed comparisons evaluations existing <b>languages</b> designers implementers users
cacm-1485.html: structure programming <b>languages</b> paper major components programming language identified as 1 elementary program statement 2 mechanisms linking elementary statements together 3 means program obtain data inputs
cacm-1678.html: computer science program automata formal <b>languages</b> switching theory theory computability 1.5 5.2 6.1 ca681101 jb february 21 1978 316 pm
cacm-1852.html: experience programming <b>languages</b> implementation based algorithm language transferred machine man-week machine
cacm-2254.html: dynamic partitioning array <b>languages</b> classical process partitioning array subarrays extended array language operation
cacm-2080.html: cacm april 1970 hansen p b multiprogramming operating systems <b>parallel</b> processes process concept process communication message buffering process hierarchy process creation process removal 4.30 4.31 4.32 4.41 ca700404 jb february 13 1978 310 pm
cacm-1457.html: advantages programming <b>languages</b> retrieval application examined suggestions made design programming facilities aid information retrieval
cacm-1835.html: cacm october 1969 dewar r b k hochsprung r r <b>languages</b> programming <b>languages</b> student programming systems language design high school programs college courses 1.51 1.52 4.12 4.22 ca691011 jb february 15 1978 154 pm
cacm-2873.html: cacm april 1976 raymond j interactive programming problem oriented <b>languages</b> computer graphics interpreters analytic geometry 3.20 4.13 4.22 4.9 ca760403 jb january 4 1978 426 pm
cacm-2842.html: denotational semantics programming <b>languages</b> paper tutorial introduction theory programming language semantics developed d scott c strachey
cacm-0920.html: documentation programming <b>languages</b> cacm march 1963 yngve v h sammet j e ca630301 jb march 14 1978 151 pm
cacm-1142.html: extension algol-like <b>languages</b> cacm february 1964 rose g f ca640201 jb march 10 1978 457
cacm-1466.html: discussion summary graphical <b>languages</b> cacm march 1966 ca660306 jb march 3 1978 146 pm
cacm-2084.html: note complement inherently ambiguous context-free <b>languages</b> cacm march 1970 maurer h a ambiguity inherent ambiguity complement context-free language chomsky-language phrase structure language production system type 2 language bounded language 5.22 5.24 ca700314 jb february 13 1978 337 pm
cacm-2406.html: data definition <b>languages</b> concentrate declaration logical data structures concern structures physically realized computer system
cacm-2661.html: ideal teaching machines-a solution pedagogic language problem cacm april 1974 sterling t d pollack s v education programming <b>languages</b> simulators 1.52 4.2 ca740409 jb february 1 1978 1038
cacm-3150.html: programming <b>languages</b> computer technology matures growing ability create large systems leading basic nature programming
cacm-1468.html: syntax-directed interpretation classes pictures descriptive scheme classes pictures based labeling techniques <b>parallel</b> processing algorithms proposed author years ago
cacm-2645.html: <b>languages</b> estimating program efficiency <b>languages</b> enabling users estimate efficiency computer programs presented
cacm-0320.html: logic-structure tables logic tables excellent developing expressing logic required procedures, operations, systems circuits.
cacm-1200.html: reversible subroutines computers run backwards computer design describe permits subroutines executed backward forward, instructions unchanged replaced conjugate instructions.
cacm-1325.html: attempts authors extend diagnostic capabilities present system concerned increasing fidelity adaptive matched filters development dimensional pattern analysis analysis <b>parallel</b> electrocardiographer-computer diagnostic interaction study possibility introducing major tree-like branching decisions early diagnostic process
cacm-1409.html: arithmetic unit command structure similar large <b>parallel</b> machines flip-flop arithmetic control registers throughout
cacm-1603.html: multiprogramming monitor small machines int, combination hardware/software monitor designed control wide variety real-time input/output devices, described.
cacm-1959.html: cacm december 1970 morgan h l management information systems integrated data processing supervisors interrupts monitoring systems supervisory systems interrupt scheduling <b>parallel</b> processing 3.51 4.22 4.32 ca701204 jb february 9 1978 346 pm
cacm-2114.html: cacm february 1970 hsiao d attribute-value pair index keyword record record address k-pointer k-list file directory generalized structure inverted file index-sequential-file multilist file description search directory search serial processing lists prime keyword <b>parallel</b> processing lists 3.70 3.73 3.74 ca700201 jb february 14 1978 104 pm
cacm-2515.html: minimal event-node network project precedence relations procedure constructing minimal event-node network represent set precedence relations <b>parallel</b> activities presented.
cacm-2898.html: cacm december 1977 kessels j l w <b>parallel</b> programming descriptive programming nonprocedural programming definitional language data flow programming applicative programming 4.20 ca771202 jb february 1 1980 405
cacm-2967.html: cacm may 1977 stillman n j berra p b associative memory associative processor content-addressable memory graphics information retrieval data structures software evaluation hardware evaluation <b>parallel</b> processing database management 3.71 3.72 3.73 3.74 4.34 4.6 6.22 8.2 ca770505 jb december 29 1977 207
cacm-2740.html: number <b>parallel</b> processes carefully justified semaphore constructions explained
cacm-2838.html: analysis algorithm real time garbage collection real time garbage collection system avoids suspending operations list processor long times garbage collection requires performing garbage collection processor <b>parallel</b> list processing operations single processor time-shared them
cacm-1769.html: cacm april 1968 harder e l barriers philosophy developments computer-aided design problem-oriented <b>languages</b> data communication education computer science forecast survey introduction 1.0 1.3 2.1 3.24 4.0 6.20 6.30 ca680401 jb february 23 1978 1136
cacm-1911.html: cacm april 1969 petrick s r postal p m rosenbaum p s natural <b>languages</b> generative grammar transformational theory syntax coordination sentence coordination sentence coordination coordination reduction syntactic analysis grammar testing program rule testing 3.42 ca690406 jb february 17 1978 425 pm
