cacm-1658.html: <b>machine</b> machine time storage requirements algorithms compared test problems small <b>intermediate</b> intermediate size
cacm-2253.html: goal generate <b>code</b> code handling tedious address calculations necessitated complicated data structures
cacm-1223.html: high speed compilation efficient object <b>code</b> code three-pass compiler properties briefly described passes scan <b>intermediate</b> intermediate language produced preceding pass essentially reverse order generated pass hasto read bulky problem-oriented input
cacm-1795.html: optimal <b>code</b> code serial parallel computation cacm december 1969 fateman r j <b>code</b> code <b>optimization</b> optimization sequencing operations detection common subexpressions 4.12 ca691217 jb february 15 1978 159 pm
cacm-1947.html: cacm january 1969 lowry e s medlock c w compilers data flow analysis dominance efficiency fortran graph theory loop structure <b>machine</b> machine instructions object <b>code</b> code <b>optimization</b> optimization redundancy elimination register assignment system/360 4.12 5.24 5.32 ca690102 jb february 20 1978 1215 pm
cacm-2495.html: adapting optimal <b>code</b> code generation arithmetic expressions instruction sets present-day computers cacm june 1973 stockhausen p f arithmetic expressions <b>code</b> code generation compilers object-code <b>optimization</b> optimization register assignment trees 4.12 5.24 5.32 ca730605 jb january 23 1978 224 pm
cacm-2491.html: cacm june 1973 bell j r interpreter <b>machine</b> machine <b>code</b> code time tradeoff space tradeoff compiled <b>code</b> code subroutine calls threaded <b>code</b> code 4.12 4.13 6.33 ca730609 jb january 23 1978 205 pm
cacm-2897.html: cacm december 1977 carter j l compiler structure optimizing compiler <b>code</b> code generation pl/i compiler concatenation program <b>optimization</b> optimization <b>optimization</b> optimization techniques data flow analysis 4.12 4.13 4.22 ca771203 jb february 1 1980 354
cacm-2748.html: cacm june 1975 dewar r b k threaded <b>code</b> code snobol4 interpretors <b>code</b> code generation 4.12 4.13 ca750605 jb january 9 1978 111 pm
cacm-1757.html: data <b>code</b> code calendar date machine-to-machine data interchange proposed usa standard cacm april 1968 usa standard data <b>code</b> code calendar date machine-to-machine data interchange recording calendar date data group identifier 2.0 2.11 2.19 2.3 2.40 2.43 2.49 3.50 3.52 3.53 3.55 3.56 3.59 3.70 3.71 3.73 3.74 3.79 3.81 4.1 4.9 ca680413 jb february 23 1978 1018
cacm-2904.html: cacm november 1977 cocke j compilers <b>optimization</b> optimization compiled <b>code</b> code program analysis operator strength reduction test replacement strongly connected region 4.12 5.24 5.32 ca771112 jb december 27 1977 634
cacm-1154.html: <b>intermediate</b> intermediate machines created adjoining infinite-state memory finite-state <b>machine</b> machine performing following 1 restrict manner unbounded portion memory accessed 2 bound number steps allowed computation increasing recursive function length input 3 restrict total amount memory manner
cacm-1134.html: effects 6600 computer language structures problem compiling efficient 6600 codes prompted development <b>intermediate</b> intermediate language reflecting structure <b>machine</b> machine easily manipulated improving object program efficiency
cacm-3080.html: cacm july 1978 samet h compilers correctness <b>code</b> code <b>optimization</b> optimization debugging program verification lisp 4.12 4.21 4.22 5.24 ca780708 dh february 7 1979 353 pm
cacm-3005.html: implications structured programming <b>machine</b> machine architecture based empirical study 10,000 lines program text written goto-less language <b>machine</b> machine architecture specifically designed structured programs proposed
cacm-1676.html: machine-independent <b>optimization</b> optimization occurs pass ii do-loop machine-dependent <b>optimization</b> optimization pass iii
cacm-1564.html: <b>optimization</b> optimization attempted elimination obviously unnecessary tests conditions decision table
cacm-2701.html: cacm december 1975 graham s l wegman m global flow analysis data flow <b>code</b> code <b>optimization</b> optimization common subexpression elimination live-dead analysis information propagation flow graph reducibility go-to-less programming depth-first search path compression 4.12 5.24 5.25 5.32 ca751206 jb january 5 1978 408 pm
cacm-3171.html: cacm october 1979 klint p line number administration diagnostic messages abstract <b>machine</b> machine <b>code</b> code 4.12 4.13 4.20 4.42 ca791004 db january 17 1980 957
cacm-2929.html: <b>optimization</b> optimization consists replacing procedure invocation modified copy procedure body
cacm-1886.html: cacm june 1969 breuer m a factorization algorithms <b>code</b> code <b>optimization</b> optimization sequencing operations detection common subexpressions factorization boolean expressions 4.12 6.1 ca690607jb february 17 1978 1057
cacm-2433.html: control structures illiac iv fortran part effort design implement fortran compiler illiac iv, extended fortran, called ivtran, developed.
cacm-2858.html: be example achieving smallest number long instructions case total <b>code</b> code length minimized minimizing assigned address point program
cacm-2944.html: cacm july 1977 barth j m garbage collection global flow analysis list processing <b>optimization</b> optimization reference counts storage management 3.80 4.12 4.20 4.34 ca770708 jb december 28 1977 838
cacm-3054.html: cacm october 1978 sedgewick r quicksort analysis algorithms <b>code</b> code <b>optimization</b> optimization sorting 4.0 4.6 5.25 5.31 5.5 ca781007 dh january 29 1979 540 pm
cacm-1807.html: <b>optimization</b> optimization expressions fortran method optimizing computation arithmetic indexing expressions fortran program presented
cacm-2423.html: input translation grammar bnf syntactic rule corresponds possibly empty <b>code</b> code generator realizable assembly language fortran algol subroutine called syntactic rule applied clean program
cacm-1523.html: sharer, time sharing system cdc 6600 time sharing system embedded standard batch processing system cdc 6600 described.
cacm-1726.html: cacm july 1968 nagy g pattern recognition character recognition text reading information retrieval unformatted text operator-controlled reader online reader text-image discrimination reading <b>machine</b> machine 3.63 3.79 3.89 6.29 6.35 ca680703 jb february 22 1978 252 pm
cacm-2138.html: language designed especially suitable writing production software systems specific <b>machine</b> machine the pdp-10 compilers operating systems etc
cacm-1665.html: cacm december 1968 johnson w l porter j h ackley s i ross d t character string compiler finite-state automata finite-state <b>machine</b> machine lexical processor nondeterministic <b>machine</b> machine parsing plex structure regular expressionssequential <b>machine</b> machine syntactic analysis 3.63 3.75 4.12 5.22 5.24 5.31 ca681201 jb february 21 1978 219 pm
cacm-2464.html: complex method constrained <b>optimization</b> optimization e4 algorithm a454 cacm august 1973 richardson j a kuester j l <b>optimization</b> optimization constrained <b>optimization</b> optimization boxs algorithm 5.41 ca730810 jb january 23 1978 1034
cacm-1402.html: method obtaining functional values points <b>intermediate</b> intermediate integration points yields accuracy comparable integration require storing additional information interpolation methods
cacm-0048.html: high degree redundancy used permitting single-error correcting <b>code</b> code minimum-distance-three <b>code</b> code 64 10-bit <b>code</b> code words employed station identification <b>code</b> code
cacm-1362.html: <b>code</b> code extension ascii an asa tutorial american standard <b>code</b> code information interchange ascii number control characters principle <b>code</b> code extension is representation information directly represented means characters <b>code</b> code
cacm-1655.html: <b>code</b> code extension procedures information interchange proposed usa standard cacm december 1968 standard <b>code</b> code <b>code</b> code information interchange characters shift out shift in escape data link escape control functions standard procedures <b>code</b> code extension <b>code</b> code table bit pattern 1.0 2.0 2.43 3.20 3.24 3.50 3.51 3.52 3.53 3.54 3.55 3.56 3.57 3.70 3.71 3.72 3.73 3.74 3.75 3.80 3.81 3.82 3.83 5.0 5.1 6.2 6.21 6.22 ca681211 jb february 21 1978 1216 pm
cacm-2233.html: generations cryptanalysts expended untold man-years success attempting tode <b>code</b> code them vast armies fortune hunters treasure seekers devoted herculean labors digging rolling hills virginia trying locate promised bonanza
cacm-1389.html: facilities underlie list processors ipl lisp comit ad snobol permits user closer <b>machine</b> machine <b>code</b> code order write faster-running programs storage efficiently build wider variety linked data structures
cacm-1542.html: microprogrammed implementation euler ibm system/360 model 30 experimental processing system algorithmic language euler implemented microprogramming ibm system/360 model 30 read-only storage unit.
cacm-2968.html: comparison tree-balancing algorithms algorithms-height-balance (i.e.
cacm-2835.html: recursion analysis compiler <b>optimization</b> optimization simple method detection recursive procedures presented compiler <b>optimization</b> optimization
cacm-0252.html: programming duplex computer system paper describes method duplex-computer programming computers military defense system.
cacm-1756.html: hollerith punched card <b>code</b> code proposed usa standard cacm april 1968 usa standard card <b>code</b> code punched card punched card <b>code</b> code hole-patterns hole-patterns assignment punched card systems 1.4 2.0 2.2 2.43 2.9 3.15 3.24 3.50 3.57 3.7 3.80 3.81 3.82 4.11 4.12 ca680414 jb february 23 1978 1014
cacm-1652.html: <b>code</b> code called ipc information processing <b>code</b> code 8-bit <b>code</b> code set constructed 7 6 5 4-bit subsets easily derived basic set
cacm-3053.html: displacements depth-limited approximations enumerative exhaustive <b>optimization</b> optimization packing costs remain linear-on-with table size n techniques primarily suited important fixed but possibly large tables reference frequencies known op-code tablesspelling dictionaries access arrays
cacm-2117.html: representation calen dar date machine-to-machine data interchange* (proposed american national standard) cacm january, 1970 calendar date, machine-to-machine interchange, month, year, day, representation coded 3.70 3.73 3.74 3.9 ca700114 jb february 14, 1978 1:42 pm
cacm-1783.html: combinations rounding truncation conversions question considered significant digits needed <b>intermediate</b> intermediate base allow in-and-out conversions original number when possible significant digit
cacm-2611.html: complex method constrained <b>optimization</b> optimization algorithm r454 cacm august 1974 shere k d ca740813 jb january 17 1978 928
cacm-1231.html: peephole <b>optimization</b> optimization redundant instructions discarded final stage compilation simple optimizing technique called peephole <b>optimization</b> optimization
cacm-2836.html: cacm september 1976 loui m c derivation tree clean tree probabilistic grammar structural ambiguity combinatorial <b>optimization</b> optimization 5.23 5.49 ca760903 jb january 4 1978 941
cacm-3115.html: orderly enumeration nonsingular binary matrices applied text encryption nonsingular binary matrices order n, i.e., nonsingular field {0, 1}, initial segment natural numbers one-to-one correspondence.
cacm-2533.html: gray <b>code</b> code + sign sequence +-f +-f+-f+-fx ordered cacm march 1973 salzer h e gray <b>code</b> code sign sequences ordering positive monotonic functions binary system galois sum 5.10 ca730306 jb january 24 1978 1035
cacm-0123.html: compilation computers neliac neliac, compiler based algol, developed u. navy electronics laboratory, san diego,california, a"boot-strap" compiler remington rand univac countess computer.
cacm-2344.html: <b>optimization</b> optimization performance time-sharing systems simulation simulation model time-sharing system finite noncontiguous store infinite auxiliary store study variation system parameters store size number jobs allowed execute simultaneously job-scheduling algorithm etc
cacm-2680.html: <b>optimization</b> optimization model assignment disk packs packs resident nonresident status presented
cacm-2871.html: logical analysis programs present systems verification computer programs incomplete <b>intermediate</b> intermediate inductive assertions provided manually user termination proven incorrect programs treated
cacm-0031.html: ibm 704 code-nundrums cacm march, 1958 grumette, m. ca580301 jb march 22, 1978 9:21 pm
cacm-0066.html: proposal generalized card <b>code</b> code 256 characters cacm september 1959 bemer r w ca590903 jb march 22 1978 450 pm
cacm-0195.html: code?
cacm-0230.html: proposal character <b>code</b> code compatibility cacm february 1960 bemer r w ca600202 jb march 22 1978 225 pm
cacm-1064.html: perforated tape <b>code</b> code information interchange proposed american standard cacm june 1964 ca640603 jb march 9 1978 946 pm
cacm-1065.html: bit sequencing american standard <b>code</b> code information interchange ascii serial-by-bit data transmission proposed american standard cacm june 1964 ca640602 jb march 9 1978 947 pm
cacm-1066.html: advanced <b>code</b> code cope variety situations respective computer subprograms organized integrated system
cacm-1187.html: note ascii-octal <b>code</b> code table standards cacm october 1965 crosby w s ca651008 jb march 6 1978 642 pm
cacm-1232.html: representation standard ecma 7-bit <b>code</b> code punched cards ecma standard cacm july 1965 ca650703 jb march 6 1978 906 pm
cacm-1275.html: <b>code</b> code structures protection manipulation variable length items corrigendum cacm april 1965 ramamoorthy c v ca650416 jb march 7 1978 331 pm
cacm-1289.html: proposed revised american standard <b>code</b> code information interchange cacm april 1965 ca650402 jb march 7 1978 403 pm
cacm-1414.html: twelve-row punched-card <b>code</b> code information interchange proposed american standard cacm june 1966 ca660607 jb march 3 1978 839
cacm-2586.html: adapting optimal <b>code</b> code generation arithmetic expressions instruction sets present-day computers errata cacm october 1974 stockhausen p f ca741012 jb january 16 1978 1105
cacm-2834.html: efficient generation binary reflected gray <b>code</b> code applications algorithms presented generate n-bit binary reflected gray <b>code</b> code codewords fixed weight <b>code</b> code
cacm-3066.html: cacm september 1978 myers g software reliability program verification debugging testing <b>code</b> code walkthroughs <b>code</b> code inspections personnel selection 4.6 ca780906 dh february 5 1979 1047
cacm-1670.html: correspondences 8-bit hollerith codes computer environments a usasi tutorial standard cacm november 1968 usa standard card <b>code</b> code punched card punched card <b>code</b> code hole-patterns hole-patterns assignment punched card systems 1.1 1.4 2.0 2.12 2.43 2.44 3.10 3.20 3.30 3.31 3.42 3.50 3.56 3.70 3.72 3.73 3.74 3.80 3.81 4.0 4.1 4.2 4.20 4.40 5.0 ca681109 jb february 21 1978 233 pm
cacm-3173.html: underlying conceptual structures identified 1 transaction event occurs computer involves operation object location 2 prestatement set transactions line <b>code</b> code 3 chunks frequently occurring configurations prestatements lines <b>code</b> code
cacm-2527.html: implementation high level language <b>machine</b> machine computing machines directly execute statements high level language proposed past
cacm-2246.html: cacm december 1972 brown p j portable software level language <b>machine</b> machine independent macro processor efficiency 4.12 4.21 4.22 ca721209 jb january 27 1978 1102
cacm-2133.html: algorithm assignment problem rectangular matrices h algorithm 415 cacm december 1971 bourgeois f lassalle j c operations research <b>optimization</b> optimization theory assignment problem rectangular matrices 5.39 5.40 ca711210 jb february 2 1978 938
cacm-2964.html: approach optimal design storage parameters databases cacm may 1977 milman y database organization storage parameter <b>optimization</b> optimization resident overflow storage 3.73 3.74 ca770508 jb december 29 1977 148
cacm-1167.html: translation <b>machine</b> machine language programs automatic translation <b>machine</b> machine language programs highly desirable goal advent large-scale computers
cacm-1651.html: interpretive input routine linear programming descriptive article input <b>code</b> code presented greatly simplifies data input linear programming solution routine subsequent pedagogical device solving small lp problems
cacm-2195.html: cacm may 1971 montanari u picture processing picture recognition picture description curve detection line detection edge detectionoptimal detection heuristic methods global recognition parallel processing dynamic programming interaction graph secondary <b>optimization</b> optimization problem 3.63 3.66 5.42 ca710504 jb february 3 1978 249 pm
cacm-2616.html: cacm august 1974 cavouras j c decision tables program <b>optimization</b> optimization debugging semantics theory programming systems analysis 4.19 4.42 4.43 5.21 5.29 ca740808 jb january 17 1978 943
cacm-3018.html: <b>optimization</b> optimization problem shown equivalent problem covering edges graph complete subgraphs objective minimizing number complete subgraphs
cacm-3125.html: global <b>optimization</b> optimization suppression partial redundancies elimination redundant computations moving invariant computations loops separately invariants moved outward loop loop
cacm-1331.html: <b>code</b> code structures protection manipulation variable-length items items made variable number characters number bits control information partition symbols inserted mark separations
cacm-3175.html: <b>code</b> code letter assigned probabilities representing plain text letters
cacm-0693.html: extension fibonaccian search variables technique fibonaccian search concepts developed solve <b>optimization</b> optimization problems involving unimodal functions variables.
cacm-2290.html: predominators directed graph h algorithm a430 cacm august 1972 purdom jr p w moore e f predominator predominator graph theory directed graph shortest path articulation connectivity program <b>optimization</b> optimization optimizing compiler 4.12 5.32 ca720812 jb january 30 1978 919
cacm-0079.html: programming <b>machine</b> machine extended address calculational mechanism cacm june 1959 schecher h ca590605 jb march 22 1978 631 pm
cacm-0593.html: introduction machine-independent data division cacm may, 1962 mullin, j. p. ca620512 jb march 20, 1978 1:39 pm
cacm-1162.html: bit stream treated <b>machine</b> machine language program character stream user desire
cacm-2079.html: multiprogramming <b>machine</b> machine coding computer organization cacm april 1970 wirth n ca700405 jb february 13 1978 305 pm
cacm-2624.html: cacm july 1974 popek g j goldberg r p operating system generation architecture sensitive instruction formal requirements abstract model proof virtual <b>machine</b> machine virtual memory hypervisor virtual <b>machine</b> machine monitor 4.32 4.35 5.21 5.22 ca740707 jb january 17 1978 1119
cacm-1029.html: simple automatic derivative evaluation program procedure automatic evaluation total/partial derivatives arbitrary algebraic functions presented.
cacm-1062.html: function-type subroutines included <b>intermediate</b> intermediate manipulations performed strings stored abbreviated internal representation
cacm-1387.html: solution systems polynomial equations elimination elimination procedure williams coded lisp formac solving systems polynomial equations.
cacm-1392.html: recurrent theme need avoid excessive <b>intermediate</b> intermediate expression swell order minimize core storage requirements
cacm-3130.html: curriculum '78 - recommendations undergraduate program computer science contained report recommendations undergraduate degree program computer science curriculum committee computer science (c3s) association computing machinery (acm).
cacm-0333.html: design improved transmission/data processing <b>code</b> code cacm may 1961 bemer r w smith jr h j williams jr f a ca610501 jb march 16 1978 1114 pm
cacm-0797.html: american standard <b>code</b> code information interchange cacm august 1963 ca630801 jb march 13 1978 855 pm
cacm-1204.html: character structure character parity sense serial-by-bit data communication american standard <b>code</b> code information interchange proposed american standard cacm september 1965 ca650902 jb march 6 1978 741 pm
cacm-1658.html: <b>machine</b> time storage requirements algorithms compared test problems small <b>intermediate</b> size
cacm-2253.html: goal generate <b>code</b> handling tedious address calculations necessitated complicated data structures
cacm-1223.html: high speed compilation efficient object <b>code</b> three-pass compiler properties briefly described passes scan <b>intermediate</b> language produced preceding pass essentially reverse order generated pass hasto read bulky problem-oriented input
cacm-1795.html: optimal <b>code</b> serial parallel computation cacm december 1969 fateman r j <b>code</b> <b>optimization</b> sequencing operations detection common subexpressions 4.12 ca691217 jb february 15 1978 159 pm
cacm-1947.html: cacm january 1969 lowry e s medlock c w compilers data flow analysis dominance efficiency fortran graph theory loop structure <b>machine</b> instructions object <b>code</b> <b>optimization</b> redundancy elimination register assignment system/360 4.12 5.24 5.32 ca690102 jb february 20 1978 1215 pm
cacm-2495.html: adapting optimal <b>code</b> generation arithmetic expressions instruction sets present-day computers cacm june 1973 stockhausen p f arithmetic expressions <b>code</b> generation compilers object-code <b>optimization</b> register assignment trees 4.12 5.24 5.32 ca730605 jb january 23 1978 224 pm
cacm-2491.html: cacm june 1973 bell j r interpreter <b>machine</b> <b>code</b> time tradeoff space tradeoff compiled <b>code</b> subroutine calls threaded <b>code</b> 4.12 4.13 6.33 ca730609 jb january 23 1978 205 pm
cacm-2897.html: cacm december 1977 carter j l compiler structure optimizing compiler <b>code</b> generation pl/i compiler concatenation program <b>optimization</b> <b>optimization</b> techniques data flow analysis 4.12 4.13 4.22 ca771203 jb february 1 1980 354
cacm-2748.html: cacm june 1975 dewar r b k threaded <b>code</b> snobol4 interpretors <b>code</b> generation 4.12 4.13 ca750605 jb january 9 1978 111 pm
cacm-1757.html: data <b>code</b> calendar date machine-to-machine data interchange proposed usa standard cacm april 1968 usa standard data <b>code</b> calendar date machine-to-machine data interchange recording calendar date data group identifier 2.0 2.11 2.19 2.3 2.40 2.43 2.49 3.50 3.52 3.53 3.55 3.56 3.59 3.70 3.71 3.73 3.74 3.79 3.81 4.1 4.9 ca680413 jb february 23 1978 1018
cacm-2904.html: cacm november 1977 cocke j compilers <b>optimization</b> compiled <b>code</b> program analysis operator strength reduction test replacement strongly connected region 4.12 5.24 5.32 ca771112 jb december 27 1977 634
cacm-1154.html: <b>intermediate</b> machines created adjoining infinite-state memory finite-state <b>machine</b> performing following 1 restrict manner unbounded portion memory accessed 2 bound number steps allowed computation increasing recursive function length input 3 restrict total amount memory manner
cacm-1134.html: effects 6600 computer language structures problem compiling efficient 6600 codes prompted development <b>intermediate</b> language reflecting structure <b>machine</b> easily manipulated improving object program efficiency
cacm-3080.html: cacm july 1978 samet h compilers correctness <b>code</b> <b>optimization</b> debugging program verification lisp 4.12 4.21 4.22 5.24 ca780708 dh february 7 1979 353 pm
cacm-3005.html: implications structured programming <b>machine</b> architecture based empirical study 10,000 lines program text written goto-less language <b>machine</b> architecture specifically designed structured programs proposed
cacm-1676.html: machine-independent <b>optimization</b> occurs pass ii do-loop machine-dependent <b>optimization</b> pass iii
cacm-1564.html: <b>optimization</b> attempted elimination obviously unnecessary tests conditions decision table
cacm-2701.html: cacm december 1975 graham s l wegman m global flow analysis data flow <b>code</b> <b>optimization</b> common subexpression elimination live-dead analysis information propagation flow graph reducibility go-to-less programming depth-first search path compression 4.12 5.24 5.25 5.32 ca751206 jb january 5 1978 408 pm
cacm-3171.html: cacm october 1979 klint p line number administration diagnostic messages abstract <b>machine</b> <b>code</b> 4.12 4.13 4.20 4.42 ca791004 db january 17 1980 957
cacm-2929.html: <b>optimization</b> consists replacing procedure invocation modified copy procedure body
cacm-1886.html: cacm june 1969 breuer m a factorization algorithms <b>code</b> <b>optimization</b> sequencing operations detection common subexpressions factorization boolean expressions 4.12 6.1 ca690607jb february 17 1978 1057
cacm-2433.html: control structures illiac iv fortran part effort design implement fortran compiler illiac iv, extended fortran, called ivtran, developed.
cacm-2858.html: be example achieving smallest number long instructions case total <b>code</b> length minimized minimizing assigned address point program
cacm-2944.html: cacm july 1977 barth j m garbage collection global flow analysis list processing <b>optimization</b> reference counts storage management 3.80 4.12 4.20 4.34 ca770708 jb december 28 1977 838
cacm-3054.html: cacm october 1978 sedgewick r quicksort analysis algorithms <b>code</b> <b>optimization</b> sorting 4.0 4.6 5.25 5.31 5.5 ca781007 dh january 29 1979 540 pm
cacm-1807.html: <b>optimization</b> expressions fortran method optimizing computation arithmetic indexing expressions fortran program presented
cacm-2423.html: input translation grammar bnf syntactic rule corresponds possibly empty <b>code</b> generator realizable assembly language fortran algol subroutine called syntactic rule applied clean program
cacm-1523.html: sharer, time sharing system cdc 6600 time sharing system embedded standard batch processing system cdc 6600 described.
cacm-1726.html: cacm july 1968 nagy g pattern recognition character recognition text reading information retrieval unformatted text operator-controlled reader online reader text-image discrimination reading <b>machine</b> 3.63 3.79 3.89 6.29 6.35 ca680703 jb february 22 1978 252 pm
cacm-2138.html: language designed especially suitable writing production software systems specific <b>machine</b> the pdp-10 compilers operating systems etc
cacm-1665.html: cacm december 1968 johnson w l porter j h ackley s i ross d t character string compiler finite-state automata finite-state <b>machine</b> lexical processor nondeterministic <b>machine</b> parsing plex structure regular expressionssequential <b>machine</b> syntactic analysis 3.63 3.75 4.12 5.22 5.24 5.31 ca681201 jb february 21 1978 219 pm
cacm-2464.html: complex method constrained <b>optimization</b> e4 algorithm a454 cacm august 1973 richardson j a kuester j l <b>optimization</b> constrained <b>optimization</b> boxs algorithm 5.41 ca730810 jb january 23 1978 1034
cacm-1402.html: method obtaining functional values points <b>intermediate</b> integration points yields accuracy comparable integration require storing additional information interpolation methods
cacm-0048.html: high degree redundancy used permitting single-error correcting <b>code</b> minimum-distance-three <b>code</b> 64 10-bit <b>code</b> words employed station identification <b>code</b>
cacm-1362.html: <b>code</b> extension ascii an asa tutorial american standard <b>code</b> information interchange ascii number control characters principle <b>code</b> extension is representation information directly represented means characters <b>code</b>
cacm-1655.html: <b>code</b> extension procedures information interchange proposed usa standard cacm december 1968 standard <b>code</b> <b>code</b> information interchange characters shift out shift in escape data link escape control functions standard procedures <b>code</b> extension <b>code</b> table bit pattern 1.0 2.0 2.43 3.20 3.24 3.50 3.51 3.52 3.53 3.54 3.55 3.56 3.57 3.70 3.71 3.72 3.73 3.74 3.75 3.80 3.81 3.82 3.83 5.0 5.1 6.2 6.21 6.22 ca681211 jb february 21 1978 1216 pm
cacm-2233.html: generations cryptanalysts expended untold man-years success attempting tode <b>code</b> them vast armies fortune hunters treasure seekers devoted herculean labors digging rolling hills virginia trying locate promised bonanza
cacm-1389.html: facilities underlie list processors ipl lisp comit ad snobol permits user closer <b>machine</b> <b>code</b> order write faster-running programs storage efficiently build wider variety linked data structures
cacm-1542.html: microprogrammed implementation euler ibm system/360 model 30 experimental processing system algorithmic language euler implemented microprogramming ibm system/360 model 30 read-only storage unit.
cacm-2968.html: comparison tree-balancing algorithms algorithms-height-balance (i.e.
cacm-2835.html: recursion analysis compiler <b>optimization</b> simple method detection recursive procedures presented compiler <b>optimization</b>
cacm-0252.html: programming duplex computer system paper describes method duplex-computer programming computers military defense system.
cacm-1756.html: hollerith punched card <b>code</b> proposed usa standard cacm april 1968 usa standard card <b>code</b> punched card punched card <b>code</b> hole-patterns hole-patterns assignment punched card systems 1.4 2.0 2.2 2.43 2.9 3.15 3.24 3.50 3.57 3.7 3.80 3.81 3.82 4.11 4.12 ca680414 jb february 23 1978 1014
cacm-1652.html: <b>code</b> called ipc information processing <b>code</b> 8-bit <b>code</b> set constructed 7 6 5 4-bit subsets easily derived basic set
cacm-3053.html: displacements depth-limited approximations enumerative exhaustive <b>optimization</b> packing costs remain linear-on-with table size n techniques primarily suited important fixed but possibly large tables reference frequencies known op-code tablesspelling dictionaries access arrays
cacm-2117.html: representation calen dar date machine-to-machine data interchange* (proposed american national standard) cacm january, 1970 calendar date, machine-to-machine interchange, month, year, day, representation coded 3.70 3.73 3.74 3.9 ca700114 jb february 14, 1978 1:42 pm
cacm-1783.html: combinations rounding truncation conversions question considered significant digits needed <b>intermediate</b> base allow in-and-out conversions original number when possible significant digit
cacm-2611.html: complex method constrained <b>optimization</b> algorithm r454 cacm august 1974 shere k d ca740813 jb january 17 1978 928
cacm-1231.html: peephole <b>optimization</b> redundant instructions discarded final stage compilation simple optimizing technique called peephole <b>optimization</b>
cacm-2836.html: cacm september 1976 loui m c derivation tree clean tree probabilistic grammar structural ambiguity combinatorial <b>optimization</b> 5.23 5.49 ca760903 jb january 4 1978 941
cacm-3115.html: orderly enumeration nonsingular binary matrices applied text encryption nonsingular binary matrices order n, i.e., nonsingular field {0, 1}, initial segment natural numbers one-to-one correspondence.
cacm-2533.html: gray <b>code</b> + sign sequence +-f +-f+-f+-fx ordered cacm march 1973 salzer h e gray <b>code</b> sign sequences ordering positive monotonic functions binary system galois sum 5.10 ca730306 jb january 24 1978 1035
cacm-0123.html: compilation computers neliac neliac, compiler based algol, developed u. navy electronics laboratory, san diego,california, a"boot-strap" compiler remington rand univac countess computer.
cacm-2344.html: <b>optimization</b> performance time-sharing systems simulation simulation model time-sharing system finite noncontiguous store infinite auxiliary store study variation system parameters store size number jobs allowed execute simultaneously job-scheduling algorithm etc
cacm-2680.html: <b>optimization</b> model assignment disk packs packs resident nonresident status presented
cacm-2871.html: logical analysis programs present systems verification computer programs incomplete <b>intermediate</b> inductive assertions provided manually user termination proven incorrect programs treated
cacm-0031.html: ibm 704 code-nundrums cacm march, 1958 grumette, m. ca580301 jb march 22, 1978 9:21 pm
cacm-0066.html: proposal generalized card <b>code</b> 256 characters cacm september 1959 bemer r w ca590903 jb march 22 1978 450 pm
cacm-0195.html: code?
cacm-0230.html: proposal character <b>code</b> compatibility cacm february 1960 bemer r w ca600202 jb march 22 1978 225 pm
cacm-1064.html: perforated tape <b>code</b> information interchange proposed american standard cacm june 1964 ca640603 jb march 9 1978 946 pm
cacm-1065.html: bit sequencing american standard <b>code</b> information interchange ascii serial-by-bit data transmission proposed american standard cacm june 1964 ca640602 jb march 9 1978 947 pm
cacm-1066.html: advanced <b>code</b> cope variety situations respective computer subprograms organized integrated system
cacm-1187.html: note ascii-octal <b>code</b> table standards cacm october 1965 crosby w s ca651008 jb march 6 1978 642 pm
cacm-1232.html: representation standard ecma 7-bit <b>code</b> punched cards ecma standard cacm july 1965 ca650703 jb march 6 1978 906 pm
cacm-1275.html: <b>code</b> structures protection manipulation variable length items corrigendum cacm april 1965 ramamoorthy c v ca650416 jb march 7 1978 331 pm
cacm-1289.html: proposed revised american standard <b>code</b> information interchange cacm april 1965 ca650402 jb march 7 1978 403 pm
cacm-1414.html: twelve-row punched-card <b>code</b> information interchange proposed american standard cacm june 1966 ca660607 jb march 3 1978 839
cacm-2586.html: adapting optimal <b>code</b> generation arithmetic expressions instruction sets present-day computers errata cacm october 1974 stockhausen p f ca741012 jb january 16 1978 1105
cacm-2834.html: efficient generation binary reflected gray <b>code</b> applications algorithms presented generate n-bit binary reflected gray <b>code</b> codewords fixed weight <b>code</b>
cacm-3066.html: cacm september 1978 myers g software reliability program verification debugging testing <b>code</b> walkthroughs <b>code</b> inspections personnel selection 4.6 ca780906 dh february 5 1979 1047
cacm-1670.html: correspondences 8-bit hollerith codes computer environments a usasi tutorial standard cacm november 1968 usa standard card <b>code</b> punched card punched card <b>code</b> hole-patterns hole-patterns assignment punched card systems 1.1 1.4 2.0 2.12 2.43 2.44 3.10 3.20 3.30 3.31 3.42 3.50 3.56 3.70 3.72 3.73 3.74 3.80 3.81 4.0 4.1 4.2 4.20 4.40 5.0 ca681109 jb february 21 1978 233 pm
cacm-3173.html: underlying conceptual structures identified 1 transaction event occurs computer involves operation object location 2 prestatement set transactions line <b>code</b> 3 chunks frequently occurring configurations prestatements lines <b>code</b>
cacm-2527.html: implementation high level language <b>machine</b> computing machines directly execute statements high level language proposed past
cacm-2246.html: cacm december 1972 brown p j portable software level language <b>machine</b> independent macro processor efficiency 4.12 4.21 4.22 ca721209 jb january 27 1978 1102
cacm-2133.html: algorithm assignment problem rectangular matrices h algorithm 415 cacm december 1971 bourgeois f lassalle j c operations research <b>optimization</b> theory assignment problem rectangular matrices 5.39 5.40 ca711210 jb february 2 1978 938
cacm-2964.html: approach optimal design storage parameters databases cacm may 1977 milman y database organization storage parameter <b>optimization</b> resident overflow storage 3.73 3.74 ca770508 jb december 29 1977 148
cacm-1167.html: translation <b>machine</b> language programs automatic translation <b>machine</b> language programs highly desirable goal advent large-scale computers
cacm-1651.html: interpretive input routine linear programming descriptive article input <b>code</b> presented greatly simplifies data input linear programming solution routine subsequent pedagogical device solving small lp problems
cacm-2195.html: cacm may 1971 montanari u picture processing picture recognition picture description curve detection line detection edge detectionoptimal detection heuristic methods global recognition parallel processing dynamic programming interaction graph secondary <b>optimization</b> problem 3.63 3.66 5.42 ca710504 jb february 3 1978 249 pm
cacm-2616.html: cacm august 1974 cavouras j c decision tables program <b>optimization</b> debugging semantics theory programming systems analysis 4.19 4.42 4.43 5.21 5.29 ca740808 jb january 17 1978 943
cacm-3018.html: <b>optimization</b> problem shown equivalent problem covering edges graph complete subgraphs objective minimizing number complete subgraphs
cacm-3125.html: global <b>optimization</b> suppression partial redundancies elimination redundant computations moving invariant computations loops separately invariants moved outward loop loop
cacm-1331.html: <b>code</b> structures protection manipulation variable-length items items made variable number characters number bits control information partition symbols inserted mark separations
cacm-3175.html: <b>code</b> letter assigned probabilities representing plain text letters
cacm-0693.html: extension fibonaccian search variables technique fibonaccian search concepts developed solve <b>optimization</b> problems involving unimodal functions variables.
cacm-2290.html: predominators directed graph h algorithm a430 cacm august 1972 purdom jr p w moore e f predominator predominator graph theory directed graph shortest path articulation connectivity program <b>optimization</b> optimizing compiler 4.12 5.32 ca720812 jb january 30 1978 919
cacm-0079.html: programming <b>machine</b> extended address calculational mechanism cacm june 1959 schecher h ca590605 jb march 22 1978 631 pm
cacm-0593.html: introduction machine-independent data division cacm may, 1962 mullin, j. p. ca620512 jb march 20, 1978 1:39 pm
cacm-1162.html: bit stream treated <b>machine</b> language program character stream user desire
cacm-2079.html: multiprogramming <b>machine</b> coding computer organization cacm april 1970 wirth n ca700405 jb february 13 1978 305 pm
cacm-2624.html: cacm july 1974 popek g j goldberg r p operating system generation architecture sensitive instruction formal requirements abstract model proof virtual <b>machine</b> virtual memory hypervisor virtual <b>machine</b> monitor 4.32 4.35 5.21 5.22 ca740707 jb january 17 1978 1119
cacm-1029.html: simple automatic derivative evaluation program procedure automatic evaluation total/partial derivatives arbitrary algebraic functions presented.
cacm-1062.html: function-type subroutines included <b>intermediate</b> manipulations performed strings stored abbreviated internal representation
cacm-1387.html: solution systems polynomial equations elimination elimination procedure williams coded lisp formac solving systems polynomial equations.
cacm-1392.html: recurrent theme need avoid excessive <b>intermediate</b> expression swell order minimize core storage requirements
cacm-3130.html: curriculum '78 - recommendations undergraduate program computer science contained report recommendations undergraduate degree program computer science curriculum committee computer science (c3s) association computing machinery (acm).
cacm-0333.html: design improved transmission/data processing <b>code</b> cacm may 1961 bemer r w smith jr h j williams jr f a ca610501 jb march 16 1978 1114 pm
cacm-0797.html: american standard <b>code</b> information interchange cacm august 1963 ca630801 jb march 13 1978 855 pm
cacm-1204.html: character structure character parity sense serial-by-bit data communication american standard <b>code</b> information interchange proposed american standard cacm september 1965 ca650902 jb march 6 1978 741 pm
