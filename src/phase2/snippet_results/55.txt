cacm-2650.html: cacm may 1974 wagner r a error correction <b>regular</b> <b>languages</b> <b>regular</b> <b>events</b> finite state automata compiler error recovery spelling correction string match problem correction corrector errors nondeterministic finite-state automata 4.12 4.20 5.22 5.23 5.42 ca740503 jb january 17 1978 426 pm
cacm-2921.html: cacm october 1977 lalonde w r finite state machines automata <b>regular</b> <b>expressions</b> syntax diagramslrk grammars parser construction parsing programming <b>languages</b> language generation formal definition compilers translators scanners 4.2 5.21 5.23 ca771005 jb december 27 1977 1101
cacm-2051.html: cacm june 1970 frantz d g comparative linguistics natural language processing comparative method historical linguistics diachronic linguistics genetic relationship sound change sound correspondence <b>regular</b> correspondence list processing 3.42 ca700604 jb february 13 1978 1151
cacm-1896.html: <b>regular</b> coulomb wave functions algorithm 292 s22 cacm may 1969 gautschi w coulomb wave functions wave functions <b>regular</b> coulomb wave functions 5.12 ca690513 jb february 17 1978 315 pm
cacm-1898.html: <b>regular</b> coulomb wave functions algorithm 292 s22 cacm may 1969 kolbig k s coulomb wave functions wave functions <b>regular</b> coulomb wave functions 5.12 ca690511 jb february 17 1978 319 pm
cacm-1993.html: <b>regular</b> coulomb wave functions algorithm 292 $s22 cacm september 1970 cody w j paciorek k a coulomb wave functions wave functions <b>regular</b> coulomb wave functions 5.12 ca700912 jb february 10 1978 1003
cacm-1665.html: word <b>events</b> substituted character string processors generalized decision-making mechanisms based ordered sequence <b>events</b>
cacm-1739.html: <b>regular</b> expression search algorithm method locating specific character strings embedded character text implementation method form compiler discussed
cacm-2112.html: cacm february 1970 vere s automata turing machines <b>regular</b> expression transduction expression context-free <b>languages</b> translation recognizers parsing meta-compilers pushdown transducer syntax directed compilers finite state automata 4.10 4.12 4.20 5.22 ca700203 jb february 14 1978 1049
cacm-1355.html: <b>regular</b> coulomb wave functions algorithm 292 cacm november 1966 gautschi w ca661103a jb march 2 1978 343 pm
cacm-1453.html: nonrecursive method syntax specification kleene <b>regular</b> expression notation describing algebraic language syntax algol paper
cacm-1846.html: simulating networks parallel processes simultaneous <b>events</b> occur problems simulating discrete event systems computer systems conventional digital computer dealt <b>with</b>
cacm-1906.html: automated printed circuit routing stepping aperture computer program routing interconnections two-sided printed circuit board <b>regular</b> pattern lines pins terminals vias feed-through holes described
cacm-1470.html: structure programming <b>languages</b> identified major components programming language 1 elementary program statement 2 mechanisms linking elementary statements together 3 means program obtain data inputs
cacm-2838.html: analysis algorithm real time garbage collection real time garbage collection system avoids suspending operations list processor long times garbage collection requires performing garbage collection processor parallel list processing operations, single processor time-shared them.
cacm-1324.html: difficult important research questions advancement general-purpose language processors seen concerned measuring <b>dealing</b> ambiguities translating formal <b>languages</b> searching large tree structures
cacm-2704.html: cacm december 1975 goodenough j b multilevel exit goto statement error conditions structured programming conditions programming <b>languages</b> 4.22 ca751203 jb january 5 1978 447 pm
cacm-1694.html: algorithm probability union large number <b>events</b> algorithm presented efficiently evaluates probability union independent mutually exclusive <b>events</b>
cacm-2320.html: cacm july 1972 hansen p b structured multiprogramming programming <b>languages</b> operating systems concurrent processes shared data mutual exclusion critical regions process communication synchronizing <b>events</b>
cacm-2767.html: comparison simulation event list algorithms algorithms considered schedule <b>events</b> general purpose discrete simulation system.
cacm-3096.html: optimal method deletion one-sided height-balanced trees one-sided height-balanced tree binary tree node's subtree <b>height</b> equal exactly greater <b>height</b> left subtree.
cacm-3163.html: optimal insertion algorithm one-sided height-balanced binary search trees algorithm inserting element one-sided height-balanced (oshb) binary search tree presented.
cacm-3064.html: additional features problems dealt include proper handling simultaneous <b>events</b> <b>events</b> created scheduled executed points simulated time infinite loops caused concatenation zero-time <b>events</b> diagnosed maintaining event counts practical economical capability handling time-displaceable <b>events</b> desirable possible
cacm-3056.html: counting large numbers <b>events</b> small registers small counter approximate counts large numbers
cacm-2839.html: insertion technique one-sided height-balanced trees restriction height-balanced binary trees presented.
cacm-3009.html: insertions deletions one-sided height-balanced trees recently hirschberg established insertions one-sided height-balanced trees 0(log^2n) steps.
cacm-3042.html: power trees class pk trees presented, <b>height</b> balance maintained nodes iying paths.
cacm-1962.html: groove-a program compose, store, edit functions time program makes creating, storing, reproducing, editing functions time described.
cacm-1612.html: essential weakness method <b>dealing</b> complicated syntactic structures practice sparsely occupied eg arithmetic <b>expressions</b>
cacm-1696.html: algorithm identifying ergodic subchains transient states stochastic matrix algorithm identifying ergodic subchains transient states stochastic matrix presented.
cacm-3082.html: time clocks ordering <b>events</b> distributed system concept event happening distributed system examined shown define partial ordering <b>events</b>
cacm-2316.html: cacm july 1972 sammet j e programming <b>languages</b> higher level <b>languages</b> <b>languages</b> history future directions language interrelationships programming language tree programming language history programming language future 1.2 4.2 ca720712 jb january 30 1978 138 pm
cacm-2742.html: improved event-scanning mechanisms discrete event simulation simulation models large, complex "real-world" applications occasionally earned reputation eating hours computer time.
cacm-2304.html: western view computer history u. histories digital computer field tended impersonal, heavy emphasis eastern universities commercial developments.
cacm-2930.html: gre program general and <b>events</b> leading establishment advanced computer science test discussed
cacm-3194.html: non-heuristic program proving elementary logical theorems paper discusses problems involved designing device capable distinguishing speech <b>events</b> recognized native speakers language.
cacm-3128.html: synchronization mechanism proposed abstract objects called eventcounts sequencers processes control ordering <b>events</b> directly mutual exclusion protect manipulations shared variables control ordering <b>events</b>
cacm-3065.html: brother trees insertion deletion provided class <b>or</b> one-sided brother trees log n performance
cacm-2889.html: performance height-balanced trees paper presents results simulations investigate performance height-balanced (hb[k]) trees.
cacm-2450.html: words working set commonly encountered literature <b>dealing</b> resource allocation dearth published data program measurements hope workers field find experimental evidence substantiate base theoretical work
cacm-2567.html: exponential method solution systems ordinary differential equations explicit, coupled, single-step method numerical solution initial problems systems ordinary differential equations presented.
cacm-2799.html: stably updating mean standard deviation data considering (sample) mean set data fit data constant function, computational method based matrix formulation givens transformations.
cacm-2895.html: language formal problem specification language tended behavior communicating parallel processes described.
cacm-1827.html: <b>events</b> system identified recorded supervisor dumped magnetic tape auxiliary program off-line processing
cacm-2968.html: comparison tree-balancing algorithms algorithms-height-balance (i.e.
cacm-1703.html: accommodating standards identification programming <b>languages</b> user public wants standardization reliable identification programming <b>languages</b> related services
cacm-2705.html: programming <b>languages</b> natural <b>languages</b> mathematics social aspects programming illuminated analogies similar aspects mathematics natural <b>languages</b>
cacm-1459.html: requirements real-time <b>languages</b> real-time <b>languages</b> requirements programming <b>languages</b> special nature applications environment object programs executed environment compiled
cacm-1235.html: stochastic approach grammatical coding english computer program assign word english text form class part speech.
cacm-1503.html: simscript-fortran case study programs vehicle dispatching model, written 7040 simscript 7040 fortran iv compared.
cacm-2052.html: scheduling reduce conflict meetings conflicts scheduling treated defining undirected linear graph independently relation activities conflict additional constraints time space.
cacm-2862.html: analysis pff replacement algorithm semi-markov model analytical model presented estimate performance page fault frequency (pff) replacement algorithm.
cacm-3120.html: event-driven compiling technique due linear structure source text, difficulties arise one-pass compilation process.
cacm-2295.html: comment composition semantics algol 68 cacm august 1972 van der poel w l programming primitives programming <b>languages</b> algol semantics recursive composition design programming <b>languages</b> data structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30 1978 929
cacm-2305.html: plankalkul konrad zuse forerunner todays programming <b>languages</b> plankalkul attempt korrad zuse 1940s devise notational conceptual system writing today termed program
cacm-0628.html: floating-point number representation algorithmic <b>languages</b> cacm march 1962 grau a a ca620304 jb march 20 1978 309 pm
cacm-0651.html: survey <b>languages</b> systems information retrieval cacm january 1962 grems m ca620108 jb march 20 1978 436 pm
cacm-2782.html: reply gentleman marovich cacm march 1975 karp r a high-level <b>languages</b> philosophy language design 4.22 5.19 ca750306 jb january 9 1978 438 pm
cacm-2814.html: roster programming <b>languages</b> 1974-75 cacm december 1976 sammet j e ca761201 jb january 3 1978 238 pm
cacm-1098.html: finally authors give heuristics aid selection <b>languages</b> problem applications concluding <b>languages</b> considered distinctly superior list-processing applications
cacm-1923.html: cacm march 1969 rosin r f operating systems interfaces input-output high level <b>languages</b> command language 4.22 4.30 4.31 4.41 ca690304 jb february 20 1978 912
cacm-2603.html: equivalence reducing transition <b>languages</b> deterministic <b>languages</b> class reducing transition <b>languages</b> introduced eickel paul bauer samelson shown morris proper superclass simple precedence <b>languages</b>
cacm-1727.html: estimating frequencies jumps program segmentation program reasonable estimation values s(ij), s(ij) mean number jumps i-th instruction j-th instruction run time.
cacm-1928.html: cacm february 1969 ulrich e g simulation logical simulation digital simulation large systems simulation network structures scheduling queuing simultaneous activities parallel <b>events</b> 4.22 4.29 6.9 ca690210 jb february 20 1978 958
cacm-2936.html: efficient data structure simulation event set recently algorithms presented realization event scheduling routines suitable general purpose discrete event simulation systems.
cacm-1366.html: substantial costs occur training implementation computer time inappropriate language chosenore computer simulation <b>languages</b> developed comparisons evaluations existing <b>languages</b> designers implementers users
cacm-2625.html: capability-based addressing addressing schemes making segment tables examined.
cacm-2632.html: mechanisms presented <b>dealing</b> objects including creation types specification operations applicable type sharing protection reference object improper application operations defined respect type object
cacm-1485.html: structure programming <b>languages</b> paper major components programming language identified as 1 elementary program statement 2 mechanisms linking elementary statements together 3 means program obtain data inputs
cacm-1678.html: computer science program automata formal <b>languages</b> switching theory theory computability 1.5 5.2 6.1 ca681101 jb february 21 1978 316 pm
cacm-1852.html: experience programming <b>languages</b> implementation based algorithm language transferred machine man-week machine
cacm-2254.html: dynamic partitioning array <b>languages</b> classical process partitioning array subarrays extended array language operation
cacm-1457.html: advantages programming <b>languages</b> retrieval application examined suggestions made design programming facilities aid information retrieval
cacm-1835.html: cacm october 1969 dewar r b k hochsprung r r <b>languages</b> programming <b>languages</b> student programming systems language design high school programs college courses 1.51 1.52 4.12 4.22 ca691011 jb february 15 1978 154 pm
cacm-2873.html: cacm april 1976 raymond j interactive programming problem oriented <b>languages</b> computer graphics interpreters analytic geometry 3.20 4.13 4.22 4.9 ca760403 jb january 4 1978 426 pm
cacm-0920.html: documentation programming <b>languages</b> cacm march 1963 yngve v h sammet j e ca630301 jb march 14 1978 151 pm
cacm-1142.html: extension algol-like <b>languages</b> cacm february 1964 rose g f ca640201 jb march 10 1978 457
cacm-1466.html: discussion summary graphical <b>languages</b> cacm march 1966 ca660306 jb march 3 1978 146 pm
cacm-2084.html: note complement inherently ambiguous context-free <b>languages</b> cacm march 1970 maurer h a ambiguity inherent ambiguity complement context-free language chomsky-language phrase structure language production system type 2 language bounded language 5.22 5.24 ca700314 jb february 13 1978 337 pm
cacm-2406.html: data definition <b>languages</b> concentrate declaration logical data structures concern structures physically realized computer system
cacm-2661.html: ideal teaching machines-a solution pedagogic language problem cacm april 1974 sterling t d pollack s v education programming <b>languages</b> simulators 1.52 4.2 ca740409 jb february 1 1978 1038
cacm-3150.html: programming <b>languages</b> computer technology matures growing ability create large systems leading basic nature programming
cacm-2645.html: <b>languages</b> estimating program efficiency <b>languages</b> enabling users estimate efficiency computer programs presented
cacm-1769.html: cacm april 1968 harder e l barriers philosophy developments computer-aided design problem-oriented <b>languages</b> data communication education computer science forecast survey introduction 1.0 1.3 2.1 3.24 4.0 6.20 6.30 ca680401 jb february 23 1978 1136
cacm-1911.html: cacm april 1969 petrick s r postal p m rosenbaum p s natural <b>languages</b> generative grammar transformational theory syntax coordination sentence coordination sentence coordination coordination reduction syntactic analysis grammar testing program rule testing 3.42 ca690406 jb february 17 1978 425 pm
cacm-1988.html: formalism translator interactions formalism presented describing actions processors programming languages-compilers, interpreters, assemblers-and interactions complex systems compiler-compilers extendible languages.
cacm-2148.html: cacm november 1971 branquart p lewi j sintzoff m wodon p l programming primitives programming <b>languages</b> algol semantics recursive composition design programming <b>languages</b> data structures 1.3 4.2 4.22 5.23 5.24 ca711101 jb february 2 1978 1149
cacm-2265.html: cacm november 1972 ledgard h f type checking types lambda calculus models programming <b>languages</b> syntax semantics compiler writing language implementation formal definition 4.12 4.22 5.2 5.21 5.23 ca721104 jb january 27 1978 230 pm
cacm-2699.html: cacm december 1975 schwartz j t program optimization automatic programming high-level <b>languages</b> set-theoretic <b>languages</b> data structure choice 4.12 4.20 4.22 ca751208 jb january 5 1978 353 pm
cacm-2886.html: semantic evaluation left paper describes attribute grammars definition programming <b>languages</b> compilers formal definition attribute grammars discussion important aspects included
cacm-2956.html: ideas data types high-level <b>languages</b> number issues explored concerning notion data type set values set primitive operations values
cacm-0689.html: report visit discuss common programming <b>languages</b> czechoslovakia poland 1963 cacm november 1963 gosden j a merner j n gay r e jones j l christopher j s ca631103 jb march 13 1978 351 pm
cacm-1163.html: philco/ibm translation problem-oriented, symbolic binary levels translation system developed eliminate effort required reprogram philco 2000 series codes ibm 7094 operation.
cacm-1253.html: quikscript-a simscript- language g-20 quikscript simulation language based simscript programmed entirely algebraic language, 20-gate.
cacm-1282.html: fortran subroutines cobol main programs proper cobol coding techniques accounting differences storage allocation library routines <b>languages</b> write fortran iv subroutines called cobol main programs
cacm-2647.html: algorithms reveal properties floating point arithmetic units cacm may 1974 gentleman w m marovich s b floating-point arithmetic high-level <b>languages</b> philosophy language design 4.9 5.19 ca740506 jb january 17 1978 404 pm
cacm-3102.html: incorporation units programming <b>languages</b> issues programming language aid keeping track physical units feet sec etc
cacm-3171.html: line numbers made cheap technique run-time line number administration implementations high level languages.
cacm-3198.html: microprogramming emulators programming <b>languages</b> problem concerned converting language action intellectual energy mechanical energy
cacm-1135.html: philosophy potential overcome well-known deficiencies business-oriented <b>languages</b> fully meets requirements set codasyl <b>languages</b> including machine-independence
