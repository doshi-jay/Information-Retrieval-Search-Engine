cacm-3075.html: fast <b>parallel</b> sorting <b>algorithms</b> <b>parallel</b> bucket-sort algorithm presented requires time olog n <b>processors</b>
cacm-3156.html: computing connected components <b>parallel</b> computers present <b>parallel</b> algorithm n2 <b>processors</b> find connected components undirected graph vertices time olog2n
cacm-2570.html: comparison list schedules <b>parallel</b> processing systems problem scheduling <b>processors</b> minimize execution time program consists set partially ordered tasks studied
cacm-1811.html: parallel-processor systems multiprocessor systems <b>processors</b> simultaneously execute separate tasks single job cooperating decrease solution time computational problem
cacm-2714.html: cacm october 1975 gavril f <b>parallel</b> processing <b>parallel</b> merging <b>parallel</b> binary insertion 5.31 ca751005 jb january 6 1978 1050
cacm-2973.html: cacm april 1977 thompson c d kung h t <b>parallel</b> computer <b>parallel</b> sorting <b>parallel</b> merge routing comparison steps perfect shuffle
cacm-2723.html: multiprocessing compactifying garbage collection <b>algorithms</b> multiprocessing compactifying garbage collector presented discussed
cacm-0950.html: <b>parallel</b> methods integrating ordinary differential equations paper dedicated proposition that order take full advantage real-time computations highly <b>parallel</b> computers expected future numerical analysis recast <b>parallel</b> form
cacm-2266.html: cacm november 1972 patrick m l <b>parallel</b> numerical <b>algorithms</b> real polynomials real zeros newtons method starting values guaranteed convergence 5.15 ca721103 jb january 27 1978 235 pm
cacm-2497.html: synchronizing <b>processors</b> memory-content-generated interrupts implementations lock-unlock method synchronizing <b>processors</b> multiprocessor system require uninterruptable memory-pause type instructions
cacm-3006.html: anomalies variable partition <b>paging</b> <b>algorithms</b> types anomalous behavior occur paged virtual memory operating systems redefined
cacm-2175.html: cacm july 1971 ramamoorthy c v gonzalez m j <b>parallel</b> processing cache arithmetic expressions subexpression ordering computational trees compilers 4.12 4.32 ca710707 jb february 2 1978 449 pm
cacm-2557.html: <b>algorithms</b> presented properly clean matrix sequences subject constraints machine organization
cacm-2128.html: cacm january 1970 mullery a p driscoll g c time sharing resource allocation scheduling <b>algorithms</b> monitors dynamic allocation processor allocation multiprogramming multiprocessing time slicing scheduling conversational systems interactive systems 3.80 4.30 4.31 4.32 6.33 ca700103 jb february 14 1978 215 pm
cacm-2289.html: cacm september 1972 levitt k n kautz w h graph theory cellular logic-in-memory arrays <b>parallel</b> processing special purpose computers <b>algorithms</b> distance spanning tree problems 5.32 6.22 6.5 ca720901 jb january 30 1978 916
cacm-1810.html: cacm december 1969 sayre d <b>paging</b> automatic <b>paging</b> demand <b>paging</b> folding automatic folding storage hierarchies memory hierarchies replacement <b>algorithms</b> performance measurement 4.0 4.19 4.39 6.20 6.34 ca691202 jb february 15 1978 433 pm
cacm-1752.html: synopsis task scheduling <b>paging</b> <b>algorithms</b> implemented results comparative simulation tracing development <b>algorithms</b> predecessor versions
cacm-2365.html: matrix computations fortran <b>paging</b> efficiency conventional fortran programs matrix computations improved reversing order nested loops
cacm-2450.html: cacm september 1973 rodriguez-rosell j virtual memory <b>paging</b> working set software measurement program behavior 4.3 ca730905 jb january 23 1978 922
cacm-3152.html: storage reorganization techniques matrix computation <b>paging</b> environment order multiply matrices minimizing number page fetches required efficient reorganize data submatrix form block multiplication known <b>algorithms</b> leave matrices stored rowor columnoriented form
cacm-2433.html: cacm october 1973 millstein r e array processing parallelism detection explicit parallelism array allocation <b>parallel</b> control structures illiac iv fortran 4.12 4.21 4.22 ca731007 jb january 20 1978 1130
cacm-1924.html: cacm march 1969 mckellar a c coffman jr e g matrix <b>algorithms</b> array processing <b>paging</b> <b>algorithms</b> paged memory systems virtual memory systems array storage allocation storage allocation 4.12 4.39 5.14 ca690303 jb february 20 1978 935
cacm-3153.html: parameterized <b>algorithms</b> partition main memory classes jobs considered
cacm-2692.html: <b>algorithms</b> able clip polygons irregular convex plane-faced volumes dimensions removing parts polygon lie volume
cacm-1601.html: <b>parallel</b> numerical methods solution equations classical iterative procedures numerical solution equations provide stage single approximation root question
cacm-2740.html: number <b>parallel</b> processes carefully justified semaphore constructions explained
cacm-2373.html: cacm march 1972 denning p j schwartz s c working-set model <b>paging</b> <b>paging</b> <b>algorithms</b> program behavior program modeling 4.3 ca720308 jb january 31 1978 207 pm
cacm-2498.html: cacm june 1973 gelenbe e dynamic storage allocation virtual memory <b>paging</b> multiple page sizes fragmentation segmentation 4.0 4.3 4.32 6.34 8.3 ca730602 jb january 23 1978 338 pm
cacm-2522.html: design implementation evaluation working set dispatcher behavior computer system largely dependent <b>algorithms</b> employed allocate system resources processes competing them
cacm-2579.html: register allocation usage counts paper introduces notion usage counts shows usage counts developed <b>algorithms</b> eliminate redundant computations describes usage counts provide basis register allocation
cacm-2114.html: cacm february 1970 hsiao d attribute-value pair index keyword record record address k-pointer k-list file directory generalized structure inverted file index-sequential-file multilist file description search directory search serial processing lists prime keyword <b>parallel</b> processing lists 3.70 3.73 3.74 ca700201 jb february 14 1978 104 pm
cacm-2863.html: results simulating vmin dennings working set page partitioning replacement <b>algorithms</b> virtual memory programs presented demonstrate improvement known realizable variable space <b>algorithms</b>
cacm-2838.html: analysis algorithm real time garbage collection real time garbage collection system avoids suspending operations list processor long times garbage collection requires performing garbage collection processor <b>parallel</b> list processing operations single processor time-shared them
cacm-2645.html: cacm june 1974 ccohen j zuckerman c programming languages syntax-directed translation symbolic manipulation program efficiency analysis <b>algorithms</b> 4.12 4.20 5.24 5.25 ca740601 jb january 17 1978 348 pm
cacm-1964.html: comment working set model program behavior cacm november 1970 bernstein a demand <b>paging</b> working set <b>paging</b> rate multiprogramming 4.30 4.32 ca701115 jb february 9 1978 423 pm
cacm-2022.html: e <b>paging</b> machines demand <b>paging</b> replacement algorithm 4.30 ca700715 jb february 10 1978 417 pm
cacm-1728.html: cacm july 1968 coffman e g varian l c <b>paging</b> systems <b>paging</b> dynamic program behavior program behavior virtual memory systems single-level storage one-level storage operating system simulation operating systems supervisor simulation machine language program interpretation 4.13 4.32 4.39 4.9 ca680701 jb february 22 1978 313 pm
cacm-1468.html: <b>parallel</b> processing simulator originally written ibm 7094 system rewritten cdc 3600 system
cacm-0082.html: handling identifiers internal symbols language <b>processors</b> substitution computer-oriented symbols programmer-oriented symbols language <b>processors</b> examined feasible method presented
cacm-1957.html: efficiency derives evaluating expression <b>parallel</b> evaluating subexpressions sets arrive final result
cacm-2685.html: <b>parallel</b> execution loops methods developed <b>parallel</b> execution iterations loop
cacm-1262.html: procedure-oriented language statements facilitate <b>parallel</b> processing statements suggested allow programmer writing procedure-oriented language sections program executed <b>parallel</b>
cacm-2700.html: reduction method proving properties <b>parallel</b> programs proving <b>parallel</b> program property convenient assume statement indivisible ie
cacm-2277.html: cacm october 1972 morris j b demand <b>paging</b> dynamic storage allocation maniac ii memory allocation one-level store <b>paging</b> <b>paging</b> associative memory storage allocation thrashing virtual memory working set model 4.30 6.21 ca721001 jb january 27 1978 406 pm
cacm-1158.html: program structures <b>parallel</b> processing constructs organizing explicating <b>parallel</b> program segments discussed extensions algol 60 constructs serve meta-commands motivated equipment multiprocessing capability
cacm-1884.html: anomaly space-time characteristics programs running <b>paging</b> machine running time programs <b>paging</b> machine generally increases store programs constrained run decreases
cacm-2872.html: counterintuitive computer <b>paging</b> corrigendum cacm april 1976 fagin r ca760404 jb january 4 1978 419 pm
cacm-1665.html: automatic generation efficient lexical <b>processors</b> finite state techniques practical application theory finite-state automata generate lexical <b>processors</b> dealt tutorial article aed rword system developed m part aed-1 system
cacm-2785.html: cacm march 1975 lawrie d h layman t baer d randal j m glypnir illiac iv programming language <b>parallel</b> computation <b>parallel</b> architecture 4.2 4.21 4.22 ca750303jb january 9 1978 457 pm
cacm-0141.html: thoughts <b>parallel</b> processing cacm october 1960 yarbrough l d ca601007 jb march 20 1978 816 pm
cacm-0392.html: comment paper <b>parallel</b> processing cacm february 1961 nekora m r ca610206 jb march 17 1978 1258
cacm-1302.html: <b>parallel</b> signaling speeds data transmission proposed american stand ard cacm march 1965 ca650305 jb march 7 1978 608 pm
cacm-1795.html: optimal code serial <b>parallel</b> computation cacm december 1969 fateman r j code optimization sequencing operations detection common subexpressions 4.12 ca691217 jb february 15 1978 159 pm
cacm-1988.html: formalism translator interactions formalism presented describing actions <b>processors</b> programming languages-compilers interpreters assemblers-and interactions complex systems compiler-compilers extendible languages
cacm-2085.html: comment <b>paging</b> anomaly cacm march 1970 dempster j r h <b>paging</b> machines demand <b>paging</b> replacement algorithm 4.30 ca700313 jb february 13 1978 339 pm
cacm-1923.html: pseudofiles approach system interfaces high level languages basic input/output support facilities described.
cacm-2669.html: cacm april 1974 saltzer j h <b>paging</b> demand <b>paging</b> memory models program models performance measurement multilevel memory systems virtual memory associative memory memory usage accounting multics 3.79 4.30 4.32 ca740401 jb january 18 1978 1041
cacm-2914.html: lru stack depth distribution simulation <b>paging</b> behavior families probability distributions needed virtual memory simulation model headway page fault distributions working set size distributions
cacm-2851.html: formal verification <b>parallel</b> programs formal models <b>parallel</b> computation presented abstract conceptual model parallel-program model
cacm-2195.html: method suitable <b>parallel</b> processing operations relative state computed <b>parallel</b> number stages equal length curves or log2 approximate method used
cacm-2401.html: shrinking binary picture patterns <b>parallel</b> processing algorithm shrinking binary patterns obtain single isolated elements pattern presented
cacm-3059.html: models <b>parallel</b> processing programs application cpui/o i/oi/o overlap approximate queueing models internal <b>parallel</b> processing individual programs multiprogrammed system developed paper
cacm-2068.html: comment multiprogramming page demand strategy cacm april 1970 smith j l multiprogramming <b>paging</b> modeling 4.32 ca700416 jb february 13 1978 234 pm
cacm-2069.html: comments paper wallace mason cacm april 1970 heess jr w f page-on-demand demand <b>paging</b> time-sharing multiprogramming markovian computer models scheduling strategies operating systems memory management 2.44 4.32 4.39 6.20 6.21 ca700415 jb february 13 1978 236 pm
cacm-2297.html: cacm august 1972 oden p h shedler g s <b>paging</b> machines demand <b>paging</b> operating systems studies queuing analysis memory contention memory management 4.32 ca720805 jb january 30 1978 950
cacm-2895.html: cacm december 1977 greif i formal specificationsprogram correctness <b>parallel</b> processing synchronization readers/writers problem 4.22 4.32 5.24 ca771205 dmm december 22 1977 1244 pm
cacm-0371.html: remarks <b>algorithms</b> 2 3 algorithm 15 <b>algorithms</b> 25 26 cacm march 1961 wilkinson j h ca610311 jb march 17 1978 1235
cacm-1367.html: character structure character parity sense parallel-by-bit data communication ascii* (proposed american standard) cacm september, 1966 ca660912 jb march 2, 1978 4:26 pm
cacm-1569.html: implementing phrase-structure productions pl/i method implementing productions context-free phrase structure grammar pl/i procedure structure statements <b>parallel</b> structure notation grammar.
cacm-1828.html: cacm november 1969 shoshani a bernstein a j <b>parallel</b> accessing <b>parallel</b> search search data base synchronization locking deadlock 3.73 3.74 4.32 ca691102 jb february 15 1978 113 pm
cacm-2283.html: thinning <b>algorithms</b> rectangular hexagonal triangular arrays report thinning <b>algorithms</b> developed rectangular hexagonal triangular arrays
cacm-0303.html: basic terminology connected mechanical languages <b>processors</b> suggestions paper part terminology work university pennsylvanias office computer research education
cacm-1025.html: method syntax-checking algol 60 syntax checker designed based syntax algol algol 60 report [communications acm, may, 1960].
cacm-1825.html: <b>processors</b> capable recognizing parsing input single no-backup scan number steps equal length input number steps derivation
cacm-2166.html: requirements <b>processors</b> celestial mechanics considered compared general manipulation packages
cacm-2664.html: parallelism tape-sorting methods employing parallelism tape-sorting presented.
cacm-3078.html: analysis availability computer systems computer- aided algebra analytical results, related availability computer system constructed unreliable processors, presented paper.
cacm-3088.html: general equations idealized cpu-i/o overlap configurations general equations derived estimating maximum utilization main storage partitions, cpu i/o devices conditions idealized cpu-i/o overlap model multiprogrammed computer systems.
cacm-2342.html: interference communicating <b>parallel</b> processes kinds interference communicating <b>parallel</b> processes examined dijkstra knuth others
cacm-2016.html: cacm august 1970 gintell j w saltzer j h instrumentation performance measurement multiprogramming systems measuring tools system analysis multics metering event tracing demand <b>paging</b> script driven measurement 2.44 4.32 4.39 4.42 ca700805 jb february 10 1978 343 pm
cacm-2137.html: lisp techniques <b>paging</b> environment system employs block concept global local variables addition methods applied lisp systems
cacm-2881.html: counterintuitive computer <b>paging</b> counterexample exhibited natural conjecture concerning optimal group records pages independent reference model computer <b>paging</b> an organization optimal least recently used miss ratio minimized
cacm-2262.html: cacm november 1972 baecker h d garbage collection virtual memory list processing <b>paging</b> segmentation page tables 4.32 ca721107 jb january 27 1978 150 pm
cacm-1684.html: <b>processors</b> translate tables conventional program base diagnostic facilities rules
cacm-2667.html: cacm april 1974 boyse j w program behavior virtual memory <b>paging</b> demand <b>paging</b> software monitor program execution characteristics compiler execution behavior editor execution behavior 4.12 4.19 4.32 4.39 4.9 8.1 ca740403 jb january 18 1978 1012
cacm-2950.html: unifying approach scheduling paper presents scheme classifying scheduling <b>algorithms</b> based abstract model scheduling system formalizes notion priority
cacm-2017.html: sorting <b>paging</b> environment sorting study part extensive measurement project undertaken m44/44x experimental <b>paging</b> system conceived implemented ibm research order explore virtual machine concept
cacm-1658.html: analysis <b>algorithms</b> zero-one programming problem paper concerned review examination existing <b>algorithms</b> zero-one programming problem
cacm-1952.html: index subject <b>algorithms</b> 1970 cacm december 1970 ca701211 jb february 9 1978 250 pm
cacm-2226.html: evidence analysis <b>algorithms</b> zero-one programming problem purpose note report computational experience additional recently summarized gue al <b>algorithms</b> zero-one linear programming problem
cacm-1008.html: scheduling meetings computer computer scheduling papers developed 1960 meeting federation american societies experimental biology (faseb) described.
cacm-2182.html: interrupt driven programming cacm july 1971 zelkowitz m interrupts supervisors monitors debugging <b>parallel</b> processing associative memories microprogramming 3.51 4.32 4.42 ca710608 jb february 3 1978 949
cacm-1747.html: cacm may 1968 van horn e c computer design computer design criteria computer systems computer systems design input equipment input equipment design operating systems operating systems design multiprogramming multiprogrammed systems multiprogrammed system design virtual computers programming languages programming language design program semantics programming language semantics determinism reproducibility repeatability deterministic computers protection memory protection information security information privacy computing reliability debugging program debugging program testing <b>parallel</b> processing <b>parallel</b> programming multiprocessing 2.11 4.12 4.13 4.20 4.30 4.42 4.43 5.24 6.20 6.35 ca680509 jb february 23 1978 906
cacm-1846.html: simulating networks <b>parallel</b> processes simultaneous events occur problems simulating discrete event systems computer systems conventional digital computer dealt with
cacm-2865.html: verifying properties <b>parallel</b> programs axiomatic approach axiomatic method proving number properties <b>parallel</b> programs presented
cacm-2896.html: exercise proving <b>parallel</b> programs correct <b>parallel</b> program dijkstras on-the-fly garbage collector proved correct proof method developed owicki
cacm-1529.html: course analysis substructure discovered relevance relative performance <b>algorithms</b> absolute performance compared standard primal-simplex solution decomposition
cacm-1796.html: index subject <b>algorithms</b> 1969 cacm december 1969 1969 index supplement index subject <b>algorithms</b> 1960 1968 comm
cacm-1873.html: accelerating lp <b>algorithms</b> shown method computing related products accelerate pricing phase lp <b>algorithms</b>
cacm-2903.html: recursion troduction <b>algorithms</b> manipulate stack translated recursive <b>algorithms</b> stack operations occur
