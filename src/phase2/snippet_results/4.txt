cacm-2931.html: remains showing <b> abstract </b> abstract conceptualizations <b> or </b> or cannot actualized say unified theorycacm-2851.html: <b> examples </b> examples presented induction principle demonstrate proofs mutual exclusioncacm-3128.html: synchronization mechanism proposed <b> abstract </b> abstract objects called eventcounts sequencers <b> processes </b> processes control ordering events directly mutual exclusion protect manipulations shared variables control ordering eventscacm-1135.html: stresses structural analysis class <b> processes </b> processes represented languages <b> opposed </b> opposed emphasizing formal ie contents-independent syntactical definitionscacm-2939.html: abstraction <b> mechanisms </b> mechanisms clu clu programming language designed support abstractions program constructioncacm-2895.html: language formal <b> problem </b> problem specification language tended behavior <b> communicating </b> communicating parallel <b> processes </b> processes describedcacm-3049.html: simply extended modified batch <b> environment </b> environment graphical system sembegs sembegs <b> complete </b> complete batch <b> environment </b> environment graphical system components handling graphical data files displaying contents variety graphical hardware performing graphical batch input operationscacm-3043.html: paper <b> examples </b> examples <b> distributed </b> distributed <b> processes </b> processes shows include procedures coroutines classes monitors <b> processes </b> processes semaphores buffers path expressions input/output special casescacm-2377.html: <b> mechanisms </b> mechanisms allow cross-ring <b> calls </b> calls subsequent occur trapping supervisorcacm-0616.html: hoped report read <b> a </b> a avid interest programming language designers implementors <b> interested </b> interested developing <b> theoretical </b> theoretical approach data processing b interest understanding professional programmers systems analysts c appreciation businessman-analyst-managercacm-2519.html: <b> problem </b> problem <b> communicating </b> communicating complex information nature difficulty involved <b> communicating </b> communicating mathematical results scientists computer based information retrieval system examinedcacm-2439.html: cacm october 1973 mcgeachie j s dtss multiple terminals <b> remote </b> remote terminals <b> remote </b> remote consoles time-sharing on-line interaction on-line games 3.81 4.32 ca731001 jb january 23 1978 833cacm-2536.html: cacm march 1973 feinroth y franceschini e goldstein m telecommunications minicomputer front-end processor <b> remote </b> remote job entry <b> remote </b> remote terminals 3.81 4.32 4.41 ca730303 jb january 24 1978 1123cacm-1588.html: list-processing languages suffered inability deal directly complex data structures and/or inability perform <b> complete </b> complete range programming language operations data list structurescacm-3057.html: optimal togram matching monotone gray level transformation paper investigates <b> problem </b> problem optimal togram matching monotone gray level transformation assigns picture points gray level gray level ti j ti tjcacm-2342.html: interference <b> communicating </b> communicating parallel <b> processes </b> processes kinds interference <b> communicating </b> communicating parallel <b> processes </b> processes examined dijkstra knuth otherscacm-2721.html: order study relationships ecological <b> mechanisms </b> mechanisms involved simulation parameters varied illustrating response ecosystem conditions including types chemical thermal pollutioncacm-2932.html: complexity computations framework research theory complexity computations described, emphasizing terrelation seemingly diverse problems methods.cacm-2684.html: detailed presentation application define <b> abstract </b> abstract syntax translations languages previous paper authorcacm-3141.html: improved algorithm decentralized extrema-finding circular configurations <b> processes </b> processes note presents improvement lelanns algorithm finding largest <b> or </b> or smallest set uniquely numbered <b> processes </b> processes arranged circle central controller exists number <b> processes </b> processes known prioricacm-1099.html: intense training constant experience locating objects unseen <b> environment </b> environment superbly trained memory blind brings <b> work </b> work programming skills sighted need acquirecacm-2905.html: method remainder reduction method <b> complete </b> complete sense give minimal <b> or </b> or minimal tables kind setcacm-2233.html: <b> work </b> work completed help univac 1108 includes numerous analytical studies beale cyphers types simulationscacm-1727.html: easier estimate sij quantities pijsijci/sumsij j1n ci arbitrary positive constant <b> i </b> i pij <b> are </b> are <b> i </b> i proportional sij estimation pij easier estimate probabilities events instruction executed instruction iicacm-2915.html: cacm november 1977 lee j <b> a </b> a n programming languages standards formalisms formal <b> descriptions </b> descriptions fortran cobol pl/i basic vienna definition language vdl 2.4 4.2 4.29 4.6 5.23 ca771101 jb december 27 1977 810cacm-2949.html: cacm july 1977 tajibnapis w d <b> distributed </b> distributed computer network correctness proofs computer networks <b> distributed </b> distributed control network topology routing <b> problem </b> problem networks <b> distributed </b> distributed operating system store forward packet switching store forward message switching traffic control 3.81 4.32 ca770703 jb december 28 1977 1159cacm-2816.html: optimal reorganization <b> distributed </b> distributed space disk database organizations cost accessing database increase due structural caused updates insertionscacm-0409.html: cl-1 <b> environment </b> environment compiler flexible large-scale programming system facilitate solution information processing problems provide intercommunication programs and/or programmers developed realized ibm 709/7090 computercacm-1681.html: easy englisha language information retrieval <b> remote </b> remote typewriter console easy english natural command language designed simplify communication man machine <b> remote </b> remote typewriter consolecacm-1014.html: experimenter <b> interested </b> interested interactions impossible ignore experimental designs <b> problem </b> problem getting error termscacm-2371.html: system interprocess communication resource sharing computer network system communication <b> processes </b> processes time-sharing system communication system extended <b> processes </b> processes <b> distributed </b> distributed computer networkcacm-1012.html: formal parsing system vutr consists finite <b> disjoint </b> disjoint vocabularies t many-many map u t recursive set strings called syntactic sentence classescacm-2890.html: cacm january 1976 agnew c e routing algorithms adaptive routing quadratic routing alternate routing store-and-forward network <b> distributed </b> distributed network computer network message switching 3.81 8.0 8.1 8.3 ca760103 jb january 5 1978 1037cacm-2701.html: fast linear algorithm global flow analysis <b> abstract </b> abstract only-complete paper jacm 23,1 january 1976 algorithm global flow analysis reducible graphs presentedcacm-3021.html: security system rests part difficulty factoring published divisor n cacm february 1978 rivest r shamir <b> a </b> a adleman l digital signatures public-key cryptosystems privacy authentication security factorization prime number electronic mail <b> message-passing </b> message-passing electronic funds transfer cryptographycacm-1943.html: <b> complete </b> complete elliptic integrals algorithm 165 s21 cacm january,1969 farkas <b> i </b> i special functions <b> complete </b> complete elliptic integral kind <b> complete </b> complete elliptic integral kind 5.12 ca690106 jb february 20 1978 1154cacm-1595.html: fundamental results established leading algorithm enumerating finite topologies computed results 7 interesting side result computational <b> work </b> work unearthing <b> theoretical </b> theoretical error induced literature computer combinatorics represents chronologically early application side result underscores continuing usefulness areacacm-1470.html: structure programming languages identified major components programming language 1 elementary program statement 2 <b> mechanisms </b> mechanisms linking elementary statements together 3 means program obtain data inputscacm-1458.html: online programming transition made line online programming, number working conditions noted.cacm-2742.html: improved event-scanning <b> mechanisms </b> mechanisms discrete event simulation simulation models large complex real-world applications occasionally earned reputation eating hours computer timecacm-1931.html: application <b> i </b> i determinants program test set functions form chebyshev system presentedcacm-2940.html: cacm august 1977 shaw m wulf w <b> a </b> a abstraction representation <b> abstract </b> abstract data types assertions control specialization correctness generatorsinvariants iteration statements modular decomposition program specifications programming languages programming methodology proofs correctness types verification 4.20 5.24 ca770803 jb december 28 1977 759cacm-2920.html: game interpretation deadlock avoidance <b> problem </b> problem deadlock avoidance <b> problem </b> problem defined informally determination priori information <b> processes </b> processes resources operating system etc safe situations realized endangering smooth running systemcacm-2568.html: graph formulation school scheduling algorithm <b> problem </b> problem classically titled <b> the </b> the examination schedule <b> problem </b> problem takes forms literaturecacm-0069.html: statistical programs ibm 650-part collection <b> descriptions </b> descriptions statistical programs university computing centers ibm 650scacm-1665.html: cacm december 1968 johnson w l porter j h ackley s <b> i </b> i ross d t character string compiler finite-state automata finite-state machine lexical processor nondeterministic machine parsing plex structure regular expressionssequential machine syntactic analysis 3.63 3.75 4.12 5.22 5.24 5.31 ca681201 jb february 21 1978 219 pmcacm-2666.html: cacm april 1974 smith g sefton <b> i </b> i m combinatorial multi-index <b> problem </b> problem conditions schedule school timetable timetable 3.51 5.39 ca740404 jb january 18 1978 1002cacm-2541.html: overview ispl computer system design paper explores advantages concurrent design language, operating system, machine (via microcode) create interactive programming laboratory.cacm-2060.html: gedanken-a simple typeless language based principle completeness reference concept gedanken experimental programming language characteristics.cacm-2376.html: synchronization <b> communicating </b> communicating <b> processes </b> processes formalization well-defined synchronization mechanism prove concurrently running <b> processes </b> processes system communicate correctlycacm-3120.html: <b> work </b> work compiler-writer easier conceptually practice forget problems outset avoids special processing <b> problem </b> problemcacm-2438.html: model stack implementation multiple environments control access <b> environment </b> environment structures require storage <b> procedure </b> procedure activation exist times control nested <b> procedure </b> procedure activatedcacm-1534.html: system designed control data 3600 large drum backing store intended allow integration <b> remote </b> remote console display subsystem conventional job stack <b> environment </b> environmentcacm-2840.html: safety <b> problem </b> problem protection systems model determine situation subject acquire objectcacm-2592.html: cacm october 1974 charnes <b> a </b> a raike w m stutz j d walters <b> a </b> a s linear programming test <b> problem </b> problem generation lp program evaluation lp program validation 5.41 ca741006 jb january 16 1978 1228 pmcacm-3088.html: <b> examples </b> examples provided illustrate equations compute effective processing time record expected timesharing response time balanced unbalanced resource utilization conditionscacm-3105.html: programming languages access control data types <b> abstract </b> abstract data types type checking capabilities 4.20 4.35 ca780502 dh february 26 1979 319 pmcacm-3018.html: optimization <b> problem </b> problem shown equivalent <b> problem </b> problem covering edges graph <b> complete </b> complete subgraphs objective minimizing number <b> complete </b> complete subgraphscacm-1145.html: git-a heuristic program testing pairs directed line graphs isomorphism pair directed line graphs <b> problem </b> problem ascertaining isomorphic efficient algorithmic solution knowncacm-3148.html: high level programming <b> distributed </b> distributed computing programming <b> distributed </b> distributed loosely coupled systems <b> problem </b> problem growing interestcacm-2900.html: <b> problem </b> problem finding optimal set network sites locate copies file-is known be general polynomial <b> complete </b> completecacm-2958.html: <b> abstract </b> abstract data types development data structures <b> abstract </b> abstract data types play significant role development software reliable efficient flexiblecacm-2406.html: paper reviews past <b> work </b> work data definition language describing logical physical aspects datacacm-3103.html: programs designed <b> abstract </b> abstract data types sets lists programmer time saved automating process filling low-level implementation detailscacm-2232.html: object <b> work </b> work clarify word description made precise computer algorithms feature extraction obtained focus <b> theoretical </b> theoretical subject mattercacm-1506.html: monitor designed <b> work </b> work small computer an ibm system 360/30cacm-1350.html: structural <b> descriptions </b> descriptions sdgsx assigned sentence predictive analyzer however structural <b> descriptions </b> descriptions sdgx assigned sentence original context-free grammar gs derivedcacm-1485.html: structure programming languages paper major components programming language identified <b> as </b> as 1 elementary program statement 2 <b> mechanisms </b> mechanisms linking elementary statements together 3 means program obtain data inputscacm-2534.html: design implementation diagnostic compiler pl/i pl/c compiler dialect pl/i.cacm-1530.html: ml/i implemented pdp-7 <b> i </b> i atlas 2 computers intended tool allow users extend existing programming language incorporating statements syntactic forms choosing notationcacm-2396.html: muse model understand simple english <b> processes </b> processes english sentences unrestricted content restricted formatcacm-2916.html: random english pattern length 5 algorithm typically inspect i/4 characters string finding match <b> i </b> i furthermore algorithm implemented <b> on </b> on average fewer i+patlen machine instructions executedcacm-0243.html: <b> processes </b> processes encoding error detection based parity evaluations prescribed dimensions arraycacm-0452.html: nesting statement (algorithm 137) cacm november, 1962 dahm, d. m. wells, m. ca621109 jb march 17, 1978 6:15 pmcacm-1677.html: cacm november 1968 jodeit j g storage allocation storage organization storage control codewords data representation program representation data structures storage protection addressing <b> mechanisms </b> mechanisms paging segmentation handling 4.30 4.40 6.20 ca681102 jb february 21 1978 311 pmcacm-2971.html: features sp/k language chosen encourage structured <b> problem </b> problem solving computers make language easy learn use eliminate confusing redundant constructs make language easy compilecacm-3086.html: complexity computing measure uai bi decision tree complexity computing measure union <b> possibly </b> possibly overlapping intervals shown n log n comparisons linear functions interval endpoints allowedcacm-3188.html: semiotics programming languages based paper semiotics dimension.cacm-1159.html: finally reasons believing machine-independence <b> problem </b> problem substantially diminished trends computer design process convergence hardware design foreseeable software developments lead satisfactory resolutioncacm-1624.html: automatic dimensioning <b> examples </b> examples algorithm accomplish automatic storage reservation need explicit array declarations describedcacm-0477.html: remarks sampling tape file-i cacm october, 1962 muller, m. e. ca621003 jb march 17, 1978 7:23 pmcacm-1371.html: logarithm gamma function algorithm 291 s14 cacm september 1966 pike m c hill <b> i </b> i d ca660909bjb march 23 1978 424 pmcacm-1378.html: pseudo-random numbers algorithm 266 g5 cacm september 1966 hill <b> i </b> i d pike m c ca660909i jb march 23 1978 646 pmcacm-1407.html: confidence interval ratio algorithm 289 g1 cacm july 1966 hill <b> i </b> i d pike m c ca660707c jb march 23 1978 707 pmcacm-1575.html: incomplete beta ratio algorithm 179 s14 cacm june 1967 pike m c hill <b> i </b> i d ca670607c jb march 23 1978 329 pmcacm-2448.html: reversible execution cacm september, 1973 zelkowitz, m. v. debugging, pl/i, reversible execution, backtracking 4.22 4.42 ca730907 jb january 23, 1978 8:54cacm-2449.html: technique offers deterministic solution <b> problem </b> problem handled nondeterministic manner pl/i cobol compilerscacm-1323.html: correspondence algol 60 churchs lambda-notation part <b> i </b> i paper describes semantics algol 60 formalized establishing correspondence expressions algol 60 expressions modified form churchs l-notationcacm-2080.html: system nucleus simulates <b> environment </b> environment program execution input/output handled uniformly parallel cooperating process escacm-3127.html: thoth, portable real-time operating system thoth isa real-time operating system designed portable large set machines.cacm-1742.html: <b> work </b> work efficiently channel sufficient number instructions understood small processor powerful channelcacm-2705.html: promising avenues <b> work </b> work wide influence seen high quality program literature iecacm-2606.html: cacm september 1974 willers <b> i </b> i m ordinary differential equations initial <b> problem </b> problem integration taylor series singularities continued fractions program comparison 5.17 ca740902 jb january 17 1978 906cacm-1695.html: cacm september 1968 dill j c randall d l richer <b> i </b> i biological modeling data analysis discrete system simulation library systems modeling network simulation neural networks neurophysiological models on-line simulation simulation 3.12 3.19 3.29 3.65 ca680906 jb february 22 1978 856cacm-2870.html: lattice model secure information flow paper investigates <b> mechanisms </b> mechanisms guarantee secure information flow computer systemcacm-3108.html: economical encoding commas strings method insertion delimiters strings symbols presented.cacm-3171.html: cacm october 1979 klint p line number administration diagnostic messages <b> abstract </b> abstract machine code 4.12 4.13 4.20 4.42 ca791004 db january 17 1980 957cacm-2969.html: optimal program data locations computer networks optimization <b> procedure </b> procedure allocation program data computer network presentedcacm-1905.html: simplex method linear programming lu decomposition standard computer <b> implementations </b> implementations dantzigs simplex method linear programming based forming inverse basic matrix updating inverse step methodcacm-2820.html: <b> complete </b> complete syntax checking semantic analysis performed program entered subsequently editedcacm-2931.html: remains showing <b>abstract</b> abstract conceptualizations <b>or</b> or cannot actualized say unified theory
cacm-2851.html: <b>examples</b> examples presented induction principle demonstrate proofs mutual exclusion
cacm-3128.html: synchronization mechanism proposed <b>abstract</b> abstract objects called eventcounts sequencers <b>processes</b> processes control ordering events directly mutual exclusion protect manipulations shared variables control ordering events
cacm-1135.html: stresses structural analysis class <b>processes</b> processes represented languages <b>opposed</b> opposed emphasizing formal ie contents-independent syntactical definitions
cacm-2939.html: abstraction <b>mechanisms</b> mechanisms clu clu programming language designed support abstractions program construction
cacm-2895.html: language formal <b>problem</b> problem specification language tended behavior <b>communicating</b> communicating parallel <b>processes</b> processes described
cacm-3049.html: simply extended modified batch <b>environment</b> environment graphical system sembegs sembegs <b>complete</b> complete batch <b>environment</b> environment graphical system components handling graphical data files displaying contents variety graphical hardware performing graphical batch input operations
cacm-3043.html: paper <b>examples</b> examples <b>distributed</b> distributed <b>processes</b> processes shows include procedures coroutines classes monitors <b>processes</b> processes semaphores buffers path expressions input/output special cases
cacm-2377.html: <b>mechanisms</b> mechanisms allow cross-ring <b>calls</b> calls subsequent occur trapping supervisor
cacm-0616.html: hoped report read <b>a</b> a avid interest programming language designers implementors <b>interested</b> interested developing <b>theoretical</b> theoretical approach data processing b interest understanding professional programmers systems analysts c appreciation businessman-analyst-manager
cacm-2519.html: <b>problem</b> problem <b>communicating</b> communicating complex information nature difficulty involved <b>communicating</b> communicating mathematical results scientists computer based information retrieval system examined
cacm-2439.html: cacm october 1973 mcgeachie j s dtss multiple terminals <b>remote</b> remote terminals <b>remote</b> remote consoles time-sharing on-line interaction on-line games 3.81 4.32 ca731001 jb january 23 1978 833
cacm-2536.html: cacm march 1973 feinroth y franceschini e goldstein m telecommunications minicomputer front-end processor <b>remote</b> remote job entry <b>remote</b> remote terminals 3.81 4.32 4.41 ca730303 jb january 24 1978 1123
cacm-1588.html: list-processing languages suffered inability deal directly complex data structures and/or inability perform <b>complete</b> complete range programming language operations data list structures
cacm-3057.html: optimal togram matching monotone gray level transformation paper investigates <b>problem</b> problem optimal togram matching monotone gray level transformation assigns picture points gray level gray level ti j ti tj
cacm-2342.html: interference <b>communicating</b> communicating parallel <b>processes</b> processes kinds interference <b>communicating</b> communicating parallel <b>processes</b> processes examined dijkstra knuth others
cacm-2721.html: order study relationships ecological <b>mechanisms</b> mechanisms involved simulation parameters varied illustrating response ecosystem conditions including types chemical thermal pollution
cacm-2932.html: complexity computations framework research theory complexity computations described, emphasizing terrelation seemingly diverse problems methods.
cacm-2684.html: detailed presentation application define <b>abstract</b> abstract syntax translations languages previous paper author
cacm-3141.html: improved algorithm decentralized extrema-finding circular configurations <b>processes</b> processes note presents improvement lelanns algorithm finding largest <b>or</b> or smallest set uniquely numbered <b>processes</b> processes arranged circle central controller exists number <b>processes</b> processes known priori
cacm-1099.html: intense training constant experience locating objects unseen <b>environment</b> environment superbly trained memory blind brings <b>work</b> work programming skills sighted need acquire
cacm-2905.html: method remainder reduction method <b>complete</b> complete sense give minimal <b>or</b> or minimal tables kind set
cacm-2233.html: <b>work</b> work completed help univac 1108 includes numerous analytical studies beale cyphers types simulations
cacm-1727.html: easier estimate sij quantities pijsijci/sumsij j1n ci arbitrary positive constant <b>i</b> i pij <b>are</b> are <b>i</b> i proportional sij estimation pij easier estimate probabilities events instruction executed instruction ii
cacm-2915.html: cacm november 1977 lee j <b>a</b> a n programming languages standards formalisms formal <b>descriptions</b> descriptions fortran cobol pl/i basic vienna definition language vdl 2.4 4.2 4.29 4.6 5.23 ca771101 jb december 27 1977 810
cacm-2949.html: cacm july 1977 tajibnapis w d <b>distributed</b> distributed computer network correctness proofs computer networks <b>distributed</b> distributed control network topology routing <b>problem</b> problem networks <b>distributed</b> distributed operating system store forward packet switching store forward message switching traffic control 3.81 4.32 ca770703 jb december 28 1977 1159
cacm-2816.html: optimal reorganization <b>distributed</b> distributed space disk database organizations cost accessing database increase due structural caused updates insertions
cacm-0409.html: cl-1 <b>environment</b> environment compiler flexible large-scale programming system facilitate solution information processing problems provide intercommunication programs and/or programmers developed realized ibm 709/7090 computer
cacm-1681.html: easy englisha language information retrieval <b>remote</b> remote typewriter console easy english natural command language designed simplify communication man machine <b>remote</b> remote typewriter console
cacm-1014.html: experimenter <b>interested</b> interested interactions impossible ignore experimental designs <b>problem</b> problem getting error terms
cacm-2371.html: system interprocess communication resource sharing computer network system communication <b>processes</b> processes time-sharing system communication system extended <b>processes</b> processes <b>distributed</b> distributed computer network
cacm-1012.html: formal parsing system vutr consists finite <b>disjoint</b> disjoint vocabularies t many-many map u t recursive set strings called syntactic sentence classes
cacm-2890.html: cacm january 1976 agnew c e routing algorithms adaptive routing quadratic routing alternate routing store-and-forward network <b>distributed</b> distributed network computer network message switching 3.81 8.0 8.1 8.3 ca760103 jb january 5 1978 1037
cacm-2701.html: fast linear algorithm global flow analysis <b>abstract</b> abstract only-complete paper jacm 23,1 january 1976 algorithm global flow analysis reducible graphs presented
cacm-3021.html: security system rests part difficulty factoring published divisor n cacm february 1978 rivest r shamir <b>a</b> a adleman l digital signatures public-key cryptosystems privacy authentication security factorization prime number electronic mail <b>message-passing</b> message-passing electronic funds transfer cryptography
cacm-1943.html: <b>complete</b> complete elliptic integrals algorithm 165 s21 cacm january,1969 farkas <b>i</b> i special functions <b>complete</b> complete elliptic integral kind <b>complete</b> complete elliptic integral kind 5.12 ca690106 jb february 20 1978 1154
cacm-1595.html: fundamental results established leading algorithm enumerating finite topologies computed results 7 interesting side result computational <b>work</b> work unearthing <b>theoretical</b> theoretical error induced literature computer combinatorics represents chronologically early application side result underscores continuing usefulness area
cacm-1470.html: structure programming languages identified major components programming language 1 elementary program statement 2 <b>mechanisms</b> mechanisms linking elementary statements together 3 means program obtain data inputs
cacm-1458.html: online programming transition made line online programming, number working conditions noted.
cacm-2742.html: improved event-scanning <b>mechanisms</b> mechanisms discrete event simulation simulation models large complex real-world applications occasionally earned reputation eating hours computer time
cacm-1931.html: application <b>i</b> i determinants program test set functions form chebyshev system presented
cacm-2940.html: cacm august 1977 shaw m wulf w <b>a</b> a abstraction representation <b>abstract</b> abstract data types assertions control specialization correctness generatorsinvariants iteration statements modular decomposition program specifications programming languages programming methodology proofs correctness types verification 4.20 5.24 ca770803 jb december 28 1977 759
cacm-2920.html: game interpretation deadlock avoidance <b>problem</b> problem deadlock avoidance <b>problem</b> problem defined informally determination priori information <b>processes</b> processes resources operating system etc safe situations realized endangering smooth running system
cacm-2568.html: graph formulation school scheduling algorithm <b>problem</b> problem classically titled <b>the</b> the examination schedule <b>problem</b> problem takes forms literature
cacm-0069.html: statistical programs ibm 650-part collection <b>descriptions</b> descriptions statistical programs university computing centers ibm 650s
cacm-1665.html: cacm december 1968 johnson w l porter j h ackley s <b>i</b> i ross d t character string compiler finite-state automata finite-state machine lexical processor nondeterministic machine parsing plex structure regular expressionssequential machine syntactic analysis 3.63 3.75 4.12 5.22 5.24 5.31 ca681201 jb february 21 1978 219 pm
cacm-2666.html: cacm april 1974 smith g sefton <b>i</b> i m combinatorial multi-index <b>problem</b> problem conditions schedule school timetable timetable 3.51 5.39 ca740404 jb january 18 1978 1002
cacm-2541.html: overview ispl computer system design paper explores advantages concurrent design language, operating system, machine (via microcode) create interactive programming laboratory.
cacm-2060.html: gedanken-a simple typeless language based principle completeness reference concept gedanken experimental programming language characteristics.
cacm-2376.html: synchronization <b>communicating</b> communicating <b>processes</b> processes formalization well-defined synchronization mechanism prove concurrently running <b>processes</b> processes system communicate correctly
cacm-3120.html: <b>work</b> work compiler-writer easier conceptually practice forget problems outset avoids special processing <b>problem</b> problem
cacm-2438.html: model stack implementation multiple environments control access <b>environment</b> environment structures require storage <b>procedure</b> procedure activation exist times control nested <b>procedure</b> procedure activated
cacm-1534.html: system designed control data 3600 large drum backing store intended allow integration <b>remote</b> remote console display subsystem conventional job stack <b>environment</b> environment
cacm-2840.html: safety <b>problem</b> problem protection systems model determine situation subject acquire object
cacm-2592.html: cacm october 1974 charnes <b>a</b> a raike w m stutz j d walters <b>a</b> a s linear programming test <b>problem</b> problem generation lp program evaluation lp program validation 5.41 ca741006 jb january 16 1978 1228 pm
cacm-3088.html: <b>examples</b> examples provided illustrate equations compute effective processing time record expected timesharing response time balanced unbalanced resource utilization conditions
cacm-3105.html: programming languages access control data types <b>abstract</b> abstract data types type checking capabilities 4.20 4.35 ca780502 dh february 26 1979 319 pm
cacm-3018.html: optimization <b>problem</b> problem shown equivalent <b>problem</b> problem covering edges graph <b>complete</b> complete subgraphs objective minimizing number <b>complete</b> complete subgraphs
cacm-1145.html: git-a heuristic program testing pairs directed line graphs isomorphism pair directed line graphs <b>problem</b> problem ascertaining isomorphic efficient algorithmic solution known
cacm-3148.html: high level programming <b>distributed</b> distributed computing programming <b>distributed</b> distributed loosely coupled systems <b>problem</b> problem growing interest
cacm-2900.html: <b>problem</b> problem finding optimal set network sites locate copies file-is known be general polynomial <b>complete</b> complete
cacm-2958.html: <b>abstract</b> abstract data types development data structures <b>abstract</b> abstract data types play significant role development software reliable efficient flexible
cacm-2406.html: paper reviews past <b>work</b> work data definition language describing logical physical aspects data
cacm-3103.html: programs designed <b>abstract</b> abstract data types sets lists programmer time saved automating process filling low-level implementation details
cacm-2232.html: object <b>work</b> work clarify word description made precise computer algorithms feature extraction obtained focus <b>theoretical</b> theoretical subject matter
cacm-1506.html: monitor designed <b>work</b> work small computer an ibm system 360/30
cacm-1350.html: structural <b>descriptions</b> descriptions sdgsx assigned sentence predictive analyzer however structural <b>descriptions</b> descriptions sdgx assigned sentence original context-free grammar gs derived
cacm-1485.html: structure programming languages paper major components programming language identified <b>as</b> as 1 elementary program statement 2 <b>mechanisms</b> mechanisms linking elementary statements together 3 means program obtain data inputs
cacm-2534.html: design implementation diagnostic compiler pl/i pl/c compiler dialect pl/i.
cacm-1530.html: ml/i implemented pdp-7 <b>i</b> i atlas 2 computers intended tool allow users extend existing programming language incorporating statements syntactic forms choosing notation
cacm-2396.html: muse model understand simple english <b>processes</b> processes english sentences unrestricted content restricted format
cacm-2916.html: random english pattern length 5 algorithm typically inspect i/4 characters string finding match <b>i</b> i furthermore algorithm implemented <b>on</b> on average fewer i+patlen machine instructions executed
cacm-0243.html: <b>processes</b> processes encoding error detection based parity evaluations prescribed dimensions array
cacm-0452.html: nesting statement (algorithm 137) cacm november, 1962 dahm, d. m. wells, m. ca621109 jb march 17, 1978 6:15 pm
cacm-1677.html: cacm november 1968 jodeit j g storage allocation storage organization storage control codewords data representation program representation data structures storage protection addressing <b>mechanisms</b> mechanisms paging segmentation handling 4.30 4.40 6.20 ca681102 jb february 21 1978 311 pm
cacm-2971.html: features sp/k language chosen encourage structured <b>problem</b> problem solving computers make language easy learn use eliminate confusing redundant constructs make language easy compile
cacm-3086.html: complexity computing measure uai bi decision tree complexity computing measure union <b>possibly</b> possibly overlapping intervals shown n log n comparisons linear functions interval endpoints allowed
cacm-3188.html: semiotics programming languages based paper semiotics dimension.
cacm-1159.html: finally reasons believing machine-independence <b>problem</b> problem substantially diminished trends computer design process convergence hardware design foreseeable software developments lead satisfactory resolution
cacm-1624.html: automatic dimensioning <b>examples</b> examples algorithm accomplish automatic storage reservation need explicit array declarations described
cacm-0477.html: remarks sampling tape file-i cacm october, 1962 muller, m. e. ca621003 jb march 17, 1978 7:23 pm
cacm-1371.html: logarithm gamma function algorithm 291 s14 cacm september 1966 pike m c hill <b>i</b> i d ca660909bjb march 23 1978 424 pm
cacm-1378.html: pseudo-random numbers algorithm 266 g5 cacm september 1966 hill <b>i</b> i d pike m c ca660909i jb march 23 1978 646 pm
cacm-1407.html: confidence interval ratio algorithm 289 g1 cacm july 1966 hill <b>i</b> i d pike m c ca660707c jb march 23 1978 707 pm
cacm-1575.html: incomplete beta ratio algorithm 179 s14 cacm june 1967 pike m c hill <b>i</b> i d ca670607c jb march 23 1978 329 pm
cacm-2448.html: reversible execution cacm september, 1973 zelkowitz, m. v. debugging, pl/i, reversible execution, backtracking 4.22 4.42 ca730907 jb january 23, 1978 8:54
cacm-2449.html: technique offers deterministic solution <b>problem</b> problem handled nondeterministic manner pl/i cobol compilers
cacm-1323.html: correspondence algol 60 churchs lambda-notation part <b>i</b> i paper describes semantics algol 60 formalized establishing correspondence expressions algol 60 expressions modified form churchs l-notation
cacm-2080.html: system nucleus simulates <b>environment</b> environment program execution input/output handled uniformly parallel cooperating process es
cacm-3127.html: thoth, portable real-time operating system thoth isa real-time operating system designed portable large set machines.
cacm-1742.html: <b>work</b> work efficiently channel sufficient number instructions understood small processor powerful channel
cacm-2705.html: promising avenues <b>work</b> work wide influence seen high quality program literature ie
cacm-2606.html: cacm september 1974 willers <b>i</b> i m ordinary differential equations initial <b>problem</b> problem integration taylor series singularities continued fractions program comparison 5.17 ca740902 jb january 17 1978 906
cacm-1695.html: cacm september 1968 dill j c randall d l richer <b>i</b> i biological modeling data analysis discrete system simulation library systems modeling network simulation neural networks neurophysiological models on-line simulation simulation 3.12 3.19 3.29 3.65 ca680906 jb february 22 1978 856
cacm-2870.html: lattice model secure information flow paper investigates <b>mechanisms</b> mechanisms guarantee secure information flow computer system
cacm-3108.html: economical encoding commas strings method insertion delimiters strings symbols presented.
cacm-3171.html: cacm october 1979 klint p line number administration diagnostic messages <b>abstract</b> abstract machine code 4.12 4.13 4.20 4.42 ca791004 db january 17 1980 957
cacm-2969.html: optimal program data locations computer networks optimization <b>procedure</b> procedure allocation program data computer network presented
cacm-1905.html: simplex method linear programming lu decomposition standard computer <b>implementations</b> implementations dantzigs simplex method linear programming based forming inverse basic matrix updating inverse step method
cacm-2820.html: <b>complete</b> complete syntax checking semantic analysis performed program entered subsequently edited
cacm-2931.html: remains showing <b>abstract</b> conceptualizations <b>or</b> cannot actualized say unified theory
cacm-2851.html: <b>examples</b> presented induction principle demonstrate proofs mutual exclusion
cacm-3128.html: synchronization mechanism proposed <b>abstract</b> objects called eventcounts sequencers <b>processes</b> control ordering events directly mutual exclusion protect manipulations shared variables control ordering events
cacm-1135.html: stresses structural analysis class <b>processes</b> represented languages <b>opposed</b> emphasizing formal ie contents-independent syntactical definitions
cacm-2939.html: abstraction <b>mechanisms</b> clu clu programming language designed support abstractions program construction
cacm-2895.html: language formal <b>problem</b> specification language tended behavior <b>communicating</b> parallel <b>processes</b> described
cacm-3049.html: simply extended modified batch <b>environment</b> graphical system sembegs sembegs <b>complete</b> batch <b>environment</b> graphical system components handling graphical data files displaying contents variety graphical hardware performing graphical batch input operations
cacm-3043.html: paper <b>examples</b> <b>distributed</b> <b>processes</b> shows include procedures coroutines classes monitors <b>processes</b> semaphores buffers path expressions input/output special cases
cacm-2377.html: <b>mechanisms</b> allow cross-ring <b>calls</b> subsequent occur trapping supervisor
cacm-0616.html: hoped report read <b>a</b> avid interest programming language designers implementors <b>interested</b> developing <b>theoretical</b> approach data processing b interest understanding professional programmers systems analysts c appreciation businessman-analyst-manager
cacm-2519.html: <b>problem</b> <b>communicating</b> complex information nature difficulty involved <b>communicating</b> mathematical results scientists computer based information retrieval system examined
cacm-2439.html: cacm october 1973 mcgeachie j s dtss multiple terminals <b>remote</b> terminals <b>remote</b> consoles time-sharing on-line interaction on-line games 3.81 4.32 ca731001 jb january 23 1978 833
cacm-2536.html: cacm march 1973 feinroth y franceschini e goldstein m telecommunications minicomputer front-end processor <b>remote</b> job entry <b>remote</b> terminals 3.81 4.32 4.41 ca730303 jb january 24 1978 1123
cacm-1588.html: list-processing languages suffered inability deal directly complex data structures and/or inability perform <b>complete</b> range programming language operations data list structures
cacm-3057.html: optimal togram matching monotone gray level transformation paper investigates <b>problem</b> optimal togram matching monotone gray level transformation assigns picture points gray level gray level ti j ti tj
cacm-2342.html: interference <b>communicating</b> parallel <b>processes</b> kinds interference <b>communicating</b> parallel <b>processes</b> examined dijkstra knuth others
cacm-2721.html: order study relationships ecological <b>mechanisms</b> involved simulation parameters varied illustrating response ecosystem conditions including types chemical thermal pollution
cacm-2932.html: complexity computations framework research theory complexity computations described, emphasizing terrelation seemingly diverse problems methods.
cacm-2684.html: detailed presentation application define <b>abstract</b> syntax translations languages previous paper author
cacm-3141.html: improved algorithm decentralized extrema-finding circular configurations <b>processes</b> note presents improvement lelanns algorithm finding largest <b>or</b> smallest set uniquely numbered <b>processes</b> arranged circle central controller exists number <b>processes</b> known priori
cacm-1099.html: intense training constant experience locating objects unseen <b>environment</b> superbly trained memory blind brings <b>work</b> programming skills sighted need acquire
cacm-2905.html: method remainder reduction method <b>complete</b> sense give minimal <b>or</b> minimal tables kind set
cacm-2233.html: <b>work</b> completed help univac 1108 includes numerous analytical studies beale cyphers types simulations
cacm-1727.html: easier estimate sij quantities pijsijci/sumsij j1n ci arbitrary positive constant <b>i</b> pij <b>are</b> <b>i</b> proportional sij estimation pij easier estimate probabilities events instruction executed instruction ii
cacm-2915.html: cacm november 1977 lee j <b>a</b> n programming languages standards formalisms formal <b>descriptions</b> fortran cobol pl/i basic vienna definition language vdl 2.4 4.2 4.29 4.6 5.23 ca771101 jb december 27 1977 810
cacm-2949.html: cacm july 1977 tajibnapis w d <b>distributed</b> computer network correctness proofs computer networks <b>distributed</b> control network topology routing <b>problem</b> networks <b>distributed</b> operating system store forward packet switching store forward message switching traffic control 3.81 4.32 ca770703 jb december 28 1977 1159
cacm-2816.html: optimal reorganization <b>distributed</b> space disk database organizations cost accessing database increase due structural caused updates insertions
cacm-0409.html: cl-1 <b>environment</b> compiler flexible large-scale programming system facilitate solution information processing problems provide intercommunication programs and/or programmers developed realized ibm 709/7090 computer
cacm-1681.html: easy englisha language information retrieval <b>remote</b> typewriter console easy english natural command language designed simplify communication man machine <b>remote</b> typewriter console
cacm-1014.html: experimenter <b>interested</b> interactions impossible ignore experimental designs <b>problem</b> getting error terms
cacm-2371.html: system interprocess communication resource sharing computer network system communication <b>processes</b> time-sharing system communication system extended <b>processes</b> <b>distributed</b> computer network
cacm-1012.html: formal parsing system vutr consists finite <b>disjoint</b> vocabularies t many-many map u t recursive set strings called syntactic sentence classes
cacm-2890.html: cacm january 1976 agnew c e routing algorithms adaptive routing quadratic routing alternate routing store-and-forward network <b>distributed</b> network computer network message switching 3.81 8.0 8.1 8.3 ca760103 jb january 5 1978 1037
cacm-2701.html: fast linear algorithm global flow analysis <b>abstract</b> only-complete paper jacm 23,1 january 1976 algorithm global flow analysis reducible graphs presented
cacm-3021.html: security system rests part difficulty factoring published divisor n cacm february 1978 rivest r shamir <b>a</b> adleman l digital signatures public-key cryptosystems privacy authentication security factorization prime number electronic mail <b>message-passing</b> electronic funds transfer cryptography
cacm-1943.html: <b>complete</b> elliptic integrals algorithm 165 s21 cacm january,1969 farkas <b>i</b> special functions <b>complete</b> elliptic integral kind <b>complete</b> elliptic integral kind 5.12 ca690106 jb february 20 1978 1154
cacm-1595.html: fundamental results established leading algorithm enumerating finite topologies computed results 7 interesting side result computational <b>work</b> unearthing <b>theoretical</b> error induced literature computer combinatorics represents chronologically early application side result underscores continuing usefulness area
cacm-1470.html: structure programming languages identified major components programming language 1 elementary program statement 2 <b>mechanisms</b> linking elementary statements together 3 means program obtain data inputs
cacm-1458.html: online programming transition made line online programming, number working conditions noted.
cacm-2742.html: improved event-scanning <b>mechanisms</b> discrete event simulation simulation models large complex real-world applications occasionally earned reputation eating hours computer time
cacm-1931.html: application <b>i</b> determinants program test set functions form chebyshev system presented
cacm-2940.html: cacm august 1977 shaw m wulf w <b>a</b> abstraction representation <b>abstract</b> data types assertions control specialization correctness generatorsinvariants iteration statements modular decomposition program specifications programming languages programming methodology proofs correctness types verification 4.20 5.24 ca770803 jb december 28 1977 759
cacm-2920.html: game interpretation deadlock avoidance <b>problem</b> deadlock avoidance <b>problem</b> defined informally determination priori information <b>processes</b> resources operating system etc safe situations realized endangering smooth running system
cacm-2568.html: graph formulation school scheduling algorithm <b>problem</b> classically titled <b>the</b> examination schedule <b>problem</b> takes forms literature
cacm-0069.html: statistical programs ibm 650-part collection <b>descriptions</b> statistical programs university computing centers ibm 650s
cacm-1665.html: cacm december 1968 johnson w l porter j h ackley s <b>i</b> ross d t character string compiler finite-state automata finite-state machine lexical processor nondeterministic machine parsing plex structure regular expressionssequential machine syntactic analysis 3.63 3.75 4.12 5.22 5.24 5.31 ca681201 jb february 21 1978 219 pm
cacm-2666.html: cacm april 1974 smith g sefton <b>i</b> m combinatorial multi-index <b>problem</b> conditions schedule school timetable timetable 3.51 5.39 ca740404 jb january 18 1978 1002
cacm-2541.html: overview ispl computer system design paper explores advantages concurrent design language, operating system, machine (via microcode) create interactive programming laboratory.
cacm-2060.html: gedanken-a simple typeless language based principle completeness reference concept gedanken experimental programming language characteristics.
cacm-2376.html: synchronization <b>communicating</b> <b>processes</b> formalization well-defined synchronization mechanism prove concurrently running <b>processes</b> system communicate correctly
cacm-3120.html: <b>work</b> compiler-writer easier conceptually practice forget problems outset avoids special processing <b>problem</b>
cacm-2438.html: model stack implementation multiple environments control access <b>environment</b> structures require storage <b>procedure</b> activation exist times control nested <b>procedure</b> activated
cacm-1534.html: system designed control data 3600 large drum backing store intended allow integration <b>remote</b> console display subsystem conventional job stack <b>environment</b>
cacm-2840.html: safety <b>problem</b> protection systems model determine situation subject acquire object
cacm-2592.html: cacm october 1974 charnes <b>a</b> raike w m stutz j d walters <b>a</b> s linear programming test <b>problem</b> generation lp program evaluation lp program validation 5.41 ca741006 jb january 16 1978 1228 pm
cacm-3088.html: <b>examples</b> provided illustrate equations compute effective processing time record expected timesharing response time balanced unbalanced resource utilization conditions
cacm-3105.html: programming languages access control data types <b>abstract</b> data types type checking capabilities 4.20 4.35 ca780502 dh february 26 1979 319 pm
cacm-3018.html: optimization <b>problem</b> shown equivalent <b>problem</b> covering edges graph <b>complete</b> subgraphs objective minimizing number <b>complete</b> subgraphs
cacm-1145.html: git-a heuristic program testing pairs directed line graphs isomorphism pair directed line graphs <b>problem</b> ascertaining isomorphic efficient algorithmic solution known
cacm-3148.html: high level programming <b>distributed</b> computing programming <b>distributed</b> loosely coupled systems <b>problem</b> growing interest
cacm-2900.html: <b>problem</b> finding optimal set network sites locate copies file-is known be general polynomial <b>complete</b>
cacm-2958.html: <b>abstract</b> data types development data structures <b>abstract</b> data types play significant role development software reliable efficient flexible
cacm-2406.html: paper reviews past <b>work</b> data definition language describing logical physical aspects data
cacm-3103.html: programs designed <b>abstract</b> data types sets lists programmer time saved automating process filling low-level implementation details
cacm-2232.html: object <b>work</b> clarify word description made precise computer algorithms feature extraction obtained focus <b>theoretical</b> subject matter
cacm-1506.html: monitor designed <b>work</b> small computer an ibm system 360/30
cacm-1350.html: structural <b>descriptions</b> sdgsx assigned sentence predictive analyzer however structural <b>descriptions</b> sdgx assigned sentence original context-free grammar gs derived
cacm-1485.html: structure programming languages paper major components programming language identified <b>as</b> 1 elementary program statement 2 <b>mechanisms</b> linking elementary statements together 3 means program obtain data inputs
cacm-2534.html: design implementation diagnostic compiler pl/i pl/c compiler dialect pl/i.
cacm-1530.html: ml/i implemented pdp-7 <b>i</b> atlas 2 computers intended tool allow users extend existing programming language incorporating statements syntactic forms choosing notation
cacm-2396.html: muse model understand simple english <b>processes</b> english sentences unrestricted content restricted format
cacm-2916.html: random english pattern length 5 algorithm typically inspect i/4 characters string finding match <b>i</b> furthermore algorithm implemented <b>on</b> average fewer i+patlen machine instructions executed
cacm-0243.html: <b>processes</b> encoding error detection based parity evaluations prescribed dimensions array
cacm-0452.html: nesting statement (algorithm 137) cacm november, 1962 dahm, d. m. wells, m. ca621109 jb march 17, 1978 6:15 pm
cacm-1677.html: cacm november 1968 jodeit j g storage allocation storage organization storage control codewords data representation program representation data structures storage protection addressing <b>mechanisms</b> paging segmentation handling 4.30 4.40 6.20 ca681102 jb february 21 1978 311 pm
cacm-2971.html: features sp/k language chosen encourage structured <b>problem</b> solving computers make language easy learn use eliminate confusing redundant constructs make language easy compile
cacm-3086.html: complexity computing measure uai bi decision tree complexity computing measure union <b>possibly</b> overlapping intervals shown n log n comparisons linear functions interval endpoints allowed
cacm-3188.html: semiotics programming languages based paper semiotics dimension.
cacm-1159.html: finally reasons believing machine-independence <b>problem</b> substantially diminished trends computer design process convergence hardware design foreseeable software developments lead satisfactory resolution
cacm-1624.html: automatic dimensioning <b>examples</b> algorithm accomplish automatic storage reservation need explicit array declarations described
cacm-0477.html: remarks sampling tape file-i cacm october, 1962 muller, m. e. ca621003 jb march 17, 1978 7:23 pm
cacm-1371.html: logarithm gamma function algorithm 291 s14 cacm september 1966 pike m c hill <b>i</b> d ca660909bjb march 23 1978 424 pm
cacm-1378.html: pseudo-random numbers algorithm 266 g5 cacm september 1966 hill <b>i</b> d pike m c ca660909i jb march 23 1978 646 pm
cacm-1407.html: confidence interval ratio algorithm 289 g1 cacm july 1966 hill <b>i</b> d pike m c ca660707c jb march 23 1978 707 pm
cacm-1575.html: incomplete beta ratio algorithm 179 s14 cacm june 1967 pike m c hill <b>i</b> d ca670607c jb march 23 1978 329 pm
cacm-2448.html: reversible execution cacm september, 1973 zelkowitz, m. v. debugging, pl/i, reversible execution, backtracking 4.22 4.42 ca730907 jb january 23, 1978 8:54
cacm-2449.html: technique offers deterministic solution <b>problem</b> handled nondeterministic manner pl/i cobol compilers
cacm-1323.html: correspondence algol 60 churchs lambda-notation part <b>i</b> paper describes semantics algol 60 formalized establishing correspondence expressions algol 60 expressions modified form churchs l-notation
cacm-2080.html: system nucleus simulates <b>environment</b> program execution input/output handled uniformly parallel cooperating process es
cacm-3127.html: thoth, portable real-time operating system thoth isa real-time operating system designed portable large set machines.
cacm-1742.html: <b>work</b> efficiently channel sufficient number instructions understood small processor powerful channel
cacm-2705.html: promising avenues <b>work</b> wide influence seen high quality program literature ie
cacm-2606.html: cacm september 1974 willers <b>i</b> m ordinary differential equations initial <b>problem</b> integration taylor series singularities continued fractions program comparison 5.17 ca740902 jb january 17 1978 906
cacm-1695.html: cacm september 1968 dill j c randall d l richer <b>i</b> biological modeling data analysis discrete system simulation library systems modeling network simulation neural networks neurophysiological models on-line simulation simulation 3.12 3.19 3.29 3.65 ca680906 jb february 22 1978 856
cacm-2870.html: lattice model secure information flow paper investigates <b>mechanisms</b> guarantee secure information flow computer system
cacm-3108.html: economical encoding commas strings method insertion delimiters strings symbols presented.
cacm-3171.html: cacm october 1979 klint p line number administration diagnostic messages <b>abstract</b> machine code 4.12 4.13 4.20 4.42 ca791004 db january 17 1980 957
cacm-2969.html: optimal program data locations computer networks optimization <b>procedure</b> allocation program data computer network presented
cacm-1905.html: simplex method linear programming lu decomposition standard computer <b>implementations</b> dantzigs simplex method linear programming based forming inverse basic matrix updating inverse step method
cacm-2820.html: <b>complete</b> syntax checking semantic analysis performed program entered subsequently edited
