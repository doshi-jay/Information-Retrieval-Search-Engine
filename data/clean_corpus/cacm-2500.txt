a practical approach to managing resources and avoiding deadlocks resource scheduling and allocation can be expensive with regard to time and space in multiprogramming or time-sharing environments involving large numbers of tasks and resources with conflicting requirements detection and/or prevention of deadlocks can require massive amounts of additional overhead if efficient usage of resources is to be maintained a resource management program is described which uses linked lists along with other techniques to overcome a large portion of this overhead the program which is currently running as part of a large scale general purpose operating system keeps resources relatively active but does not detect or prevent all deadlocks in its implemented state certain changes which would permit more comprehensive levels of deadlock prevention/detection at additional cost have not been incorporated in the running system due to the infrequency of deadlock situations cacm may 1973 frailey d j deadlock resource allocation scheduling resource management multiprogramming time-sharing multiprocessing deadly embrace 4.30 4.32 ca730520 jb january 23 1978 4:03 pm