automatic generation of efficient lexical processors using finite state techniques the practical application of the theory of finite-state automata to automatically generate lexical processors is dealt with in this tutorial article by the use of the aed rword system developed at m as part of the aed-1 system this system accepts as input description of the multicharacter items or of words allowable in a language given in terms of a subset of regular expressions the output of the system is a lexical processor which reads a string of characters and combines them into the items as defined by the regular expressions each output item is identified by a code number together with a pointer to a block of storage containing the characters and character count in the item the processors produced by the system are based on finite-state machines each state of a machine corresponds to a unique condition in the lexical processing of a character string at each state a character is read and the machine changes to a new state at each transition appropriate actions are taken based on the particular character read the system has been in operation since 1966 and processors generated have compared favorably in speed to carefully hand-coded programs to accomplish the same task lexical processors for aed-o and mad are among the many which have been produced the techniques employed are independent of the nature of the items being evaluated if the word events is substituted for character string these processors may be described as generalized decision-making mechanisms based upon an ordered sequence of events this allows the system to be used in a range of applications outside the area of lexical processing however convenient these advantages may be speed is the most important consideration in designing a system for automatic generation of a lexical processor the goal was a processor which completely eliminated backup or rereading which was nearly as fast as hand-coded processors which would analyze the language and detect errors and which would be convenient and easy to use cacm december 1968 johnson w l porter j h ackley s i ross d t character string compiler finite-state automata finite-state machine lexical processor nondeterministic machine parsing plex structure regular expressionssequential machine syntactic analysis 3.63 3.75 4.12 5.22 5.24 5.31 ca681201 jb february 21 1978 2:19 pm